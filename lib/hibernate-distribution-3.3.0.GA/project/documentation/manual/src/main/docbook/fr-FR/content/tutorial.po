msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-08-14 15:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: tutorial.xml:33
#, no-c-format
msgid "Introduction to Hibernate"
msgstr "Introduction à Hibernate"

#. Tag: title
#: tutorial.xml:36
#, no-c-format
msgid "Preface"
msgstr "Préface"

#. Tag: para
#: tutorial.xml:38
#, no-c-format
msgid ""
"This chapter is an introduction to Hibernate by way of a tutorial, intended "
"for new users of Hibernate. We start with a simple application using an in-"
"memory database. We build the application in small, easy to understand "
"steps. The tutorial is based on another, earlier one developed by Michael "
"Gloegl. All code is contained in the <filename>tutorials/web</filename> "
"directory of the project source."
msgstr ""

#. Tag: para
#: tutorial.xml:51
#, no-c-format
msgid ""
"This tutorial expects the user have knowledge of both Java and SQL. If you "
"are new or uncomfortable with either, it is advised that you start with a "
"good introduction to that technology prior to attempting to learn Hibernate. "
"It will save time and effort in the long run."
msgstr ""

#. Tag: para
#: tutorial.xml:61
#, no-c-format
msgid ""
"There is another tutorial/example application in the <filename>/tutorials/"
"eg</filename> directory of the project source. That example is console based "
"and as such would not have the dependency on a servlet container to execute. "
"The basic setup is the same as the instructions below."
msgstr ""

#. Tag: title
#: tutorial.xml:71
#, no-c-format
msgid "Part 1 - The first Hibernate Application"
msgstr "Partie 1 - Première application Hibernate"

#. Tag: para
#: tutorial.xml:73
#, no-c-format
msgid ""
"Let's assume we need a small database application that can store events we "
"want to attend, and information about the host(s) of these events. We will "
"use an in-memory, Java database named HSQLDB to avoid describing "
"installation/setup of any particular database servers. Feel free to tweak "
"this tutorial to use whatever database you feel comfortable using."
msgstr ""

#. Tag: para
#: tutorial.xml:82
#, no-c-format
msgid ""
"The first thing we need to do is set up our development environment, and "
"specifically to setup all the required dependencies to Hibernate as well as "
"other libraries. Hibernate is built using Maven which amongst other features "
"provides <literal>dependecy management</literal>; moreover it provides "
"<emphasis>transitive</emphasis> <literal>dependecy management</literal> "
"which simply means that to use Hibernate we can simply define our dependency "
"on Hibernate, Hibernate itself defines the dependencies it needs which then "
"become transitive dependencies of our project."
msgstr ""

#. Tag: programlisting
#: tutorial.xml:94
#, no-c-format
msgid ""
"<![CDATA[.\n"
"<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven."
"apache.org/xsd/maven-4.0.0.xsd\">\n"
"\n"
"    ...\n"
"\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>${groupId}</groupId>\n"
"            <artifactId>hibernate-core</artifactId>\n"
"        </dependency>\n"
"\n"
"        <!-- Because this is a web app, we also have a dependency on the "
"servlet api. -->\n"
"        <dependency>\n"
"            <groupId>javax.servlet</groupId>\n"
"            <artifactId>servlet-api</artifactId>\n"
"        </dependency>\n"
"    </dependencies>\n"
"\n"
"</project>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:97
#, no-c-format
msgid ""
"Essentially we are describing here the <filename>/tutorials/web/pom.xml</"
"filename> file. See the <ulink url=\"http://maven.org\">Maven</ulink> site "
"for more information."
msgstr ""

#. Tag: para
#: tutorial.xml:105
#, no-c-format
msgid ""
"While not strictly necessary, most IDEs have integration with Maven to read "
"these POM files and automatically set up a project for you which can save "
"lots of time and effort."
msgstr ""

#. Tag: para
#: tutorial.xml:112
#, no-c-format
msgid ""
"Next we create a class that represents the event we want to store in "
"database."
msgstr ""
"Ensuite, nous créons une classe qui réprésente l'événement que nous voulons "
"stocker dans notre base de données."

#. Tag: title
#: tutorial.xml:117
#, no-c-format
msgid "The first class"
msgstr "La première classe"

#. Tag: para
#: tutorial.xml:119
#, no-c-format
msgid ""
"Our first persistent class is a simple JavaBean class with some properties:"
msgstr ""
"Notre première classe persistante est une simple classe JavaBean avec "
"quelques propriétés :"

#. Tag: programlisting
#: tutorial.xml:123
#, no-c-format
msgid ""
"<![CDATA[package org.hibernate.tutorial.domain;\n"
"\n"
"import java.util.Date;\n"
"\n"
"public class Event {\n"
"    private Long id;\n"
"\n"
"    private String title;\n"
"    private Date date;\n"
"\n"
"    public Event() {}\n"
"\n"
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
"\n"
"    private void setId(Long id) {\n"
"        this.id = id;\n"
"    }\n"
"\n"
"    public Date getDate() {\n"
"        return date;\n"
"    }\n"
"\n"
"    public void setDate(Date date) {\n"
"        this.date = date;\n"
"    }\n"
"\n"
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
"\n"
"    public void setTitle(String title) {\n"
"        this.title = title;\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:125
#, no-c-format
msgid ""
"You can see that this class uses standard JavaBean naming conventions for "
"property getter and setter methods, as well as private visibility for the "
"fields. This is a recommended design - but not required. Hibernate can also "
"access fields directly, the benefit of accessor methods is robustness for "
"refactoring. The no-argument constructor is required to instantiate an "
"object of this class through reflection."
msgstr ""
"Vous pouvez voir que cette classe utilise les conventions de nommage "
"standard JavaBean pour les méthodes getter/setter des propriétés, ainsi "
"qu'une visibilité privée pour les champs. Ceci est la conception recommandée "
"- mais pas obligatoire. Hibernate peut aussi accéder aux champs directement, "
"le bénéfice des méthodes d'accès est la robustesse pour la refonte de code. "
"Le constructeur sans argument est requis pour instancier un objet de cette "
"classe via reflexion."

#. Tag: para
#: tutorial.xml:133
#, no-c-format
msgid ""
"The <literal>id</literal> property holds a unique identifier value for a "
"particular event. All persistent entity classes (there are less important "
"dependent classes as well) will need such an identifier property if we want "
"to use the full feature set of Hibernate. In fact, most applications (esp. "
"web applications) need to distinguish objects by identifier, so you should "
"consider this a feature rather than a limitation. However, we usually don't "
"manipulate the identity of an object, hence the setter method should be "
"private. Only Hibernate will assign identifiers when an object is saved. You "
"can see that Hibernate can access public, private, and protected accessor "
"methods, as well as (public, private, protected) fields directly. The choice "
"is up to you and you can match it to fit your application design."
msgstr ""
"La propriété <literal>id</literal> contient la valeur d'un identifiant "
"unique pour un événement particulier. Toutes les classes d'entités "
"persistantes (ainsi que les classes dépendantes de moindre importance) "
"auront besoin d'une telle propriété identifiante si nous voulons utiliser "
"l'ensemble complet des fonctionnalités d'Hibernate. En fait, la plupart des "
"applications (surtout les applications web) ont besoin de distinguer des "
"objets par des identifiants, donc vous devriez considérer ça comme une "
"fonctionnalité plutôt que comme une limitation. Cependant, nous ne "
"manipulons généralement pas l'identité d'un objet, dorénavant la méthode "
"setter devrait être privée. Seul Hibernate assignera les identifiants "
"lorsqu'un objet est sauvegardé. Vous pouvez voir qu'Hibernate peut accéder "
"aux méthodes publiques, privées et protégées, ainsi qu'aux champs (publics, "
"privés, protégés) directement. Le choix vous est laissé, et vous pouvez "
"l'ajuster à la conception de votre application."

#. Tag: para
#: tutorial.xml:145
#, no-c-format
msgid ""
"The no-argument constructor is a requirement for all persistent classes; "
"Hibernate has to create objects for you, using Java Reflection. The "
"constructor can be private, however, package visibility is required for "
"runtime proxy generation and efficient data retrieval without bytecode "
"instrumentation."
msgstr ""
"Le constructeur sans argument est requis pour toutes les classes "
"persistantes ; Hibernate doit créer des objets pour vous en utilisant la "
"réflexion Java. Le constructeur peut être privé, cependant, la visibilité du "
"paquet est requise pour la génération de proxy à l'exécution et une "
"récupération des données efficaces sans instrumentation du bytecode."

#. Tag: para
#: tutorial.xml:152
#, no-c-format
msgid ""
"Place this Java source file in a directory called <literal>src</literal> in "
"the development folder, and in its correct package. The directory should now "
"look like this:"
msgstr ""
"Placez ce fichier source Java dans un répertoire appelé <literal>src</"
"literal> dans le dossier de développement. Ce répertoire devrait maintenant "
"ressembler à ça :"

#. Tag: programlisting
#: tutorial.xml:157
#, no-c-format
msgid ""
"<![CDATA[.\n"
"+lib\n"
"  <Hibernate and third-party libraries>\n"
"+src\n"
"  +events\n"
"    Event.java]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:159
#, no-c-format
msgid "In the next step, we tell Hibernate about this persistent class."
msgstr ""
"Dans la prochaine étape, nous informons Hibernate de cette classe "
"persistante."

#. Tag: title
#: tutorial.xml:166
#, no-c-format
msgid "The mapping file"
msgstr "Le fichier de mapping"

#. Tag: para
#: tutorial.xml:168
#, no-c-format
msgid ""
"Hibernate needs to know how to load and store objects of the persistent "
"class. This is where the Hibernate mapping file comes into play. The mapping "
"file tells Hibernate what table in the database it has to access, and what "
"columns in that table it should use."
msgstr ""
"Hibernate a besoin de savoir comment charger et stocker des objets d'une "
"classe persistante. C'est là qu'intervient le fichier de mapping Hibernate. "
"Le fichier de mapping indique à Hibernate à quelle table dans la base de "
"données il doit accéder, et quelles colonnes de cette table il devra "
"utiliser."

#. Tag: para
#: tutorial.xml:175
#, no-c-format
msgid "The basic structure of a mapping file looks like this:"
msgstr "La structure basique de ce fichier de mapping ressemble à ça :"

#. Tag: programlisting
#: tutorial.xml:179
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\"?>\n"
"<!DOCTYPE hibernate-mapping PUBLIC\n"
"        \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\n"
"        \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\n"
"\n"
"<hibernate-mapping>\n"
"[...]\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:181
#, no-c-format
msgid ""
"Note that the Hibernate DTD is very sophisticated. You can use it for auto-"
"completion of XML mapping elements and attributes in your editor or IDE. You "
"also should open up the DTD file in your text editor - it's the easiest way "
"to get an overview of all elements and attributes and to see the defaults, "
"as well as some comments. Note that Hibernate will not load the DTD file "
"from the web, but first look it up from the classpath of the application. "
"The DTD file is included in <literal>hibernate3.jar</literal> as well as in "
"the <literal>src/</literal> directory of the Hibernate distribution."
msgstr ""
"Notez que la DTD Hibernate est très sophistiquée. Vous pouvez l'utiliser "
"pour l'auto-complétement des éléments et des attributs de mapping XML dans "
"votre éditeur ou votre IDE. Vous devriez aussi ouvrir le fichier DTD dans "
"votre éditeur de texte - c'est le moyen le plus facile d'obtenir une vue "
"d'ensemble de tous les éléments et attributs, et de voir les valeurs par "
"défaut, ainsi que quelques commentaires. Notez qu'Hibernate ne chargera pas "
"le fichier DTD à partir du web, mais regardera d'abord dans le classpath de "
"l'application. Le fichier DTD est inclus dans <literal>hibernate3.jar</"
"literal> ainsi que dans le répertoire <literal>src</literal> de la "
"distribution Hibernate."

#. Tag: para
#: tutorial.xml:192
#, no-c-format
msgid ""
"We will omit the DTD declaration in future examples to shorten the code. It "
"is of course not optional."
msgstr ""
"Nous omettrons la déclaration de la DTD dans les exemples futurs pour "
"raccourcir le code. Bien sûr il n'est pas optionnel."

#. Tag: para
#: tutorial.xml:197
#, no-c-format
msgid ""
"Between the two <literal>hibernate-mapping</literal> tags, include a "
"<literal>class</literal> element. All persistent entity classes (again, "
"there might be dependent classes later on, which are not first-class "
"entities) need such a mapping, to a table in the SQL database:"
msgstr ""
"Entre les deux balises <literal>hibernate-mapping</literal>, incluez un "
"élément <literal>class</literal>. Toutes les classes d'entités persistantes "
"(encore une fois, il pourrait y avoir des classes dépendantes plus tard, qui "
"ne sont pas des entités mère) ont besoin d'un mapping vers une table de la "
"base de données SQL :"

#. Tag: programlisting
#: tutorial.xml:204
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"\n"
"    <class name=\"events.Event\" table=\"EVENTS\">\n"
"\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:206
#, no-c-format
msgid ""
"So far we told Hibernate how to persist and load object of class "
"<literal>Event</literal> to the table <literal>EVENTS</literal>, each "
"instance represented by a row in that table. Now we continue with a mapping "
"of the unique identifier property to the tables primary key. In addition, as "
"we don't want to care about handling this identifier, we configure "
"Hibernate's identifier generation strategy for a surrogate primary key "
"column:"
msgstr ""
"Plus loin, nous disons à Hibernate comment persister et charger un objet de "
"la classe <literal>Event</literal> dans la table <literal>EVENTS</literal>, "
"chaque instance est représentée par une ligne dans cette table. Maintenant "
"nous continuons avec le mapping de la propriété de l'identifiant unique vers "
"la clef primaire de la table. De plus, comme nous ne voulons pas nous "
"occuper de la gestion de cet identifiant, nous utilisons une stratégie de "
"génération d'identifiant d'Hibernate pour la colonne de la clef primaire "
"subrogée :"

#. Tag: programlisting
#: tutorial.xml:214
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"\n"
"    <class name=\"events.Event\" table=\"EVENTS\">\n"
"        <id name=\"id\" column=\"EVENT_ID\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:216
#, fuzzy, no-c-format
msgid ""
"The <literal>id</literal> element is the declaration of the identifier "
"property, <literal>name=\"id\"</literal> declares the name of the Java "
"property - Hibernate will use the getter and setter methods to access the "
"property. The column attribute tells Hibernate which column of the "
"<literal>EVENTS</literal> table we use for this primary key. The nested "
"<literal>generator</literal> element specifies the identifier generation "
"strategy, in this case we used <literal>native</literal>, which picks the "
"best strategy depending on the configured database (dialect). Hibernate "
"supports database generated, globally unique, as well as application "
"assigned identifiers (or any strategy you have written an extension for)."
msgstr ""
"L'élément <literal>id</literal> est la déclaration de la propriété de "
"l'identifiant, <literal>name=\"id\"</literal> déclare le nom de la propriété "
"Java - Hibernate utilisera les méthodes getter et setter pour accéder à la "
"propriété. L'attribut <literal>column</literal> indique à Hibernate quelle "
"colonne de la table <literal>EVENTS</literal> nous utilisons pour cette clef "
"primaire. L'élément <literal>generator</literal> imbriqué spécifie la "
"stratégie de génération de l'identifiant, dans ce cas nous avons utilisé "
"<literal>increment</literal>, laquelle est une méthode très simple utile "
"surtout pour les tests (et didacticiels). Hibernate supporte aussi les "
"identifiants générés par les bases de données, globalement uniques, ainsi "
"que les identifiants assignés par l'application (ou n'importe quelle "
"stratégie que vous avez écrit en extension)."

#. Tag: para
#: tutorial.xml:229
#, no-c-format
msgid ""
"Finally we include declarations for the persistent properties of the class "
"in the mapping file. By default, no properties of the class are considered "
"persistent:"
msgstr ""
"Finalement nous incluons des déclarations pour les propriétés persistantes "
"de la classe dans le fichier de mapping. Par défaut, aucune propriété de la "
"classe n'est considérée comme persistante :"

#. Tag: programlisting
#: tutorial.xml:235
#, no-c-format
msgid ""
"<![CDATA[\n"
"<hibernate-mapping>\n"
"\n"
"    <class name=\"events.Event\" table=\"EVENTS\">\n"
"        <id name=\"id\" column=\"EVENT_ID\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"date\" type=\"timestamp\" column=\"EVENT_DATE\"/>\n"
"        <property name=\"title\"/>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:237
#, no-c-format
msgid ""
"Just as with the <literal>id</literal> element, the <literal>name</literal> "
"attribute of the <literal>property</literal> element tells Hibernate which "
"getter and setter methods to use. So, in this case, Hibernate will look for "
"<literal>getDate()/setDate()</literal>, as well as <literal>getTitle()/"
"setTitle()</literal>."
msgstr ""
"Comme avec l'élément <literal>id</literal>, l'attribut <literal>name</"
"literal> de l'élément <literal>property</literal> indique à Hibernate quels "
"getters/setters utiliser."

#. Tag: para
#: tutorial.xml:244
#, no-c-format
msgid ""
"Why does the <literal>date</literal> property mapping include the "
"<literal>column</literal> attribute, but the <literal>title</literal> "
"doesn't? Without the <literal>column</literal> attribute Hibernate by "
"default uses the property name as the column name. This works fine for "
"<literal>title</literal>. However, <literal>date</literal> is a reserved "
"keyword in most database, so we better map it to a different name."
msgstr ""
"Pourquoi le mapping de la propriété <literal>date</literal> inclut "
"l'attribut <literal>column</literal>, mais pas <literal>title</literal> ? "
"Sans l'attribut <literal>column</literal> Hibernate utilise par défaut le "
"nom de la propriété comme nom de colonne. Ca fonctionne bien pour "
"<literal>title</literal>. Cependant, <literal>date</literal> est un mot clef "
"réservé dans la plupart des bases de données, donc nous utilisons un nom "
"différent pour le mapping."

#. Tag: para
#: tutorial.xml:253
#, no-c-format
msgid ""
"The next interesting thing is that the <literal>title</literal> mapping also "
"lacks a <literal>type</literal> attribute. The types we declare and use in "
"the mapping files are not, as you might expect, Java data types. They are "
"also not SQL database types. These types are so called <emphasis>Hibernate "
"mapping types</emphasis>, converters which can translate from Java to SQL "
"data types and vice versa. Again, Hibernate will try to determine the "
"correct conversion and mapping type itself if the <literal>type</literal> "
"attribute is not present in the mapping. In some cases this automatic "
"detection (using Reflection on the Java class) might not have the default "
"you expect or need. This is the case with the <literal>date</literal> "
"property. Hibernate can't know if the property (which is of <literal>java."
"util.Date</literal>) should map to a SQL <literal>date</literal>, "
"<literal>timestamp</literal>, or <literal>time</literal> column. We preserve "
"full date and time information by mapping the property with a "
"<literal>timestamp</literal> converter."
msgstr ""
"La prochaine chose intéressante est que le mapping de <literal>title</"
"literal> manque aussi d'un attribut <literal>type</literal>. Les types que "
"nous déclarons et utilisons dans les fichiers de mapping ne sont pas, comme "
"vous pourriez vous y attendre, des types de données Java. Ce ne sont pas, "
"non plus, des types de base de données SQL. Ces types sont donc appelés des "
"<emphasis>types de mapping Hibernate</emphasis>, des convertisseurs qui "
"peuvent traduire des types Java en types SQL et vice versa. De plus, "
"Hibernate tentera de déterminer la bonne conversion et le type de mapping "
"lui-même si l'attribut <literal>type</literal> n'est pas présent dans le "
"mapping. Dans certains cas, cette détection automatique (utilisant la "
"réflexion sur la classe Java) pourrait ne pas donner la valeur attendue ou "
"dont vous avez besoin. C'est le cas avec la propriété <literal>date</"
"literal>. Hibernate ne peut pas savoir si la propriété \"mappera\" une "
"colonne SQL de type <literal>date</literal>, <literal>timestamp</literal> ou "
"<literal>time</literal>. Nous déclarons que nous voulons conserver des "
"informations avec une date complète et l'heure en mappant la propriété avec "
"un <literal>timestamp</literal>."

#. Tag: para
#: tutorial.xml:269
#, no-c-format
msgid ""
"This mapping file should be saved as <literal>Event.hbm.xml</literal>, right "
"in the directory next to the <literal>Event</literal> Java class source "
"file. The naming of mapping files can be arbitrary, however the <literal>hbm."
"xml</literal> suffix is a convention in the Hibernate developer community. "
"The directory structure should now look like this:"
msgstr ""
"Ce fichier de mapping devrait être sauvegardé en tant que <literal>Event.hbm."
"xml</literal>, juste dans le répertoire à côté du fichier source de la "
"classe Java <literal>Event</literal>. Le nommage des fichiers de mapping "
"peut être arbitraire, cependant le suffixe <literal>hbm.xml</literal> est "
"devenu une convention dans la communauté des développeurs Hibernate. La "
"structure du répertoire devrait ressembler à ça :"

#. Tag: programlisting
#: tutorial.xml:277
#, no-c-format
msgid ""
"<![CDATA[.\n"
"+lib\n"
"  <Hibernate and third-party libraries>\n"
"+src\n"
"  +events\n"
"    Event.java\n"
"    Event.hbm.xml]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:279
#, no-c-format
msgid "We continue with the main configuration of Hibernate."
msgstr "Nous poursuivons avec la configuration principale d'Hibernate."

#. Tag: title
#: tutorial.xml:286
#, no-c-format
msgid "Hibernate configuration"
msgstr "Configuration d'Hibernate"

#. Tag: para
#: tutorial.xml:288
#, no-c-format
msgid ""
"We now have a persistent class and its mapping file in place. It is time to "
"configure Hibernate. Before we do this, we will need a database. HSQL DB, a "
"java-based SQL DBMS, can be downloaded from the HSQL DB website(http://"
"hsqldb.org/). Actually, you only need the <literal>hsqldb.jar</literal> from "
"this download. Place this file in the <literal>lib/</literal> directory of "
"the development folder."
msgstr ""
"Nous avons maintenant une classe persistante et son fichier de mapping. Il "
"est temps de configurer Hibernate. Avant ça, nous avons besoin d'une base de "
"données. HSQL DB, un SGBD SQL basé sur Java et travaillant en mémoire, peut "
"être téléchargé à partir du site web de HSQL. En fait, vous avez seulement "
"besoin de <literal>hsqldb.jar</literal>. Placez ce fichier dans le "
"répertoire <literal>lib/</literal> du dossier de développement."

#. Tag: para
#: tutorial.xml:296
#, no-c-format
msgid ""
"Create a directory called <literal>data</literal> in the root of the "
"development directory - this is where HSQL DB will store its data files. Now "
"start the database by running <literal>java -classpath ../lib/hsqldb.jar org."
"hsqldb.Server</literal> in this data directory. You can see it start up and "
"bind to a TCP/IP socket, this is where our application will connect later. "
"If you want to start with a fresh database during this tutorial, shutdown "
"HSQL DB (press <literal>CTRL + C</literal> in the window), delete all files "
"in the <literal>data/</literal> directory, and start HSQL DB again."
msgstr ""
"Créez un répertoire appelé <literal>data</literal> à la racine du répertoire "
"de développement - c'est là que HSQL DB stockera ses fichiers de données. "
"Démarrez maintenant votre base de données en exécutant <literal>java -"
"classpath lib/hsqldb.jar org.hsqldb.Server</literal> dans votre répertoire "
"de travail. Vous observez qu'elle démarre et ouvre une socket TCP/IP, c'est "
"là que notre application se connectera plus tard. Si vous souhaitez démarrez "
"à partir d'une nouvelle base de données pour ce tutoriel (faites "
"<literal>CTRL + C</literal> dans la fenêtre the window), effacez le "
"répertoire <literal>data/</literal> et redémarrez HSQL DB à nouveau."

#. Tag: para
#: tutorial.xml:306
#, no-c-format
msgid ""
"Hibernate is the layer in your application which connects to this database, "
"so it needs connection information. The connections are made through a JDBC "
"connection pool, which we also have to configure. The Hibernate distribution "
"contains several open source JDBC connection pooling tools, but will use the "
"Hibernate built-in connection pool for this tutorial. Note that you have to "
"copy the required library into your classpath and use different connection "
"pooling settings if you want to use a production-quality third party JDBC "
"pooling software."
msgstr ""
"Hibernate est la couche de votre application qui se connecte à cette base de "
"données, donc il a besoin des informations de connexion. Les connexions sont "
"établies à travers un pool de connexions JDBC, que nous devons aussi "
"configurer. La distribution Hibernate contient différents outils de gestion "
"de pools de connexions JDBC open source, mais pour ce didacticiel nous "
"utiliserons le pool de connexions intégré à Hibernate. Notez que vous devez "
"copier les bibliothèques requises dans votre classpath et utiliser une "
"configuration de pool de connexions différente si vous voulez utiliser un "
"logiciel de gestion de pools JDBC tiers avec une qualité de production."

#. Tag: para
#: tutorial.xml:316
#, no-c-format
msgid ""
"For Hibernate's configuration, we can use a simple <literal>hibernate."
"properties</literal> file, a slightly more sophisticated <literal>hibernate."
"cfg.xml</literal> file, or even complete programmatic setup. Most users "
"prefer the XML configuration file:"
msgstr ""
"Pour la configuration d'Hibernate, nous pouvons utiliser un simple fichier "
"<literal>hibernate.properties</literal>, un fichier <literal>hibernate.cfg."
"xml</literal> légèrement plus sophistiqué, ou même une configuration "
"complète par programmation. La plupart des utilisateurs préfèrent le fichier "
"de configuration XML :"

#. Tag: programlisting
#: tutorial.xml:322
#, no-c-format
msgid ""
"<![CDATA[<?xml version='1.0' encoding='utf-8'?>\n"
"<!DOCTYPE hibernate-configuration PUBLIC\n"
"        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n"
"        \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"
"\">\n"
"\n"
"<hibernate-configuration>\n"
"\n"
"    <session-factory>\n"
"\n"
"        <!-- Database connection settings -->\n"
"        <property name=\"connection.driver_class\">org.hsqldb.jdbcDriver</"
"property>\n"
"        <property name=\"connection.url\">jdbc:hsqldb:hsql://localhost</"
"property>\n"
"        <property name=\"connection.username\">sa</property>\n"
"        <property name=\"connection.password\"></property>\n"
"\n"
"        <!-- JDBC connection pool (use the built-in) -->\n"
"        <property name=\"connection.pool_size\">1</property>\n"
"\n"
"        <!-- SQL dialect -->\n"
"        <property name=\"dialect\">org.hibernate.dialect.HSQLDialect</"
"property>\n"
"\n"
"        <!-- Enable Hibernate's automatic session context management -->\n"
"        <property name=\"current_session_context_class\">thread</property>\n"
"\n"
"        <!-- Disable the second-level cache  -->\n"
"        <property name=\"cache.provider_class\">org.hibernate.cache."
"NoCacheProvider</property>\n"
"\n"
"        <!-- Echo all executed SQL to stdout -->\n"
"        <property name=\"show_sql\">true</property>\n"
"\n"
"        <!-- Drop and re-create the database schema on startup -->\n"
"        <property name=\"hbm2ddl.auto\">create</property>\n"
"\n"
"        <mapping resource=\"events/Event.hbm.xml\"/>\n"
"\n"
"    </session-factory>\n"
"\n"
"</hibernate-configuration>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:324
#, no-c-format
msgid ""
"Note that this XML configuration uses a different DTD. We configure "
"Hibernate's <literal>SessionFactory</literal> - a global factory responsible "
"for a particular database. If you have several databases, use several "
"<literal>&lt;session-factory&gt;</literal> configurations, usually in "
"several configuration files (for easier startup)."
msgstr ""
"Notez que cette configuration XML utilise une DTD différente. Nous "
"configurons une <literal>SessionFactory</literal> d'Hibernate - une fabrique "
"globale responsable d'une base de données particulière. Si vous avez "
"plusieurs base de données, utilisez plusieurs configurations <literal>&lt;"
"session-factory&gt;</literal>, généralement dans des fichiers de "
"configuration différents (pour un démarrage plus facile)."

#. Tag: para
#: tutorial.xml:332
#, no-c-format
msgid ""
"The first four <literal>property</literal> elements contain the necessary "
"configuration for the JDBC connection. The dialect <literal>property</"
"literal> element specifies the particular SQL variant Hibernate generates. "
"Hibernate's automatic session management for persistence contexts will come "
"in handy as you will soon see. The <literal>hbm2ddl.auto</literal> option "
"turns on automatic generation of database schemas - directly into the "
"database. This can of course also be turned off (by removing the config "
"option) or redirected to a file with the help of the <literal>SchemaExport</"
"literal> Ant task. Finally, we add the mapping file(s) for persistent "
"classes to the configuration."
msgstr ""
"Les quatre premiers éléments <literal>property</literal> contiennent la "
"configuration nécessaire pour la connexion JDBC. L'élément "
"<literal>property</literal> du dialecte spécifie quelle variante du SQL "
"Hibernate va générer. La gestion automatique des sessions d'Hibernate pour "
"les contextes de persistance sera détaillée très vite. L'option "
"<literal>hbm2ddl.auto</literal> active la génération automatique des schémas "
"de base de données - directement dans la base de données. Cela peut bien sûr "
"aussi être désactivé (en supprimant l'option de configuration) ou redirigé "
"vers un fichier avec l'aide de la tâche Ant <literal>SchemaExport</literal>. "
"Finalement, nous ajoutons le(s) fichier(s) de mapping pour les classes "
"persistantes."

#. Tag: para
#: tutorial.xml:345
#, no-c-format
msgid ""
"Copy this file into the source directory, so it will end up in the root of "
"the classpath. Hibernate automatically looks for a file called "
"<literal>hibernate.cfg.xml</literal> in the root of the classpath, on "
"startup."
msgstr ""
"Copiez ce fichier dans le répertoire source, il terminera dans la racine du "
"classpath. Hibernate cherchera automatiquement, au démarrage, un fichier "
"appelé <literal>hibernate.cfg.xml</literal> dans la racine du classpath."

#. Tag: title
#: tutorial.xml:354
#, no-c-format
msgid "Building with Ant"
msgstr "Construction avec Ant"

#. Tag: para
#: tutorial.xml:356
#, no-c-format
msgid ""
"We'll now build the tutorial with Ant. You will need to have Ant installed - "
"get it from the <ulink url=\"http://ant.apache.org/bindownload.cgi\">Ant "
"download page</ulink>. How to install Ant will not be covered here. Please "
"refer to the <ulink url=\"http://ant.apache.org/manual/index.html\">Ant "
"manual</ulink>. After you have installed Ant, we can start to create the "
"buildfile. It will be called <literal>build.xml</literal> and placed "
"directly in the development directory."
msgstr ""
"Nous allons maintenant construire le didacticiel avec Ant. Vous aurez besoin "
"d'avoir Ant d'installé - récupérez-le à partir de <ulink url=\"http://ant."
"apache.org/bindownload.cgi\"> la page de téléchargement de Ant</ulink>. "
"Comment installer Ant ne sera pas couvert ici. Référez-vous au <ulink url="
"\"http://ant.apache.org/manual/index.html\">manuel d'Ant</ulink>. Après que "
"vous aurez installé Ant, nous pourrons commencer à créer le fichier de "
"construction. Il s'appellera <literal>build.xml</literal> et sera placé "
"directement dans le répertoire de développement."

#. Tag: para
#: tutorial.xml:365
#, no-c-format
msgid "A basic build file looks like this:"
msgstr "Un fichier de construction basique ressemble à ça :"

#. Tag: programlisting
#: tutorial.xml:369
#, no-c-format
msgid ""
"<![CDATA[<project name=\"hibernate-tutorial\" default=\"compile\">\n"
"\n"
"    <property name=\"sourcedir\" value=\"${basedir}/src\"/>\n"
"    <property name=\"targetdir\" value=\"${basedir}/bin\"/>\n"
"    <property name=\"librarydir\" value=\"${basedir}/lib\"/>\n"
"\n"
"    <path id=\"libraries\">\n"
"        <fileset dir=\"${librarydir}\">\n"
"            <include name=\"*.jar\"/>\n"
"        </fileset>\n"
"    </path>\n"
"\n"
"    <target name=\"clean\">\n"
"        <delete dir=\"${targetdir}\"/>\n"
"        <mkdir dir=\"${targetdir}\"/>\n"
"    </target>\n"
"\n"
"    <target name=\"compile\" depends=\"clean, copy-resources\">\n"
"      <javac srcdir=\"${sourcedir}\"\n"
"             destdir=\"${targetdir}\"\n"
"             classpathref=\"libraries\"/>\n"
"    </target>\n"
"\n"
"    <target name=\"copy-resources\">\n"
"        <copy todir=\"${targetdir}\">\n"
"            <fileset dir=\"${sourcedir}\">\n"
"                <exclude name=\"**/*.java\"/>\n"
"            </fileset>\n"
"        </copy>\n"
"    </target>\n"
"\n"
"</project>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:371
#, no-c-format
msgid ""
"This will tell Ant to add all files in the lib directory ending with "
"<literal>.jar</literal> to the classpath used for compilation. It will also "
"copy all non-Java source files to the target directory, e.g. configuration "
"and Hibernate mapping files. If you now run Ant, you should get this output:"
msgstr ""
"Cela dira à Ant d'ajouter tous les fichiers du répertoire lib finissant par "
"<literal>.jar</literal> dans le classpath utilisé pour la compilation. Cela "
"copiera aussi tous les fichiers source non Java dans le répertoire cible, "
"par exemple les fichiers de configuration et de mapping d'Hibernate. Si vous "
"lancez Ant maintenant, vous devriez obtenir cette sortie :"

#. Tag: programlisting
#: tutorial.xml:378
#, no-c-format
msgid ""
"<![CDATA[C:\\hibernateTutorial\\>ant\n"
"Buildfile: build.xml\n"
"\n"
"copy-resources:\n"
"     [copy] Copying 2 files to C:\\hibernateTutorial\\bin\n"
"\n"
"compile:\n"
"    [javac] Compiling 1 source file to C:\\hibernateTutorial\\bin\n"
"\n"
"BUILD SUCCESSFUL\n"
"Total time: 1 second ]]>"
msgstr ""

#. Tag: title
#: tutorial.xml:383
#, no-c-format
msgid "Startup and helpers"
msgstr "Démarrage et aides"

#. Tag: para
#: tutorial.xml:385
#, no-c-format
msgid ""
"It's time to load and store some <literal>Event</literal> objects, but first "
"we have to complete the setup with some infrastructure code. We have to "
"startup Hibernate. This startup includes building a global "
"<literal>SessionFactory</literal> object and to store it somewhere for easy "
"access in application code. A <literal>SessionFactory</literal> can open up "
"new <literal>Session</literal>'s. A <literal>Session</literal> represents a "
"single-threaded unit of work, the <literal>SessionFactory</literal> is a "
"thread-safe global object, instantiated once."
msgstr ""
"Il est temps de charger et de stocker quelques objets <literal>Event</"
"literal>, mais d'abord nous devons compléter la configuration avec du code "
"d'infrastructure. Nous devons démarrer Hibernate. Ce démarrage inclut la "
"construction d'un objet <literal>SessionFactory</literal> global et le "
"stocker quelque part facile d'accès dans le code de l'application. Une "
"<literal>SessionFactory</literal> peut ouvrir des nouvelles "
"<literal>Session</literal>s. Une <literal>Session</literal> représente une "
"unité de travail simplement \"threadée\", la <literal>SessionFactory</"
"literal> est un objet global \"thread-safe\", instancié une seule fois."

#. Tag: para
#: tutorial.xml:395
#, no-c-format
msgid ""
"We'll create a <literal>HibernateUtil</literal> helper class which takes "
"care of startup and makes accessing a <literal>SessionFactory</literal> "
"convenient. Let's have a look at the implementation:"
msgstr ""
"Nous créerons une classe d'aide <literal>HibernateUtil</literal> qui "
"s'occupe du démarrage et rend la gestion des <literal>Session</literal>s "
"plus facile. Regardons l'implémentation :"

#. Tag: programlisting
#: tutorial.xml:401
#, no-c-format
msgid ""
"<![CDATA[package util;\n"
"\n"
"import org.hibernate.*;\n"
"import org.hibernate.cfg.*;\n"
"\n"
"public class HibernateUtil {\n"
"\n"
"    private static final SessionFactory sessionFactory;\n"
"\n"
"    static {\n"
"        try {\n"
"            // Create the SessionFactory from hibernate.cfg.xml\n"
"            sessionFactory = new Configuration().configure()."
"buildSessionFactory();\n"
"        } catch (Throwable ex) {\n"
"            // Make sure you log the exception, as it might be swallowed\n"
"            System.err.println(\"Initial SessionFactory creation failed.\" + "
"ex);\n"
"            throw new ExceptionInInitializerError(ex);\n"
"        }\n"
"    }\n"
"\n"
"    public static SessionFactory getSessionFactory() {\n"
"        return sessionFactory;\n"
"    }\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:403
#, no-c-format
msgid ""
"This class does not only produce the global <literal>SessionFactory</"
"literal> in its static initializer (called once by the JVM when the class is "
"loaded), but also hides the fact that it uses a static singleton. It might "
"as well lookup the <literal>SessionFactory</literal> from JNDI in an "
"application server."
msgstr ""
"Cette classe ne produit pas seulement la <literal>SessionFactory</literal> "
"globale dans un initialiseur statique (appelé une seule fois par la JVM "
"lorsque la classe est chargée), elle masque le fait qu'elle exploite un "
"singleton. Elle pourrait aussi obtenir la <literal>SessionFactory</literal> "
"depuis JNDI dans un serveur d'applications."

#. Tag: para
#: tutorial.xml:410
#, no-c-format
msgid ""
"If you give the <literal>SessionFactory</literal> a name in your "
"configuration file, Hibernate will in fact try to bind it to JNDI after it "
"has been built. To avoid this code completely you could also use JMX "
"deployment and let the JMX-capable container instantiate and bind a "
"<literal>HibernateService</literal> to JNDI. These advanced options are "
"discussed in the Hibernate reference documentation."
msgstr ""
"Si vous nommez la <literal>SessionFactory</literal> dans votre fichier de "
"configuration, Hibernate tentera la récupération depuis JNDI. Pour éviter ce "
"code, vous pouvez aussi utiliser un déploiement JMX et laisser le conteneur "
"(compatible JMX) instancier et lier un <literal>HibernateService</literal> à "
"JNDI. Ces options avancées sont détaillées dans la documentation de "
"référence Hibernate."

#. Tag: para
#: tutorial.xml:419
#, no-c-format
msgid ""
"Place <literal>HibernateUtil.java</literal> in the development source "
"directory, in a package next to <literal>events</literal>:"
msgstr ""
"Placez <literal>HibernateUtil.java</literal> dans le répertoire source de "
"développement, et ensuite <literal>Event.java</literal> :"

#. Tag: programlisting
#: tutorial.xml:424
#, no-c-format
msgid ""
"<![CDATA[.\n"
"+lib\n"
"  <Hibernate and third-party libraries>\n"
"+src\n"
"  +events\n"
"    Event.java\n"
"    Event.hbm.xml\n"
"  +util\n"
"    HibernateUtil.java\n"
"  hibernate.cfg.xml\n"
"+data\n"
"build.xml]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:426
#, no-c-format
msgid ""
"This should again compile without problems. We finally need to configure a "
"logging system - Hibernate uses commons logging and leaves you the choice "
"between Log4j and JDK 1.4 logging. Most developers prefer Log4j: copy "
"<literal>log4j.properties</literal> from the Hibernate distribution (it's in "
"the <literal>etc/</literal> directory) to your <literal>src</literal> "
"directory, next to <literal>hibernate.cfg.xml</literal>. Have a look at the "
"example configuration and change the settings if you like to have more "
"verbose output. By default, only Hibernate startup message are shown on "
"stdout."
msgstr ""
"Cela devrait encore compiler sans problème. Nous avons finalement besoin de "
"configurer le système de \"logs\" - Hibernate utilise commons-logging et "
"vous laisse le choix entre log4j et le système de logs du JDK 1.4. La "
"plupart des développeurs préfèrent log4j : copiez <literal>log4j.properties</"
"literal> de la distribution d'Hibernate (il est dans le répertoire "
"<literal>etc/</literal>) dans votre répertoire <literal>src</literal>, puis "
"faites de même avec <literal>hibernate.cfg.xml</literal>. Regardez la "
"configuration d'exemple et changez les paramètres si vous voulez une sortie "
"plus verbeuse. Par défaut, seul le message de démarrage d'Hibernate est "
"affiché sur la sortie standard."

#. Tag: para
#: tutorial.xml:436
#, no-c-format
msgid ""
"The tutorial infrastructure is complete - and we are ready to do some real "
"work with Hibernate."
msgstr ""
"L'infrastructure de ce didacticiel est complète - et nous sommes prêts à "
"effectuer un travail réel avec Hibernate."

#. Tag: title
#: tutorial.xml:444
#, no-c-format
msgid "Loading and storing objects"
msgstr "Charger et stocker des objets"

#. Tag: para
#: tutorial.xml:446
#, no-c-format
msgid ""
"Finally, we can use Hibernate to load and store objects. We write an "
"<literal>EventManager</literal> class with a <literal>main()</literal> "
"method:"
msgstr ""
"Finalement nous pouvons utiliser Hibernate pour charger et stocker des "
"objets. Nous écrivons une classe <literal>EventManager</literal> avec une "
"méthode <literal>main()</literal> :"

#. Tag: programlisting
#: tutorial.xml:451
#, no-c-format
msgid ""
"<![CDATA[package events;\n"
"import org.hibernate.Session;\n"
"\n"
"import java.util.Date;\n"
"\n"
"import util.HibernateUtil;\n"
"\n"
"public class EventManager {\n"
"\n"
"    public static void main(String[] args) {\n"
"        EventManager mgr = new EventManager();\n"
"\n"
"        if (args[0].equals(\"store\")) {\n"
"            mgr.createAndStoreEvent(\"My Event\", new Date());\n"
"        }\n"
"\n"
"        HibernateUtil.getSessionFactory().close();\n"
"    }\n"
"\n"
"    private void createAndStoreEvent(String title, Date theDate) {\n"
"\n"
"        Session session = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"\n"
"        session.beginTransaction();\n"
"\n"
"        Event theEvent = new Event();\n"
"        theEvent.setTitle(title);\n"
"        theEvent.setDate(theDate);\n"
"\n"
"        session.save(theEvent);\n"
"\n"
"        session.getTransaction().commit();\n"
"    }\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:453
#, no-c-format
msgid ""
"We create a new <literal>Event</literal> object, and hand it over to "
"Hibernate. Hibernate now takes care of the SQL and executes <literal>INSERT</"
"literal>s on the database. Let's have a look at the <literal>Session</"
"literal> and <literal>Transaction</literal>-handling code before we run this."
msgstr ""
"Nous créons un nouvel objet <literal>Event</literal>, et le remettons à "
"Hibernate. Hibernate s'occupe maintenant du SQL et exécute les "
"<literal>INSERT</literal>s dans la base de données. Regardons le code de "
"gestion de la <literal>Session</literal> et de la <literal>Transaction</"
"literal> avant de lancer ça."

#. Tag: para
#: tutorial.xml:460
#, no-c-format
msgid ""
"A <literal>Session</literal> is a single unit of work. For now we'll keep "
"things simple and assume a one-to-one granularity between a Hibernate "
"<literal>Session</literal> and a database transaction. To shield our code "
"from the actual underlying transaction system (in this case plain JDBC, but "
"it could also run with JTA) we use the <literal>Transaction</literal> API "
"that is available on the Hibernate <literal>Session</literal>."
msgstr ""
"Une <literal>Session</literal> est une unité de travail. Pour le moment, "
"nous allons faire les choses simplement et assumer une granularité un-un "
"entre une <literal>Session</literal> hibernate et une transaction à la base "
"de données. Pour isoler notre code du système de transaction sous-jacent "
"(dans notre cas, du pure JDBC, mais cela pourrait être JTA), nous utilisons "
"l'API <literal>Transaction</literal> qui est disponible depuis la "
"<literal>Session</literal> Hibernate."

#. Tag: para
#: tutorial.xml:468
#, no-c-format
msgid ""
"What does <literal>sessionFactory.getCurrentSession()</literal> do? First, "
"you can call it as many times and anywhere you like, once you get hold of "
"your <literal>SessionFactory</literal> (easy thanks to "
"<literal>HibernateUtil</literal>). The <literal>getCurrentSession()</"
"literal> method always returns the \"current\" unit of work. Remember that "
"we switched the configuration option for this mechanism to \"thread\" in "
"<literal>hibernate.cfg.xml</literal>? Hence, the current unit of work is "
"bound to the current Java thread that executes our application. However, "
"this is not the full picture, you also have to consider scope, when a unit "
"of work begins and when it ends."
msgstr ""
"Que fait <literal>sessionFactory.getCurrentSession()</literal> ? "
"Premièrement, vous pouvez l'invoquer autant de fois que vous le voulez et "
"n'importe où du moment que vous avez votre <literal>SessionFactory</literal> "
"(facile grâce à <literal>HibernateUtil</literal>). La méthode "
"<literal>getCurrentSession()</literal> renvoie toujours l'unité de travail "
"courante. Souvenez vous que nous avons basculé notre option de configuration "
"au mécanisme basé sur le \"thread\" dans <literal>hibernate.cfg.xml</"
"literal>. Par conséquent, le scope de l'unité de travail courante est le "
"thread java courant d'exécution. Ceci n'est pas totalement vrai."

#. Tag: para
#: tutorial.xml:479
#, no-c-format
msgid ""
"A <literal>Session</literal> begins when it is first needed, when the first "
"call to <literal>getCurrentSession()</literal> is made. It is then bound by "
"Hibernate to the current thread. When the transaction ends, either through "
"commit or rollback, Hibernate automatically unbinds the <literal>Session</"
"literal> from the thread and closes it for you. If you call "
"<literal>getCurrentSession()</literal> again, you get a new "
"<literal>Session</literal> and can start a new unit of work. This "
"<emphasis>thread-bound</emphasis> programming model is the most popular way "
"of using Hibernate, as it allows flexible layering of your code (transaction "
"demarcation code can be separated from data access code, we'll do this later "
"in this tutorial)."
msgstr ""
"Une <literal>Session</literal> commence lorsqu'elle est vraiment utilisée la "
"première fois, Lorsque nous appelons pour la première fois "
"<literal>getCurrentSession()</literal>. Ensuite, elle est liée, par "
"Hibernate, au thread courant. Lorsque la transaction s'achève (commit ou "
"rollback), Hibernate délie la <literal>Session</literal> du thread et la "
"ferme pour vous. Si vous invoquez <literal>getCurrentSession()</literal> une "
"autre fois, vous obtenez une nouvelle <literal>Session</literal> et pouvez "
"entamer une nouvelle unité de travail. Ce modèle de programmation "
"\"<emphasis>thread-bound</emphasis>\" est le moyen le plus populaire "
"d'utiliser Hibernate."

#. Tag: para
#: tutorial.xml:490
#, no-c-format
msgid ""
"Related to the unit of work scope, should the Hibernate <literal>Session</"
"literal> be used to execute one or several database operations? The above "
"example uses one <literal>Session</literal> for one operation. This is pure "
"coincidence, the example is just not complex enough to show any other "
"approach. The scope of a Hibernate <literal>Session</literal> is flexible "
"but you should never design your application to use a new Hibernate "
"<literal>Session</literal> for <emphasis>every</emphasis> database "
"operation. So even if you see it a few more times in the following (very "
"trivial) examples, consider <emphasis>session-per-operation</emphasis> an "
"anti-pattern. A real (web) application is shown later in this tutorial."
msgstr ""
"UNTRANSLATED ! Related to the unit of work scope, should the Hibernate "
"<literal>Session</literal> be used to execute one or several database "
"operations? The above example uses one <literal>Session</literal> for one "
"operation. This is pure coincidence, the example is just not complex enough "
"to show any other approach. The scope of a Hibernate <literal>Session</"
"literal> is flexible but you should never design your application to use a "
"new Hibernate <literal>Session</literal> for <emphasis>every</emphasis> "
"database operation. So even if you see it a few more times in the following "
"(very trivial) examples, consider <emphasis>session-per-operation</emphasis> "
"an anti-pattern. A real (web) application is shown later in this tutorial."

#. Tag: para
#: tutorial.xml:501
#, no-c-format
msgid ""
"Have a look at <xref linkend=\"transactions\"/> for more information about "
"transaction handling and demarcation. We also skipped any error handling and "
"rollback in the previous example."
msgstr ""
"Lisez <xref linkend=\"transactions\"/> pour plus d'informations sur la "
"gestion des transactions et leur démarcations. Nous n'avons pas géré les "
"erreurs et rollback sur l'exemple précédent."

#. Tag: para
#: tutorial.xml:507
#, no-c-format
msgid ""
"To run this first routine we have to add a callable target to the Ant build "
"file:"
msgstr ""
"Pour lancer cette première routine, nous devons ajouter une cible appelable "
"dans le fichier de construction de Ant :"

#. Tag: programlisting
#: tutorial.xml:511
#, no-c-format
msgid ""
"<![CDATA[<target name=\"run\" depends=\"compile\">\n"
"    <java fork=\"true\" classname=\"events.EventManager\" classpathref="
"\"libraries\">\n"
"        <classpath path=\"${targetdir}\"/>\n"
"        <arg value=\"${action}\"/>\n"
"    </java>\n"
"</target>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:513
#, no-c-format
msgid ""
"The value of the <literal>action</literal> argument is set on the command "
"line when calling the target:"
msgstr ""
"La valeur de l'argument <literal>action</literal> correspond à la ligne de "
"commande qui appelle la cible :"

#. Tag: programlisting
#: tutorial.xml:518
#, no-c-format
msgid "<![CDATA[C:\\hibernateTutorial\\>ant run -Daction=store]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:520
#, no-c-format
msgid ""
"You should see, after compilation, Hibernate starting up and, depending on "
"your configuration, lots of log output. At the end you will find the "
"following line:"
msgstr ""
"Vous devriez voir, après la compilation, Hibernate démarrer et, en fonction "
"de votre configuration, beaucoup de traces sur la sortie. À la fin vous "
"trouverez la ligne suivante :"

#. Tag: programlisting
#: tutorial.xml:525
#, no-c-format
msgid ""
"<![CDATA[[java] Hibernate: insert into EVENTS (EVENT_DATE, title, EVENT_ID) "
"values (?, ?, ?)]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:527
#, no-c-format
msgid ""
"This is the <literal>INSERT</literal> executed by Hibernate, the question "
"marks represent JDBC bind parameters. To see the values bound as arguments, "
"or to reduce the verbosity of the log, check your <literal>log4j.properties</"
"literal>."
msgstr ""
"C'est l'<literal>INSERT</literal> exécuté par Hibernate, les points "
"d'interrogation représentent les paramètres JDBC liés. Pour voir les valeurs "
"liées aux arguments, ou pour réduire la verbosité des traces, vérifier votre "
"<literal>log4j.properties</literal>."

#. Tag: para
#: tutorial.xml:533
#, no-c-format
msgid ""
"Now we'd like to list stored events as well, so we add an option to the main "
"method:"
msgstr ""
"Maintenant nous aimerions aussi lister les événements stockés, donc nous "
"ajoutons une option à la méthode principale :"

#. Tag: programlisting
#: tutorial.xml:537
#, no-c-format
msgid ""
"<![CDATA[if (args[0].equals(\"store\")) {\n"
"    mgr.createAndStoreEvent(\"My Event\", new Date());\n"
"}\n"
"else if (args[0].equals(\"list\")) {\n"
"    List events = mgr.listEvents();\n"
"    for (int i = 0; i < events.size(); i++) {\n"
"        Event theEvent = (Event) events.get(i);\n"
"        System.out.println(\"Event: \" + theEvent.getTitle() +\n"
"                           \" Time: \" + theEvent.getDate());\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:539
#, no-c-format
msgid "We also add a new <literal>listEvents() method</literal>:"
msgstr ""
"Nous ajoutons aussi une nouvelle méthode <literal>listEvents()</literal> :"

#. Tag: programlisting
#: tutorial.xml:543
#, no-c-format
msgid ""
"<![CDATA[private List listEvents() {\n"
"\n"
"    Session session = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"\n"
"    session.beginTransaction();\n"
"\n"
"    List result = session.createQuery(\"from Event\").list();\n"
"\n"
"    session.getTransaction().commit();\n"
"\n"
"    return result;\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:545
#, no-c-format
msgid ""
"What we do here is use an HQL (Hibernate Query Language) query to load all "
"existing <literal>Event</literal> objects from the database. Hibernate will "
"generate the appropriate SQL, send it to the database and populate "
"<literal>Event</literal> objects with the data. You can create more complex "
"queries with HQL, of course."
msgstr ""
"Ce que nous faisons ici c'est utiliser une requête HQL (Hibernate Query "
"Language) pour charger tous les objets <literal>Event</literal> existants de "
"la base de données. Hibernate générera le SQL approprié, l'enverra à la base "
"de données et peuplera des objets <literal>Event</literal> avec les données. "
"Vous pouvez créer des requêtes plus complexes avec HQL, bien sûr."

#. Tag: para
#: tutorial.xml:552
#, no-c-format
msgid "Now, to execute and test all of this, follow these steps:"
msgstr "Maintenant, pour exécuter et tester tout ça, suivez ces étapes :"

#. Tag: para
#: tutorial.xml:558
#, no-c-format
msgid ""
"Run <literal>ant run -Daction=store</literal> to store something into the "
"database and, of course, to generate the database schema before through "
"hbm2ddl."
msgstr ""
"Exécutez <literal>ant run -Daction=store</literal> pour stocker quelque "
"chose dans la base de données et, bien sûr, pour générer, avant, le schéma "
"de la base de données grâce à hbm2ddl."

#. Tag: para
#: tutorial.xml:564
#, fuzzy, no-c-format
msgid ""
"Now disable hbm2ddl by commenting out the property in your "
"<literal>hibernate.cfg.xml</literal> file. Usually you only leave it turned "
"on in continuous unit testing, but another run of hbm2ddl would "
"<emphasis>drop</emphasis> everything you have stored - the <literal>create</"
"literal> configuration setting actually translates into \"drop all tables "
"from the schema, then re-create all tables, when the SessionFactory is build"
"\"."
msgstr ""
"Maintenant désactivez hbm2ddl en commentant la propriété dans votre fichier "
"<literal>hibernate.cfg.xml</literal>. Généralement vous la laissez seulement "
"activée dans des tests unitaires en continu, mais une autre exécution de "
"hbm2ddl <emphasis>effacerait</emphasis> tout ce que vous avez stocké - le "
"paramètre de configuration <literal>create</literal> se traduit en fait par "
"\"supprimer toutes les tables du schéma, puis re-créer toutes les tables, "
"lorsque la SessionFactory est construite\"."

#. Tag: para
#: tutorial.xml:574
#, no-c-format
msgid ""
"If you now call Ant with <literal>-Daction=list</literal>, you should see "
"the events you have stored so far. You can of course also call the "
"<literal>store</literal> action a few times more."
msgstr ""
"Si maintenant vous appelez Ant avec <literal>-Daction=list</literal>, vous "
"devriez voir les événements que vous avez stockés jusque là. Vous pouvez "
"bien sûr aussi appeler l'action <literal>store</literal> plusieurs fois."

#. Tag: para
#: tutorial.xml:580
#, no-c-format
msgid ""
"Note: Most new Hibernate users fail at this point and we see questions about "
"<emphasis>Table not found</emphasis> error messages regularly. However, if "
"you follow the steps outlined above you will not have this problem, as "
"hbm2ddl creates the database schema on the first run, and subsequent "
"application restarts will use this schema. If you change the mapping and/or "
"database schema, you have to re-enable hbm2ddl once again."
msgstr ""
"UNTRANSLATED! Note: Most new Hibernate users fail at this point and we see "
"questions about <emphasis>Table not found</emphasis> error messages "
"regularly. However, if you follow the steps outlined above you will not have "
"this problem, as hbm2ddl creates the database schema on the first run, and "
"subsequent application restarts will use this schema. If you change the "
"mapping and/or database schema, you have to re-enable hbm2ddl once again."

#. Tag: title
#: tutorial.xml:593
#, no-c-format
msgid "Part 2 - Mapping associations"
msgstr "Partie 2 - Mapper des associations"

#. Tag: para
#: tutorial.xml:595
#, no-c-format
msgid ""
"We mapped a persistent entity class to a table. Let's build on this and add "
"some class associations. First we'll add people to our application, and "
"store a list of events they participate in."
msgstr ""
"Nous avons mappé une classe d'une entité persistante vers une table. Partons "
"de là et ajoutons quelques associations de classe. D'abord nous ajouterons "
"des gens à notre application, et stockerons une liste d'événements auxquels "
"ils participent."

#. Tag: title
#: tutorial.xml:601
#, no-c-format
msgid "Mapping the Person class"
msgstr "Mapper la classe Person"

#. Tag: para
#: tutorial.xml:603
#, no-c-format
msgid "The first cut of the <literal>Person</literal> class is simple:"
msgstr ""
"La première version de la classe <literal>Person</literal> est simple :"

#. Tag: programlisting
#: tutorial.xml:607
#, no-c-format
msgid ""
"<![CDATA[package events;\n"
"\n"
"public class Person {\n"
"\n"
"    private Long id;\n"
"    private int age;\n"
"    private String firstname;\n"
"    private String lastname;\n"
"\n"
"    public Person() {}\n"
"\n"
"    // Accessor methods for all properties, private setter for 'id'\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:609
#, no-c-format
msgid ""
"Create a new mapping file called <literal>Person.hbm.xml</literal> (don't "
"forget the DTD reference at the top):"
msgstr ""
"Créez un nouveau fichier de mapping appelé <literal>Person.hbm.xml</literal> "
"(n'oubliez pas la référence à la DTD)"

#. Tag: programlisting
#: tutorial.xml:614
#, no-c-format
msgid ""
"<![CDATA[<hibernate-mapping>\n"
"\n"
"    <class name=\"events.Person\" table=\"PERSON\">\n"
"        <id name=\"id\" column=\"PERSON_ID\">\n"
"            <generator class=\"native\"/>\n"
"        </id>\n"
"        <property name=\"age\"/>\n"
"        <property name=\"firstname\"/>\n"
"        <property name=\"lastname\"/>\n"
"    </class>\n"
"\n"
"</hibernate-mapping>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:616
#, no-c-format
msgid "Finally, add the new mapping to Hibernate's configuration:"
msgstr ""
"Finalement, ajoutez la nouveau mapping à la configuration d'Hibernate :"

#. Tag: programlisting
#: tutorial.xml:620
#, no-c-format
msgid ""
"<![CDATA[<mapping resource=\"events/Event.hbm.xml\"/>\n"
"<mapping resource=\"events/Person.hbm.xml\"/>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:622
#, no-c-format
msgid ""
"We'll now create an association between these two entities. Obviously, "
"persons can participate in events, and events have participants. The design "
"questions we have to deal with are: directionality, multiplicity, and "
"collection behavior."
msgstr ""
"Nous allons maintenant créer une association entre ces deux entités. "
"Évidemment, des personnes peuvent participer aux événements, et des "
"événements ont des participants. Les questions de conception que nous devons "
"traiter sont : direction, cardinalité et comportement de la collection."

#. Tag: title
#: tutorial.xml:632
#, no-c-format
msgid "A unidirectional Set-based association"
msgstr "Une association unidirectionnelle basée sur Set"

#. Tag: para
#: tutorial.xml:634
#, no-c-format
msgid ""
"We'll add a collection of events to the <literal>Person</literal> class. "
"That way we can easily navigate to the events for a particular person, "
"without executing an explicit query - by calling <literal>aPerson.getEvents()"
"</literal>. We use a Java collection, a <literal>Set</literal>, because the "
"collection will not contain duplicate elements and the ordering is not "
"relevant for us."
msgstr ""
"Nous allons ajouter une collection d'événements à la classe <literal>Person</"
"literal>. De cette manière nous pouvons facilement naviguer dans les "
"événements d'une personne particulière, sans exécuter une requête explicite "
"- en appelant <literal>aPerson.getEvents()</literal>. Nous utilisons une "
"collection Java, un <literal>Set</literal>, parce que la collection ne "
"contiendra pas d'éléments dupliqués et l'ordre ne nous importe pas."

#. Tag: para
#: tutorial.xml:641
#, no-c-format
msgid ""
"We need a unidirectional, many-valued associations, implemented with a "
"<literal>Set</literal>. Let's write the code for this in the Java classes "
"and then map it:"
msgstr ""
"Nous avons besoin d'une association unidirectionnelle, pluri-valuée, "
"implémentée avec un <literal>Set</literal>. Écrivons le code pour ça dans "
"les classes Java et mappons les :"

#. Tag: programlisting
#: tutorial.xml:646
#, no-c-format
msgid ""
"<![CDATA[public class Person {\n"
"\n"
"    private Set events = new HashSet();\n"
"\n"
"    public Set getEvents() {\n"
"        return events;\n"
"    }\n"
"\n"
"    public void setEvents(Set events) {\n"
"        this.events = events;\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:648
#, no-c-format
msgid ""
"Before we map this association, think about the other side. Clearly, we "
"could just keep this unidirectional. Or, we could create another collection "
"on the <literal>Event</literal>, if we want to be able to navigate it bi-"
"directional, i.e. <literal>anEvent.getParticipants()</literal>. This is not "
"necessary, from a functional perspective. You could always execute an "
"explicit query to retrieve the participants for a particular event. This is "
"a design choice left to you, but what is clear from this discussion is the "
"multiplicity of the association: \"many\" valued on both sides, we call this "
"a <emphasis>many-to-many</emphasis> association. Hence, we use Hibernate's "
"many-to-many mapping:"
msgstr ""
"D'abord nous mappons cette association, mais pensez à l'autre côté. "
"Clairement, nous pouvons la laisser unidirectionnelle. Ou alors, nous "
"pourrions créer une autre collection sur <literal>Event</literal>, si nous "
"voulons être capable de la parcourir de manière bidirectionnelle, c'est-à-"
"dire avoir <literal>anEvent.getParticipants()</literal>. Ce n'est pas "
"nécessaire d'un point de vue fonctionnel. Vous pourrez toujours exécuter une "
"requête explicite pour récupérer les participants d'un \"event\" "
"particulier. Ce choix de conception vous est laissé, mais ce qui reste "
"certains est la cardinalité de l'association: \"plusieurs\" des deux côtés, "
"nous appelons cela une association <emphasis>many-to-many</emphasis>. Par "
"conséquent nous utilisons un mapping Hibernate many-to-many:"

#. Tag: programlisting
#: tutorial.xml:659
#, no-c-format
msgid ""
"<![CDATA[<class name=\"events.Person\" table=\"PERSON\">\n"
"    <id name=\"id\" column=\"PERSON_ID\">\n"
"        <generator class=\"native\"/>\n"
"    </id>\n"
"    <property name=\"age\"/>\n"
"    <property name=\"firstname\"/>\n"
"    <property name=\"lastname\"/>\n"
"\n"
"    <set name=\"events\" table=\"PERSON_EVENT\">\n"
"        <key column=\"PERSON_ID\"/>\n"
"        <many-to-many column=\"EVENT_ID\" class=\"events.Event\"/>\n"
"    </set>\n"
"\n"
"</class>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:661
#, no-c-format
msgid ""
"Hibernate supports all kinds of collection mappings, a <literal>&lt;set&gt;</"
"literal> being most common. For a many-to-many association (or <emphasis>n:"
"m</emphasis> entity relationship), an association table is needed. Each row "
"in this table represents a link between a person and an event. The table "
"name is configured with the <literal>table</literal> attribute of the "
"<literal>set</literal> element. The identifier column name in the "
"association, for the person's side, is defined with the <literal>&lt;key&gt;"
"</literal> element, the column name for the event's side with the "
"<literal>column</literal> attribute of the <literal>&lt;many-to-many&gt;</"
"literal>. You also have to tell Hibernate the class of the objects in your "
"collection (correct: the class on the other side of the collection of "
"references)."
msgstr ""
"Hibernate supporte toutes sortes de mapping de collection, un <literal>&lt;"
"set&gt;</literal> étant le plus commun. Pour une association many-to-many "
"(ou une relation d'entité <emphasis>n:m</emphasis>), une table d'association "
"est requise. Chaque ligne dans cette table représente un lien entre une "
"personne et un événement. Le nom de la table est configuré avec l'attribut "
"<literal>table</literal> de l'élément <literal>set</literal>. Le nom de la "
"colonne identifiant dans l'association, du côté de la personne, est défini "
"avec l'élément <literal>&lt;key&gt;</literal>, et le nom de la colonne pour "
"l'événement dans l'attribut <literal>column</literal> de <literal>&lt;many-"
"to-many&gt;</literal>. Vous devez aussi donner à Hibernate la classe des "
"objets de votre collection (c'est-à-dire : la classe de l'autre côté de la "
"collection)."

#. Tag: para
#: tutorial.xml:673
#, no-c-format
msgid "The database schema for this mapping is therefore:"
msgstr "Le schéma de base de données pour ce mapping est donc :"

#. Tag: programlisting
#: tutorial.xml:677
#, no-c-format
msgid ""
"<![CDATA[\n"
"    _____________        __________________\n"
"   |             |      |                  |       _____________\n"
"   |   EVENTS    |      |   PERSON_EVENT   |      |             |\n"
"   |_____________|      |__________________|      |    PERSON   |\n"
"   |             |      |                  |      |_____________|\n"
"   | *EVENT_ID   | <--> | *EVENT_ID        |      |             |\n"
"   |  EVENT_DATE |      | *PERSON_ID       | <--> | *PERSON_ID  |\n"
"   |  TITLE      |      |__________________|      |  AGE        |\n"
"   |_____________|                                |  FIRSTNAME  |\n"
"                                                  |  LASTNAME   |\n"
"                                                  |_____________|\n"
" ]]>"
msgstr ""

#. Tag: title
#: tutorial.xml:682
#, no-c-format
msgid "Working the association"
msgstr "Travailler avec l'association"

#. Tag: para
#: tutorial.xml:684
#, no-c-format
msgid ""
"Let's bring some people and events together in a new method in "
"<literal>EventManager</literal>:"
msgstr ""
"Réunissons quelques personnes et quelques événements dans une nouvelle "
"méthode dans <literal>EventManager</literal> :"

#. Tag: programlisting
#: tutorial.xml:688
#, no-c-format
msgid ""
"<![CDATA[private void addPersonToEvent(Long personId, Long eventId) {\n"
"\n"
"    Session session = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"    session.beginTransaction();\n"
"\n"
"    Person aPerson = (Person) session.load(Person.class, personId);\n"
"    Event anEvent = (Event) session.load(Event.class, eventId);\n"
"\n"
"    aPerson.getEvents().add(anEvent);\n"
"\n"
"    session.getTransaction().commit();\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:690
#, no-c-format
msgid ""
"After loading a <literal>Person</literal> and an <literal>Event</literal>, "
"simply modify the collection using the normal collection methods. As you can "
"see, there is no explicit call to <literal>update()</literal> or "
"<literal>save()</literal>, Hibernate automatically detects that the "
"collection has been modified and needs to be updated. This is called "
"<emphasis>automatic dirty checking</emphasis>, and you can also try it by "
"modifying the name or the date property of any of your objects. As long as "
"they are in <emphasis>persistent</emphasis> state, that is, bound to a "
"particular Hibernate <literal>Session</literal> (i.e. they have been just "
"loaded or saved in a unit of work), Hibernate monitors any changes and "
"executes SQL in a write-behind fashion. The process of synchronizing the "
"memory state with the database, usually only at the end of a unit of work, "
"is called <emphasis>flushing</emphasis>. In our code, the unit of work ends "
"with a commit (or rollback) of the database transaction - as defined by the "
"<literal>thread</literal> configuration option for the "
"<literal>CurrentSessionContext</literal> class."
msgstr ""
"Après le chargement d'une <literal>Person</literal> et d'un <literal>Event</"
"literal>, modifiez simplement la collection en utilisant les méthodes "
"normales de la collection. Comme vous pouvez le voir, il n'y a pas d'appel "
"explicite à <literal>update()</literal> ou <literal>save()</literal>, "
"Hibernate détecte automatiquement que la collection a été modifiée et a "
"besoin d'être mise à jour. Ceci est appelé <emphasis>la vérification sale "
"automatique</emphasis> (NdT : \"automatic dirty checking\"), et vous pouvez "
"aussi l'essayer en modifiant le nom ou la propriété date de n'importe lequel "
"de vos objets. Tant qu'ils sont dans un état <emphasis>persistant</"
"emphasis>, c'est-à-dire, liés à une <literal>Session</literal> Hibernate "
"particulière (c-à-d qu'ils ont juste été chargés ou sauvegardés dans une "
"unité de travail), Hibernate surveille les changements et exécute le SQL "
"correspondant. Le processus de synchronisation de l'état de la mémoire avec "
"la base de données, généralement seulement à la fin d'une unité de travail, "
"est appelé <emphasis>flushing</emphasis>. Dans notre code, l'unité de "
"travail s'achève par un commit (ou rollback) de la transaction avec la base "
"de données - comme défini par notre option <literal>thread</literal> de "
"configuration pour la classe <literal>CurrentSessionContext</literal>."

#. Tag: para
#: tutorial.xml:705
#, no-c-format
msgid ""
"You might of course load person and event in different units of work. Or you "
"modify an object outside of a <literal>Session</literal>, when it is not in "
"persistent state (if it was persistent before, we call this state "
"<emphasis>detached</emphasis>). You can even modify a collection when it is "
"detached:"
msgstr ""
"Vous pourriez bien sûr charger une personne et un événement dans différentes "
"unités de travail. Ou vous modifiez un objet à l'extérieur d'une "
"<literal>Session</literal>, s'il n'est pas dans un état persistant (s'il "
"était persistant avant, nous appelons cet état <emphasis>détaché</"
"emphasis>). Vous pouvez même modifier une collection lorsqu'elle est "
"détachée:"

#. Tag: programlisting
#: tutorial.xml:712
#, no-c-format
msgid ""
"<![CDATA[private void addPersonToEvent(Long personId, Long eventId) {\n"
"\n"
"    Session session = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"    session.beginTransaction();\n"
"\n"
"    Person aPerson = (Person) session\n"
"            .createQuery(\"select p from Person p left join fetch p.events "
"where p.id = :pid\")\n"
"            .setParameter(\"pid\", personId)\n"
"            .uniqueResult(); // Eager fetch the collection so we can use it "
"detached\n"
"\n"
"    Event anEvent = (Event) session.load(Event.class, eventId);\n"
"\n"
"    session.getTransaction().commit();\n"
"\n"
"    // End of first unit of work\n"
"\n"
"    aPerson.getEvents().add(anEvent); // aPerson (and its collection) is "
"detached\n"
"\n"
"    // Begin second unit of work\n"
"\n"
"    Session session2 = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"    session2.beginTransaction();\n"
"\n"
"    session2.update(aPerson); // Reattachment of aPerson\n"
"\n"
"    session2.getTransaction().commit();\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:714
#, no-c-format
msgid ""
"The call to <literal>update</literal> makes a detached object persistent "
"again, you could say it binds it to a new unit of work, so any modifications "
"you made to it while detached can be saved to the database. This includes "
"any modifications (additions/deletions) you made to a collection of that "
"entity object."
msgstr ""
"L'appel à <literal>update</literal> rend un objet détaché à nouveau "
"persistant, vous pourriez dire qu'il le lie à une unité de travail, ainsi "
"toutes les modifications (ajout, suppression) que vous avez faites pendant "
"qu'il était détaché peuvent être sauvegardées dans la base de données (il se "
"peut que vous ayez besoin de modifier quelques unes des méthodes précédentes "
"pour retourner cet identifiant)."

#. Tag: para
#: tutorial.xml:721
#, no-c-format
msgid ""
"Well, this is not much use in our current situation, but it's an important "
"concept you can design into your own application. For now, complete this "
"exercise by adding a new action to the <literal>EventManager</literal>'s "
"main method and call it from the command line. If you need the identifiers "
"of a person and an event - the <literal>save()</literal> method returns it "
"(you might have to modify some of the previous methods to return that "
"identifier):"
msgstr ""
"Ce n'est pas très utile dans notre situation actuelle, mais c'est un concept "
"important que vous pouvez mettre dans votre propre application. Pour le "
"moment, complétez cet exercice en ajoutant une nouvelle action à la méthode "
"principale des <literal>EventManager</literal>s et appelez la à partir de la "
"ligne de commande. Si vous avez besoin des identifiants d'une personne et "
"d'un événement - la méthode <literal>save()</literal> les retourne."

#. Tag: programlisting
#: tutorial.xml:729
#, no-c-format
msgid ""
"<![CDATA[else if (args[0].equals(\"addpersontoevent\")) {\n"
"    Long eventId = mgr.createAndStoreEvent(\"My Event\", new Date());\n"
"    Long personId = mgr.createAndStorePerson(\"Foo\", \"Bar\");\n"
"    mgr.addPersonToEvent(personId, eventId);\n"
"    System.out.println(\"Added person \" + personId + \" to event \" + "
"eventId);\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:731
#, no-c-format
msgid ""
"This was an example of an association between two equally important classes, "
"two entities. As mentioned earlier, there are other classes and types in a "
"typical model, usually \"less important\". Some you have already seen, like "
"an <literal>int</literal> or a <literal>String</literal>. We call these "
"classes <emphasis>value types</emphasis>, and their instances "
"<emphasis>depend</emphasis> on a particular entity. Instances of these types "
"don't have their own identity, nor are they shared between entities (two "
"persons don't reference the same <literal>firstname</literal> object, even "
"if they have the same first name). Of course, value types can not only be "
"found in the JDK (in fact, in a Hibernate application all JDK classes are "
"considered value types), but you can also write dependent classes yourself, "
"<literal>Address</literal> or <literal>MonetaryAmount</literal>, for example."
msgstr ""
"C'était un exemple d'une association entre deux classes de même importance, "
"deux entités. Comme mentionné plus tôt, il y a d'autres classes et d'autres "
"types dans un modèle typique, généralement \"moins importants\". Vous en "
"avez déjà vu certains, comme un <literal>int</literal> ou une "
"<literal>String</literal>. Nous appelons ces classes des <emphasis>types de "
"valeur</emphasis>, et leurs instances <emphasis>dépendent</emphasis> d'une "
"entité particulière. Des instances de ces types n'ont pas leur propre "
"identité, elles ne sont pas non plus partagées entre des entités (deux "
"personnes ne référencent pas le même objet <literal>firstname</literal>, "
"même si elles ont le même prénom). Bien sûr, des types de valeur ne peuvent "
"pas seulement être trouvés dans le JDK (en fait, dans une application "
"Hibernate toutes les classes du JDK sont considérées comme des types de "
"valeur), vous pouvez aussi écrire vous-même des classes dépendantes, "
"<literal>Address</literal> ou <literal>MonetaryAmount</literal>, par exemple."

#. Tag: para
#: tutorial.xml:744
#, no-c-format
msgid ""
"You can also design a collection of value types. This is conceptually very "
"different from a collection of references to other entities, but looks "
"almost the same in Java."
msgstr ""
"Vous pouvez aussi concevoir une collection de types de valeur. C'est "
"conceptuellement très différent d'une collection de références vers d'autres "
"entités, mais très ressemblant en Java."

#. Tag: title
#: tutorial.xml:752
#, no-c-format
msgid "Collection of values"
msgstr "Collection de valeurs"

#. Tag: para
#: tutorial.xml:754
#, no-c-format
msgid ""
"We add a collection of value typed objects to the <literal>Person</literal> "
"entity. We want to store email addresses, so the type we use is "
"<literal>String</literal>, and the collection is again a <literal>Set</"
"literal>:"
msgstr ""
"Nous ajoutons une collection d'objets de type de valeur à l'entité "
"<literal>Person</literal>. Nous voulons stocker des adresses email, donc le "
"type que nous utilisons est <literal>String</literal>, et la collection est "
"encore un <literal>Set</literal> :"

#. Tag: programlisting
#: tutorial.xml:759
#, no-c-format
msgid ""
"<![CDATA[private Set emailAddresses = new HashSet();\n"
"\n"
"public Set getEmailAddresses() {\n"
"    return emailAddresses;\n"
"}\n"
"\n"
"public void setEmailAddresses(Set emailAddresses) {\n"
"    this.emailAddresses = emailAddresses;\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:761
#, no-c-format
msgid "The mapping of this <literal>Set</literal>:"
msgstr "Le mapping de ce <literal>Set</literal> :"

#. Tag: programlisting
#: tutorial.xml:765
#, no-c-format
msgid ""
"<![CDATA[<set name=\"emailAddresses\" table=\"PERSON_EMAIL_ADDR\">\n"
"    <key column=\"PERSON_ID\"/>\n"
"    <element type=\"string\" column=\"EMAIL_ADDR\"/>\n"
"</set>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:767
#, no-c-format
msgid ""
"The difference compared with the earlier mapping is the <literal>element</"
"literal> part, which tells Hibernate that the collection does not contain "
"references to another entity, but a collection of elements of type "
"<literal>String</literal> (the lowercase name tells you it's a Hibernate "
"mapping type/converter). Once again, the <literal>table</literal> attribute "
"of the <literal>set</literal> element determines the table name for the "
"collection. The <literal>key</literal> element defines the foreign-key "
"column name in the collection table. The <literal>column</literal> attribute "
"in the <literal>element</literal> element defines the column name where the "
"<literal>String</literal> values will actually be stored."
msgstr ""
"La différence comparée au mapping vu plus tôt est la partie "
"<literal>element</literal>, laquelle dit à Hibernate que la collection ne "
"contient pas de références vers une autre entité, mais une collection "
"d'éléments de type <literal>String</literal> (le nom en minuscule vous "
"indique que c'est un type/convertisseur du mapping Hibernate). Une fois "
"encore, l'attribut <literal>table</literal> de l'élément <literal>set</"
"literal> détermine le nom de la table pour la collection. L'élément "
"<literal>key</literal> définit le nom de la colonne de la clef étrangère "
"dans la table de la collection. L'attribut <literal>column</literal> dans "
"l'élément <literal>element</literal> définit le nom de la colonne où les "
"valeurs de <literal>String</literal> seront réellement stockées."

#. Tag: para
#: tutorial.xml:777
#, no-c-format
msgid "Have a look at the updated schema:"
msgstr "Regardons le schéma mis à jour :"

#. Tag: programlisting
#: tutorial.xml:781
#, no-c-format
msgid ""
"<![CDATA[\n"
"  _____________        __________________\n"
" |             |      |                  |       _____________\n"
" |   EVENTS    |      |   PERSON_EVENT   |      |             |       "
"___________________\n"
" |_____________|      |__________________|      |    PERSON   |      "
"|                   |\n"
" |             |      |                  |      |_____________|      | "
"PERSON_EMAIL_ADDR |\n"
" | *EVENT_ID   | <--> | *EVENT_ID        |      |             |      |"
"___________________|\n"
" |  EVENT_DATE |      | *PERSON_ID       | <--> | *PERSON_ID  | <--> |  "
"*PERSON_ID       |\n"
" |  TITLE      |      |__________________|      |  AGE        |      |  "
"*EMAIL_ADDR      |\n"
" |_____________|                                |  FIRSTNAME  |      |"
"___________________|\n"
"                                                |  LASTNAME   |\n"
"                                                |_____________|\n"
" ]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:783
#, no-c-format
msgid ""
"You can see that the primary key of the collection table is in fact a "
"composite key, using both columns. This also implies that there can't be "
"duplicate email addresses per person, which is exactly the semantics we need "
"for a set in Java."
msgstr ""
"Vous pouvez voir que la clef primaire de la table de la collection est en "
"fait une clef composée, utilisant deux colonnes. Ceci implique aussi qu'il "
"ne peut pas y avoir d'adresses email dupliquées par personne, ce qui est "
"exactement la sémantique dont nous avons besoin pour un ensemble en Java."

#. Tag: para
#: tutorial.xml:789
#, no-c-format
msgid ""
"You can now try and add elements to this collection, just like we did before "
"by linking persons and events. It's the same code in Java:"
msgstr ""
"Vous pouvez maintenant tester et ajouter des éléments à cette collection, "
"juste comme nous l'avons fait avant en liant des personnes et des "
"événements. C'est le même code en Java."

#. Tag: programlisting
#: tutorial.xml:794
#, no-c-format
msgid ""
"<![CDATA[private void addEmailToPerson(Long personId, String emailAddress) "
"{\n"
"\n"
"    Session session = HibernateUtil.getSessionFactory().getCurrentSession"
"();\n"
"    session.beginTransaction();\n"
"\n"
"    Person aPerson = (Person) session.load(Person.class, personId);\n"
"\n"
"    // The getEmailAddresses() might trigger a lazy load of the collection\n"
"    aPerson.getEmailAddresses().add(emailAddress);\n"
"\n"
"    session.getTransaction().commit();\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:796
#, fuzzy, no-c-format
msgid ""
"This time we didn't use a <emphasis>fetch</emphasis> query to initialize the "
"collection. Hence, the call to its getter method will trigger an additional "
"select to initialize it, so we can add an element to it. Monitor the SQL log "
"and try to optimize this with an eager fetch."
msgstr ""
"Cette fois ci, nous n'avons pas utilisé une requête de chargement agressif "
"(<emphasis>fetch</emphasis>) pour initialiser la collection. Par conséquent, "
"l'invocation du getter déclenchera un select supplémentaire pour "
"l'initialiser. Traquez les logs SQL et tentez d'optimiser ce cas avec un "
"chargement aggressif."

#. Tag: title
#: tutorial.xml:806
#, no-c-format
msgid "Bi-directional associations"
msgstr "Associations bidirectionnelles"

#. Tag: para
#: tutorial.xml:808
#, no-c-format
msgid ""
"Next we are going to map a bi-directional association - making the "
"association between person and event work from both sides in Java. Of "
"course, the database schema doesn't change, we still have many-to-many "
"multiplicity. A relational database is more flexible than a network "
"programming language, so it doesn't need anything like a navigation "
"direction - data can be viewed and retrieved in any possible way."
msgstr ""
"Ensuite nous allons mapper une association bidirectionnelle - faire "
"fonctionner l'association entre une personne et un événement à partir des "
"deux côtés en Java. Bien sûr, le schéma de la base de données ne change pas, "
"nous avons toujours une pluralité many-to-many. Une base de données "
"relationnelle est plus flexible qu'un langage de programmation réseau, donc "
"elle n'a pas besoin de direction de navigation - les données peuvent être "
"vues et récupérées de toutes les manières possibles."

#. Tag: para
#: tutorial.xml:816
#, no-c-format
msgid ""
"First, add a collection of participants to the <literal>Event</literal> "
"Event class:"
msgstr ""
"D'abord, ajouter une collection de participants à la classe <literal>Event</"
"literal> :"

#. Tag: programlisting
#: tutorial.xml:820
#, no-c-format
msgid ""
"<![CDATA[private Set participants = new HashSet();\n"
"\n"
"public Set getParticipants() {\n"
"    return participants;\n"
"}\n"
"\n"
"public void setParticipants(Set participants) {\n"
"    this.participants = participants;\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:822
#, no-c-format
msgid ""
"Now map this side of the association too, in <literal>Event.hbm.xml</"
"literal>."
msgstr ""
"Maintenant mapper ce côté de l'association aussi, dans <literal>Event.hbm."
"xml</literal>."

#. Tag: programlisting
#: tutorial.xml:826
#, no-c-format
msgid ""
"<![CDATA[<set name=\"participants\" table=\"PERSON_EVENT\" inverse=\"true"
"\">\n"
"    <key column=\"EVENT_ID\"/>\n"
"    <many-to-many column=\"PERSON_ID\" class=\"events.Person\"/>\n"
"</set>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:828
#, no-c-format
msgid ""
"As you see, these are normal <literal>set</literal> mappings in both mapping "
"documents. Notice that the column names in <literal>key</literal> and "
"<literal>many-to-many</literal> are swapped in both mapping documents. The "
"most important addition here is the <literal>inverse=\"true\"</literal> "
"attribute in the <literal>set</literal> element of the <literal>Event</"
"literal>'s collection mapping."
msgstr ""
"Comme vous le voyez, ce sont des mappings de <literal>set</literal>s normaux "
"dans les deux documents de mapping. Notez que les noms de colonne dans "
"<literal>key</literal> et <literal>many-to-many</literal> sont inversés dans "
"les 2 documents de mapping. L'ajout le plus important ici est l'attribut "
"<literal>inverse=\"true\"</literal> dans l'élément <literal>set</literal> du "
"mapping de la collection des <literal>Event</literal>s."

#. Tag: para
#: tutorial.xml:836
#, no-c-format
msgid ""
"What this means is that Hibernate should take the other side - the "
"<literal>Person</literal> class - when it needs to find out information "
"about the link between the two. This will be a lot easier to understand once "
"you see how the bi-directional link between our two entities is created ."
msgstr ""
"Ce que signifie qu'Hibernate devrait prendre l'autre côté - la classe "
"<literal>Person</literal> - s'il a besoin de renseigner des informations à "
"propos du lien entre les deux. Ce sera beaucoup plus facile à comprendre une "
"fois que vous verrez comment le lien bidirectionnel entre les deux entités "
"est créé."

#. Tag: title
#: tutorial.xml:845
#, no-c-format
msgid "Working bi-directional links"
msgstr "Travailler avec des liens bidirectionnels"

#. Tag: para
#: tutorial.xml:847
#, no-c-format
msgid ""
"First, keep in mind that Hibernate does not affect normal Java semantics. "
"How did we create a link between a <literal>Person</literal> and an "
"<literal>Event</literal> in the unidirectional example? We added an instance "
"of <literal>Event</literal> to the collection of event references, of an "
"instance of <literal>Person</literal>. So, obviously, if we want to make "
"this link working bi-directional, we have to do the same on the other side - "
"adding a <literal>Person</literal> reference to the collection in an "
"<literal>Event</literal>. This \"setting the link on both sides\" is "
"absolutely necessary and you should never forget doing it."
msgstr ""
"Premièrement, gardez à l'esprit qu'Hibernate n'affecte pas la sémantique "
"normale de Java. Comment avons-nous créé un lien entre une <literal>Person</"
"literal> et un <literal>Event</literal> dans l'exemple unidirectionnel ? "
"Nous avons ajouté une instance de <literal>Event</literal> à la collection "
"des références d'événement d'une instance de <literal>Person</literal>. "
"Donc, évidemment, si vous voulons rendre ce lien bidirectionnel, nous devons "
"faire la même chose de l'autre côté - ajouter une référence de "
"<literal>Person</literal> à la collection d'un <literal>Event</literal>. "
"Cette \"configuration du lien des deux côtés\" est absolument nécessaire et "
"vous ne devriez jamais oublier de le faire."

#. Tag: para
#: tutorial.xml:857
#, fuzzy, no-c-format
msgid ""
"Many developers program defensively and create link management methods to "
"correctly set both sides, e.g. in <literal>Person</literal>:"
msgstr ""
"Beaucoup de développeurs programment de manière défensive et créent des "
"méthodes de gestion de lien pour affecter correctement les deux côtés, par "
"exemple dans <literal>Person</literal> :"

#. Tag: programlisting
#: tutorial.xml:862
#, no-c-format
msgid ""
"<![CDATA[protected Set getEvents() {\n"
"    return events;\n"
"}\n"
"\n"
"protected void setEvents(Set events) {\n"
"    this.events = events;\n"
"}\n"
"\n"
"public void addToEvent(Event event) {\n"
"    this.getEvents().add(event);\n"
"    event.getParticipants().add(this);\n"
"}\n"
"\n"
"public void removeFromEvent(Event event) {\n"
"    this.getEvents().remove(event);\n"
"    event.getParticipants().remove(this);\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:864
#, no-c-format
msgid ""
"Notice that the get and set methods for the collection are now protected - "
"this allows classes in the same package and subclasses to still access the "
"methods, but prevents everybody else from messing with the collections "
"directly (well, almost). You should probably do the same with the collection "
"on the other side."
msgstr ""
"Notez que les méthodes get et set pour la collection sont maintenant "
"protégées - ceci permet à des classes du même paquet et aux sous-classes "
"d'accéder encore aux méthodes, mais empêche n'importe qui d'autre de mettre "
"le désordre directement dans les collections (enfin, presque). Vous devriez "
"probablement faire de même avec la collection de l'autre côté."

#. Tag: para
#: tutorial.xml:871
#, no-c-format
msgid ""
"What about the <literal>inverse</literal> mapping attribute? For you, and "
"for Java, a bi-directional link is simply a matter of setting the references "
"on both sides correctly. Hibernate however doesn't have enough information "
"to correctly arrange SQL <literal>INSERT</literal> and <literal>UPDATE</"
"literal> statements (to avoid constraint violations), and needs some help to "
"handle bi-directional associations properly. Making one side of the "
"association <literal>inverse</literal> tells Hibernate to basically ignore "
"it, to consider it a <emphasis>mirror</emphasis> of the other side. That's "
"all that is necessary for Hibernate to work out all of the issues when "
"transformation a directional navigation model to a SQL database schema. The "
"rules you have to remember are straightforward: All bi-directional "
"associations need one side as <literal>inverse</literal>. In a one-to-many "
"association it has to be the many-side, in many-to-many association you can "
"pick either side, there is no difference."
msgstr ""
"Et à propos de l'attribut de mapping <literal>inverse</literal> ? Pour vous, "
"et pour Java, un lien bidirectionnel est simplement une manière de "
"configurer correctement les références des deux côtés. Hibernate n'a "
"cependant pas assez d'informations pour ordonner correctement les "
"expressions SQL <literal>INSERT</literal> et <literal>UPDATE</literal> (pour "
"éviter les violations de contrainte), et a besoin d'aide pour gérer "
"proprement les associations bidirectionnelles. Rendre <literal>inverse</"
"literal> un côté d'une assocation dit à Hibernate de l'ignorer "
"essentiellement, pour le considérer comme un <emphasis>miroir</emphasis> de "
"l'autre côté. C'est tout ce qui est nécessaire à Hibernate pour découvrir "
"tout des problèmes de transformation d'un modèle de navigation "
"directionnelle vers un schéma SQL de base de données. Les règles dont vous "
"devez vous souvenir sont : toutes les associations bidirectionnelles ont "
"besoin d'un côté marqué <literal>inverse</literal>. Dans une association un-"
"vers-plusieurs vous pouvez choisir n'importe quel côté, il n'y a pas de "
"différence."

#. Tag: title
#: tutorial.xml:889
#, no-c-format
msgid "Part 3 - The EventManager web application"
msgstr "Part 3 - L'application web EventManager"

#. Tag: para
#: tutorial.xml:891
#, fuzzy, no-c-format
msgid "Let's turn the following discussion into a small web application..."
msgstr "Let's turn this into a small web application."

#. Tag: para
#: tutorial.xml:895
#, no-c-format
msgid ""
"A Hibernate web application uses <literal>Session</literal> and "
"<literal>Transaction</literal> almost like a standalone application. "
"However, some common patterns are useful. We now write an "
"<literal>EventManagerServlet</literal>. This servlet can list all events "
"stored in the database, and it provides an HTML form to enter new events."
msgstr ""
"Une application web Hibernate utilise la <literal>Session</literal> et "
"<literal>Transaction</literal> comme une application standalone. Cependant, "
"quelques patterns sont utiles. Nous allons coder une "
"<literal>EventManagerServlet</literal>. Cette servlet peut lister tous les "
"évènements stockés dans la base de données, et fournir une formulaire HTML "
"pour saisir d'autres évènements."

#. Tag: title
#: tutorial.xml:903
#, no-c-format
msgid "Writing the basic servlet"
msgstr "Ecrire la servlet de base"

#. Tag: para
#: tutorial.xml:905
#, no-c-format
msgid ""
"Create a new class in your source directory, in the <literal>events</"
"literal> package:"
msgstr ""
"Créons une nouvelle classe dans notre répertoire source, dans le package "
"<literal>events</literal>:"

#. Tag: programlisting
#: tutorial.xml:910
#, no-c-format
msgid ""
"<![CDATA[package events;\n"
"\n"
"// Imports\n"
"\n"
"public class EventManagerServlet extends HttpServlet {\n"
"\n"
"    // Servlet code\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:912
#, no-c-format
msgid ""
"The servlet handles HTTP <literal>GET</literal> requests only, hence, the "
"method we implement is <literal>doGet()</literal>:"
msgstr ""
"The servlet handles HTTP <literal>GET</literal> requests only, hence, the "
"method we implement is <literal>doGet()</literal>:"

#. Tag: programlisting
#: tutorial.xml:917
#, no-c-format
msgid ""
"<![CDATA[protected void doGet(HttpServletRequest request,\n"
"                     HttpServletResponse response)\n"
"        throws ServletException, IOException {\n"
"\n"
"    SimpleDateFormat dateFormatter = new SimpleDateFormat(\"dd.MM.yyyy\");\n"
"\n"
"    try {\n"
"        // Begin unit of work\n"
"        HibernateUtil.getSessionFactory()\n"
"                .getCurrentSession().beginTransaction();\n"
"\n"
"        // Process request and render page...\n"
"\n"
"        // End unit of work\n"
"        HibernateUtil.getSessionFactory()\n"
"                .getCurrentSession().getTransaction().commit();\n"
"\n"
"    } catch (Exception ex) {\n"
"        HibernateUtil.getSessionFactory()\n"
"                .getCurrentSession().getTransaction().rollback();\n"
"        throw new ServletException(ex);\n"
"    }\n"
"\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:919
#, fuzzy, no-c-format
msgid ""
"The pattern we are applying here is called <emphasis>session-per-request</"
"emphasis>. When a request hits the servlet, a new Hibernate "
"<literal>Session</literal> is opened through the first call to "
"<literal>getCurrentSession()</literal> on the <literal>SessionFactory</"
"literal>. Then a database transaction is started&mdash;all data access as to "
"occur inside a transaction, no matter if data is read or written (we don't "
"use the auto-commit mode in applications)."
msgstr ""
"La pattern que nous utilisons ici est appelé <emphasis>session-per-request</"
"emphasis>. Lorsqu'une requête touche la servlet, une nouvelle "
"<literal>Session</literal> hibernate est ouverte à l'invocationde "
"<literal>getCurrentSession()</literal> sur la <literal>SessionFactory</"
"literal>. Ensuite, une transaction avec la base de données est "
"démarrée&mdash; tous les accès à la base de données interviennent au sein de "
"la transactiton, peu importe que les données soient lues ou écrites (nous "
"n'utilisons pas le mode auto-commit dans les applications)."

#. Tag: para
#: tutorial.xml:928
#, no-c-format
msgid ""
"Do <emphasis>not</emphasis> use a new Hibernate <literal>Session</literal> "
"for every database operation. Use one Hibernate <literal>Session</literal> "
"that is scoped to the whole request. Use <literal>getCurrentSession()</"
"literal>, so that it is automatically bound to the current Java thread."
msgstr ""
"UNTRANSLATED Do <emphasis>not</emphasis> use a new Hibernate "
"<literal>Session</literal> for every database operation. Use one Hibernate "
"<literal>Session</literal> that is scoped to the whole request. Use "
"<literal>getCurrentSession()</literal>, so that it is automatically bound to "
"the current Java thread."

#. Tag: para
#: tutorial.xml:935
#, no-c-format
msgid ""
"Next, the possible actions of the request are processed and the response "
"HTML is rendered. We'll get to that part soon."
msgstr ""
"Ensuite, les actions possibles de la requêtes sont exécutées et la réponse "
"HTML est rendue. Nous en parlerons plus tard."

#. Tag: para
#: tutorial.xml:940
#, fuzzy, no-c-format
msgid ""
"Finally, the unit of work ends when processing and rendering is complete. If "
"any problem occurred during processing or rendering, an exception will be "
"thrown and the database transaction rolled back. This completes the "
"<literal>session-per-request</literal> pattern. Instead of the transaction "
"demarcation code in every servlet you could also write a servlet filter. See "
"the Hibernate website and Wiki for more information about this pattern, "
"called <emphasis>Open Session in View</emphasis>&mdash;you'll need it as "
"soon as you consider rendering your view in JSP, not in a servlet."
msgstr ""
"Enfin, l'unité de travail s'achève lorsque l'exécution et le rendu sont "
"achevés. Si un problème survient lors de ces deux phases, une exception est "
"soulevée et la transaction avec la base de données subit un rollback. Voila "
"pour le pattern <literal>session-per-request</literal>. Au lieu d'un code de "
"démarcation de transaction au sein de chaque servlet, vous pouvez écrire un "
"filtre de servlet. Voir le site Hibernate et le Wiki pour plus d'information "
"sur ce pattern, appelé <emphasis>Open Session in View</emphasis>&mdash; vous "
"en aurez besoin dès que vous utiliserez des JSPs et non plus des servlets "
"pour le rendu de vos vues."

#. Tag: title
#: tutorial.xml:954
#, no-c-format
msgid "Processing and rendering"
msgstr "Procéder et rendre"

#. Tag: para
#: tutorial.xml:956
#, no-c-format
msgid ""
"Let's implement the processing of the request and rendering of the page."
msgstr "Implémentons l'exécution de la requête et le rendu de la page."

#. Tag: programlisting
#: tutorial.xml:960
#, no-c-format
msgid ""
"<![CDATA[// Write HTML header\n"
"PrintWriter out = response.getWriter();\n"
"out.println(\"<html><head><title>Event Manager</title></head><body>\");\n"
"\n"
"// Handle actions\n"
"if ( \"store\".equals(request.getParameter(\"action\")) ) {\n"
"\n"
"    String eventTitle = request.getParameter(\"eventTitle\");\n"
"    String eventDate = request.getParameter(\"eventDate\");\n"
"\n"
"    if ( \"\".equals(eventTitle) || \"\".equals(eventDate) ) {\n"
"        out.println(\"<b><i>Please enter event title and date.</i></b>\");\n"
"    } else {\n"
"        createAndStoreEvent(eventTitle, dateFormatter.parse(eventDate));\n"
"        out.println(\"<b><i>Added event.</i></b>\");\n"
"    }\n"
"}\n"
"\n"
"// Print page\n"
"printEventForm(out);\n"
"listEvents(out, dateFormatter);\n"
"\n"
"// Write HTML footer\n"
"out.println(\"</body></html>\");\n"
"out.flush();\n"
"out.close();]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:962
#, fuzzy, no-c-format
msgid ""
"Granted, this coding style with a mix of Java and HTML would not scale in a "
"more complex application&mdash;keep in mind that we are only illustrating "
"basic Hibernate concepts in this tutorial. The code prints an HTML header "
"and a footer. Inside this page, an HTML form for event entry and a list of "
"all events in the database are printed. The first method is trivial and only "
"outputs HTML:"
msgstr ""
"Ce style de code avec un mix de Java et d'HTML ne serait pas scalable dans "
"une application plus complexe&mdash;gardez à l'esprit que nous ne faisons "
"qu'illustrer les concepts basiques d'Hibernate dans ce tutoriel. Ce code "
"affiche une en tête et un pied de page HTML. Dans cette page, sont affichés "
"un formulaire pour la saisie d'évènements ainsi qu'une liste de tous les "
"évènements de la base de données. La première méthode est triviale est ne "
"fait que sortir de l'HTML:"

#. Tag: programlisting
#: tutorial.xml:971
#, no-c-format
msgid ""
"<![CDATA[private void printEventForm(PrintWriter out) {\n"
"    out.println(\"<h2>Add new event:</h2>\");\n"
"    out.println(\"<form>\");\n"
"    out.println(\"Title: <input name='eventTitle' length='50'/><br/>\");\n"
"    out.println(\"Date (e.g. 24.12.2009): <input name='eventDate' "
"length='10'/><br/>\");\n"
"    out.println(\"<input type='submit' name='action' value='store'/>\");\n"
"    out.println(\"</form>\");\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:973
#, no-c-format
msgid ""
"The <literal>listEvents()</literal> method uses the Hibernate "
"<literal>Session</literal> bound to the current thread to execute a query:"
msgstr ""
"La méthode <literal>listEvents()</literal> utilise la <literal>Session</"
"literal> Hibernate liée au thread courant pour exécuter la requête:"

#. Tag: programlisting
#: tutorial.xml:979
#, no-c-format
msgid ""
"<![CDATA[private void listEvents(PrintWriter out, SimpleDateFormat "
"dateFormatter) {\n"
"\n"
"    List result = HibernateUtil.getSessionFactory()\n"
"                    .getCurrentSession().createCriteria(Event.class).list"
"();\n"
"    if (result.size() > 0) {\n"
"        out.println(\"<h2>Events in database:</h2>\");\n"
"        out.println(\"<table border='1'>\");\n"
"        out.println(\"<tr>\");\n"
"        out.println(\"<th>Event title</th>\");\n"
"        out.println(\"<th>Event date</th>\");\n"
"        out.println(\"</tr>\");\n"
"        for (Iterator it = result.iterator(); it.hasNext();) {\n"
"            Event event = (Event) it.next();\n"
"            out.println(\"<tr>\");\n"
"            out.println(\"<td>\" + event.getTitle() + \"</td>\");\n"
"            out.println(\"<td>\" + dateFormatter.format(event.getDate()) + "
"\"</td>\");\n"
"            out.println(\"</tr>\");\n"
"        }\n"
"        out.println(\"</table>\");\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:981
#, no-c-format
msgid ""
"Finally, the <literal>store</literal> action is dispatched to the "
"<literal>createAndStoreEvent()</literal> method, which also uses the "
"<literal>Session</literal> of the current thread:"
msgstr ""
"FEnfin, l'action <literal>store</literal> renvoie à la méthode "
"<literal>createAndStoreEvent()</literal>, qui utilise aussi la "
"<literal>Session</literal> du thread courant:"

#. Tag: programlisting
#: tutorial.xml:987
#, no-c-format
msgid ""
"<![CDATA[protected void createAndStoreEvent(String title, Date theDate) {\n"
"    Event theEvent = new Event();\n"
"    theEvent.setTitle(title);\n"
"    theEvent.setDate(theDate);\n"
"\n"
"    HibernateUtil.getSessionFactory()\n"
"                    .getCurrentSession().save(theEvent);\n"
"}]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:989
#, fuzzy, no-c-format
msgid ""
"That's it, the servlet is complete. A request to the servlet will be "
"processed in a single <literal>Session</literal> and <literal>Transaction</"
"literal>. As earlier in the standalone application, Hibernate can "
"automatically bind these objects to the current thread of execution. This "
"gives you the freedom to layer your code and access the "
"<literal>SessionFactory</literal> in any way you like. Usually you'd use a "
"more sophisticated design and move the data access code into data access "
"objects (the DAO pattern). See the Hibernate Wiki for more examples."
msgstr ""
"La servlet est faite. Une requête à la servlet sera exécutée par une seule "
"<literal>Session</literal> et <literal>Transaction</literal>. Comme pour une "
"application standalone, Hibernate peut automatiquement lier ces objets au "
"thread courant d'exécution. Cela vous laisse la liberté de séparer votre "
"code en couches et d'accéder à la <literal>SessionFactory</literal> par le "
"moyen que vous voulez. Généralement, vous utiliserez des conceptions plus "
"sophistiquées et déplacerez le code d'accès aux données dans une couche DAO. "
"Voir le wiki Hibernate pour plus d'exemples."

#. Tag: title
#: tutorial.xml:1003
#, no-c-format
msgid "Deploying and testing"
msgstr "Déployer et tester"

#. Tag: para
#: tutorial.xml:1005
#, no-c-format
msgid ""
"To deploy this application you have to create a web archive, a WAR. Add the "
"following Ant target to your <literal>build.xml</literal>:"
msgstr ""
"Pour déployer cette application, vous devez créer une archive Web, un War. "
"Ajoutez la cible Ant suivante dans votre <literal>build.xml</literal>:"

#. Tag: programlisting
#: tutorial.xml:1010
#, no-c-format
msgid ""
"<![CDATA[<target name=\"war\" depends=\"compile\">\n"
"    <war destfile=\"hibernate-tutorial.war\" webxml=\"web.xml\">\n"
"        <lib dir=\"${librarydir}\">\n"
"          <exclude name=\"jsdk*.jar\"/>\n"
"        </lib>\n"
"\n"
"        <classes dir=\"${targetdir}\"/>\n"
"    </war>\n"
"</target>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:1012
#, no-c-format
msgid ""
"This target creates a file called <literal>hibernate-tutorial.war</literal> "
"in your project directory. It packages all libraries and the <literal>web."
"xml</literal> descriptor, which is expected in the base directory of your "
"project:"
msgstr ""
"Cette cible créé un fichier nommé <literal>hibernate-tutorial.war</literal> "
"dans le répertoire de votre projet. Elle package les bibliothèques et le "
"descripteur <literal>web.xml</literal> qui est attendu dans le répertoire "
"racine de votre projet:"

#. Tag: programlisting
#: tutorial.xml:1018
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<web-app version=\"2.4\"\n"
"    xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"    xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/"
"xml/ns/j2ee/web-app_2_4.xsd\">\n"
"\n"
"    <servlet>\n"
"        <servlet-name>Event Manager</servlet-name>\n"
"        <servlet-class>events.EventManagerServlet</servlet-class>\n"
"    </servlet>\n"
"\n"
"    <servlet-mapping>\n"
"        <servlet-name>Event Manager</servlet-name>\n"
"        <url-pattern>/eventmanager</url-pattern>\n"
"    </servlet-mapping>\n"
"</web-app>]]>"
msgstr ""

#. Tag: para
#: tutorial.xml:1020
#, fuzzy, no-c-format
msgid ""
"Before you compile and deploy the web application, note that an additional "
"library is required: <literal>jsdk.jar</literal>. This is the Java servlet "
"development kit, if you don't have this library already, get it from the Sun "
"website and copy it to your library directory. However, it will be only used "
"for compilation and excluded from the WAR package."
msgstr ""
"Avant de compiler et déployer l'application web, notez qu'une bibliothèque "
"supplémentaire est requise: <literal>servlet.jar</literal>. C'est le kit de "
"développement de Servlet Java, si vous ne disposez pas de cette "
"bibliothèque, prenez la sur le <ulink url=\"http://java.sun.com/products/"
"servlet/archive.html\">site de Sun</ulink> et copiez la dans votre "
"répertoire des bibliothèques. Cependant, elle ne sera utilisée uniquement "
"pour la compilation et sera exclue du paackage WAR."

#. Tag: para
#: tutorial.xml:1028
#, no-c-format
msgid ""
"To build and deploy call <literal>ant war</literal> in your project "
"directory and copy the <literal>hibernate-tutorial.war</literal> file into "
"your Tomcat <literal>webapp</literal> directory. If you don't have Tomcat "
"installed, download it and follow the installation instructions. You don't "
"have to change any Tomcat configuration to deploy this application though."
msgstr ""
"Pour construire et déployer, appelez <literal>ant war</literal> dans votre "
"projet et copier le fichier <literal>hibernate-tutorial.war</literal> dans "
"le répertoire <literal>webapp</literal> de tomcat Si vous n'avez pas "
"installé Tomcat, téléchargez le et suivez la notice d'installation. Vous "
"n'avez pas à modifier la configuration Tomcat pour déployer cette "
"application."

#. Tag: para
#: tutorial.xml:1036
#, no-c-format
msgid ""
"Once deployed and Tomcat is running, access the application at "
"<literal>http://localhost:8080/hibernate-tutorial/eventmanager</literal>. "
"Make sure you watch the Tomcat log to see Hibernate initialize when the "
"first request hits your servlet (the static initializer in "
"<literal>HibernateUtil</literal> is called) and to get the detailed output "
"if any exceptions occurs."
msgstr ""
"Une fois l'application déployée et Tomcat lancé, accédez à l'application via "
"<literal>http://localhost:8080/hibernate-tutorial/eventmanager</literal>. "
"Assurez vous de consulter les traces tomcat pour observer l'initialisation "
"d'Hibernate à la première requête touchant votre servlet (l'initialisation "
"statique dans <literal>HibernateUtil</literal> est invoquée) et pour "
"vérifier qu'aucune exception ne survienne."

#. Tag: title
#: tutorial.xml:1049
#, no-c-format
msgid "Summary"
msgstr "Résumé"

#. Tag: para
#: tutorial.xml:1051
#, no-c-format
msgid ""
"This tutorial covered the basics of writing a simple standalone Hibernate "
"application and a small web application."
msgstr ""
"Ce didacticiel a couvert les bases de l'écriture d'une simple application "
"Hibernate ainsi qu'une petite application web."

#. Tag: para
#: tutorial.xml:1056
#, no-c-format
msgid ""
"If you already feel confident with Hibernate, continue browsing through the "
"reference documentation table of contents for topics you find interesting - "
"most asked are transactional processing (<xref linkend=\"transactions\"/>), "
"fetch performance (<xref linkend=\"performance\"/>), or the usage of the API "
"(<xref linkend=\"objectstate\"/>) and the query features (<xref linkend="
"\"objectstate-querying\"/>)."
msgstr ""
"Si vous êtes déjà confiants avec Hibernate, continuez à parcourir les sujets "
"que vous trouvez intéressants à travers la table des matières de la "
"documentation de référence - les plus demandés sont le traitement "
"transactionnel (<xref linkend=\"transactions\"/>), la performance des "
"récupérations d'information (<xref linkend=\"performance\"/>), ou "
"l'utilisation de l'API (<xref linkend=\"objectstate\"/>) et les "
"fonctionnalités des requêtes (<xref linkend=\"objectstate-querying\"/>)."

#. Tag: para
#: tutorial.xml:1064
#, no-c-format
msgid ""
"Don't forget to check the Hibernate website for more (specialized) tutorials."
msgstr ""
"N'oubliez pas de vérifier le site web d'Hibernate pour d'autres didacticiels "
"(plus spécialisés)."

#~ msgid ""
#~ "This chapter is an introductory tutorial for new users of Hibernate. We "
#~ "start with a simple command line application using an in-memory database "
#~ "and develop it in easy to understand steps."
#~ msgstr ""
#~ "Ce chapitre est un didacticiel introductif destiné aux nouveaux "
#~ "utilisateurs d'Hibernate. Nous commençons avec une simple application en "
#~ "ligne de commande utilisant une base de données en mémoire, et la "
#~ "développons en étapes faciles à comprendre."

#~ msgid ""
#~ "This tutorial is intended for new users of Hibernate but requires Java "
#~ "and SQL knowledge. It is based on a tutorial by Michael Gloegl, the third-"
#~ "party libraries we name are for JDK 1.4 and 5.0. You might need others "
#~ "for JDK 1.3."
#~ msgstr ""
#~ "Ce didacticiel est destiné aux nouveaux utilisateurs d'Hibernate mais "
#~ "requiert des connaissances Java et SQL. Il est basé sur un didacticiel de "
#~ "Michael Gloegl, les bibliothèques tierces que nous nommons sont pour les "
#~ "JDK 1.4 et 5.0. Vous pourriez avoir besoin d'autres bibliothèques pour le "
#~ "JDK 1.3."

#~ msgid ""
#~ "The source code for the tutorial is included in the distribution in the "
#~ "<literal>doc/reference/tutorial/</literal> directory."
#~ msgstr ""
#~ "Le code source de ce tutoriel est inclus dans la distribution dans le "
#~ "répertoire <literal>doc/reference/tutorial/</literal>."

#~ msgid ""
#~ "First, we'll create a simple console-based Hibernate application. We use "
#~ "an Java database (HSQL DB), so we do not have to install any database "
#~ "server."
#~ msgstr ""
#~ "D'abord, nous créerons une simple application Hibernate en console. Nous "
#~ "utilisons une base de données en mémoire (HSQL DB), donc nous n'avons pas "
#~ "à installer de serveur de base de données."

#~ msgid ""
#~ "Let's assume we need a small database application that can store events "
#~ "we want to attend, and information about the hosts of these events."
#~ msgstr ""
#~ "Supposons que nous ayons besoin d'une petite application de base de "
#~ "données qui puisse stocker des événements que nous voulons suivre, et des "
#~ "informations à propos des hôtes de ces événements."

#~ msgid ""
#~ "The first thing we do, is set up our development directory and put all "
#~ "the Java libraries we need into it. Download the Hibernate distribution "
#~ "from the Hibernate website. Extract the package and place all required "
#~ "libraries found in <literal>/lib</literal> into into the <literal>/lib</"
#~ "literal> directory of your new development working directory. It should "
#~ "look like this:"
#~ msgstr ""
#~ "La première chose que nous faisons est de configurer notre répertoire de "
#~ "développement et de mettre toutes les bibliothèques dont nous avons "
#~ "besoin dedans. Téléchargez la distribution Hibernate à partir du site web "
#~ "d'Hibernate. Extrayez le paquet et placez toutes les bibliothèques "
#~ "requises trouvées dans <literal>/lib</literal> dans le répertoire "
#~ "<literal>/lib</literal> de votre nouveau répertoire de travail. Il "
#~ "devrait ressembler à ça :"

#~ msgid ""
#~ "This is the minimum set of required libraries (note that we also copied "
#~ "hibernate3.jar, the main archive) for Hibernate <emphasis>at the time of "
#~ "writing</emphasis>. The Hibernate release you are using might require "
#~ "more or less libraries. See the <literal>README.txt</literal> file in the "
#~ "<literal>lib/</literal> directory of the Hibernate distribution for more "
#~ "information about required and optional third-party libraries. (Actually, "
#~ "Log4j is not required but preferred by many developers.)"
#~ msgstr ""
#~ "Ceci est l'ensemble minimum de bibliothèques requises (notez que nous "
#~ "avons aussi copié hibernate3.jar, l'archive principale) pour Hibernate. "
#~ "Lisez le fichier <literal>README.txt</literal> dans le répertoire "
#~ "<literal>lib/</literal> de la distribution Hibernate pour plus "
#~ "d'informations à propos des biliothèques tierces requises et "
#~ "optionnelles. (En fait, log4j n'est pas requis mais préféré par beaucoup "
#~ "de développeurs.)"
