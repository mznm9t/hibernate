# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-08-14 15:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: association_mapping.xml:30
#, no-c-format
msgid "Association Mappings"
msgstr ""

#. Tag: title
#: association_mapping.xml:33
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: association_mapping.xml:35
#, no-c-format
msgid "Association mappings are the often most difficult thing to get right. In this section we'll go through the canonical cases one by one, starting with unidirectional mappings, and then considering the bidirectional cases. We'll use <literal>Person</literal> and <literal>Address</literal> in all the examples."
msgstr ""

#. Tag: para
#: association_mapping.xml:43
#, no-c-format
msgid "We'll classify associations by whether or not they map to an intervening join table, and by multiplicity."
msgstr ""

#. Tag: para
#: association_mapping.xml:48
#, no-c-format
msgid "Nullable foreign keys are not considered good practice in traditional data modelling, so all our examples use not null foreign keys. This is not a requirement of Hibernate, and the mappings will all work if you drop the nullability constraints."
msgstr ""

#. Tag: title
#: association_mapping.xml:58
#, no-c-format
msgid "Unidirectional associations"
msgstr ""

#. Tag: title
#: association_mapping.xml:61 association_mapping.xml:132
#, no-c-format
msgid "many to one"
msgstr ""

#. Tag: para
#: association_mapping.xml:63
#, no-c-format
msgid "A <emphasis>unidirectional many-to-one association</emphasis> is the most common kind of unidirectional association."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:68
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:69 association_mapping.xml:185
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key, addressId bigint not null )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:74 association_mapping.xml:145 association_mapping.xml:209 association_mapping.xml:249
#, no-c-format
msgid "one to one"
msgstr ""

#. Tag: para
#: association_mapping.xml:76
#, no-c-format
msgid "A <emphasis>unidirectional one-to-one association on a foreign key</emphasis> is almost identical. The only difference is the column unique constraint."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:81
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\" \n"
      "        unique=\"true\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:82 association_mapping.xml:217
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key, addressId bigint not null unique )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:84
#, no-c-format
msgid "A <emphasis>unidirectional one-to-one association on a primary key</emphasis> usually uses a special id generator. (Notice that we've reversed the direction of the association in this example.)"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:90
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"foreign\">\n"
      "            <param name=\"property\">person</param>\n"
      "        </generator>\n"
      "    </id>\n"
      "    <one-to-one name=\"person\" constrained=\"true\"/>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:91 association_mapping.xml:225
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table Address ( personId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:96 association_mapping.xml:118
#, no-c-format
msgid "one to many"
msgstr ""

#. Tag: para
#: association_mapping.xml:98
#, no-c-format
msgid "A <emphasis>unidirectional one-to-many association on a foreign key</emphasis> is a very unusual case, and is not really recommended."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:103
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\">\n"
      "        <key column=\"personId\" \n"
      "            not-null=\"true\"/>\n"
      "        <one-to-many class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:104
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key, personId bigint not null )\n"
      "        ]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:106
#, no-c-format
msgid "We think it's better to use a join table for this kind of association."
msgstr ""

#. Tag: title
#: association_mapping.xml:115
#, no-c-format
msgid "Unidirectional associations with join tables"
msgstr ""

#. Tag: para
#: association_mapping.xml:120
#, no-c-format
msgid "A <emphasis>unidirectional one-to-many association on a join table</emphasis> is much preferred. Notice that by specifying <literal>unique=\"true\"</literal>, we have changed the multiplicity from many-to-many to one-to-many."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:126
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            unique=\"true\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:127
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId not null, addressId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:134
#, no-c-format
msgid "A <emphasis>unidirectional many-to-one association on a join table</emphasis> is quite common when the association is optional."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:139
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:140
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null primary key, addressId bigint not null )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:147
#, no-c-format
msgid "A <emphasis>unidirectional one-to-one association on a join table</emphasis> is extremely unusual, but possible."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:152
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:153 association_mapping.xml:257
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null primary key, addressId bigint not null unique )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:158 association_mapping.xml:262
#, no-c-format
msgid "many to many"
msgstr ""

#. Tag: para
#: association_mapping.xml:160
#, no-c-format
msgid "Finally, we have a <emphasis>unidirectional many-to-many association</emphasis>."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:164
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:165 association_mapping.xml:270
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null, addressId bigint not null, primary key (personId, addressId) )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:172
#, no-c-format
msgid "Bidirectional associations"
msgstr ""

#. Tag: title
#: association_mapping.xml:175 association_mapping.xml:235
#, no-c-format
msgid "one to many / many to one"
msgstr ""

#. Tag: para
#: association_mapping.xml:177
#, no-c-format
msgid "A <emphasis>bidirectional many-to-one association</emphasis> is the most common kind of association. (This is the standard parent/child relationship.)"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:183
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"people\" inverse=\"true\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <one-to-many class=\"Person\"/>\n"
      "    </set>\n"
      "</class>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:187
#, no-c-format
msgid "If you use a <literal>List</literal> (or other indexed collection) you need to set the <literal>key</literal> column of the foreign key to <literal>not null</literal>, and let Hibernate manage the association from the collections side to maintain the index of each element (making the other side virtually inverse by setting <literal>update=\"false\"</literal> and <literal>insert=\"false\"</literal>):"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:195
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "   <id name=\"id\"/>\n"
      "   ...\n"
      "   <many-to-one name=\"address\"\n"
      "      column=\"addressId\"\n"
      "      not-null=\"true\"\n"
      "      insert=\"false\"\n"
      "      update=\"false\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "   <id name=\"id\"/>\n"
      "   ...\n"
      "   <list name=\"people\">\n"
      "      <key column=\"addressId\" not-null=\"true\"/>\n"
      "      <list-index column=\"peopleIdx\"/>\n"
      "      <one-to-many class=\"Person\"/>\n"
      "   </list>\n"
      "</class>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:197
#, no-c-format
msgid "It is important that you define <literal>not-null=\"true\"</literal> on the <literal>&lt;key&gt;</literal> element of the collection mapping if the underlying foreign key column is <literal>NOT NULL</literal>. Don't only declare <literal>not-null=\"true\"</literal> on a possible nested <literal>&lt;column&gt;</literal> element, but on the <literal>&lt;key&gt;</literal> element."
msgstr ""

#. Tag: para
#: association_mapping.xml:211
#, no-c-format
msgid "A <emphasis>bidirectional one-to-one association on a foreign key</emphasis> is quite common."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:216
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <many-to-one name=\"address\" \n"
      "        column=\"addressId\" \n"
      "        unique=\"true\"\n"
      "        not-null=\"true\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "   <one-to-one name=\"person\" \n"
      "        property-ref=\"address\"/>\n"
      "</class>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:219
#, no-c-format
msgid "A <emphasis>bidirectional one-to-one association on a primary key</emphasis> uses the special id generator."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:224
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <one-to-one name=\"address\"/>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"foreign\">\n"
      "            <param name=\"property\">person</param>\n"
      "        </generator>\n"
      "    </id>\n"
      "    <one-to-one name=\"person\" \n"
      "        constrained=\"true\"/>\n"
      "</class>]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:232
#, no-c-format
msgid "Bidirectional associations with join tables"
msgstr ""

#. Tag: para
#: association_mapping.xml:237
#, no-c-format
msgid "A <emphasis>bidirectional one-to-many association on a join table</emphasis>. Note that the <literal>inverse=\"true\"</literal> can go on either end of the association, on the collection, or on the join."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:243
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" \n"
      "        table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            unique=\"true\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        inverse=\"true\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <many-to-one name=\"person\"\n"
      "            column=\"personId\"\n"
      "            not-null=\"true\"/>\n"
      "    </join>\n"
      "</class>]]>"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:244
#, no-c-format
msgid ""
      "<![CDATA[\n"
      "create table Person ( personId bigint not null primary key )\n"
      "create table PersonAddress ( personId bigint not null, addressId bigint not null primary key )\n"
      "create table Address ( addressId bigint not null primary key )\n"
      "        ]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:251
#, no-c-format
msgid "A <emphasis>bidirectional one-to-one association on a join table</emphasis> is extremely unusual, but possible."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:256
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\">\n"
      "        <key column=\"personId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"address\"\n"
      "            column=\"addressId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <join table=\"PersonAddress\" \n"
      "        optional=\"true\"\n"
      "        inverse=\"true\">\n"
      "        <key column=\"addressId\" \n"
      "            unique=\"true\"/>\n"
      "        <many-to-one name=\"person\"\n"
      "            column=\"personId\" \n"
      "            not-null=\"true\"\n"
      "            unique=\"true\"/>\n"
      "    </join>\n"
      "</class>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:264
#, no-c-format
msgid "Finally, we have a <emphasis>bidirectional many-to-many association</emphasis>."
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:268
#, no-c-format
msgid ""
      "<![CDATA[<class name=\"Person\">\n"
      "    <id name=\"id\" column=\"personId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"addresses\" table=\"PersonAddress\">\n"
      "        <key column=\"personId\"/>\n"
      "        <many-to-many column=\"addressId\"\n"
      "            class=\"Address\"/>\n"
      "    </set>\n"
      "</class>\n"
      "\n"
      "<class name=\"Address\">\n"
      "    <id name=\"id\" column=\"addressId\">\n"
      "        <generator class=\"native\"/>\n"
      "    </id>\n"
      "    <set name=\"people\" inverse=\"true\" table=\"PersonAddress\">\n"
      "        <key column=\"addressId\"/>\n"
      "        <many-to-many column=\"personId\"\n"
      "            class=\"Person\"/>\n"
      "    </set>\n"
      "</class>]]>"
msgstr ""

#. Tag: title
#: association_mapping.xml:277
#, no-c-format
msgid "More complex association mappings"
msgstr ""

#. Tag: para
#: association_mapping.xml:279
#, no-c-format
msgid "More complex association joins are <emphasis>extremely</emphasis> rare. Hibernate makes it possible to handle more complex situations using SQL fragments embedded in the mapping document. For example, if a table with historical account information data defines <literal>accountNumber</literal>, <literal>effectiveEndDate</literal> and <literal>effectiveStartDate</literal>columns, mapped as follows:"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:288
#, no-c-format
msgid ""
      "<![CDATA[<properties name=\"currentAccountKey\">\n"
      "    <property name=\"accountNumber\" type=\"string\" not-null=\"true\"/>\n"
      "    <property name=\"currentAccount\" type=\"boolean\">\n"
      "        <formula>case when effectiveEndDate is null then 1 else 0 end</formula>\n"
      "    </property>\n"
      "</properties>\n"
      "<property name=\"effectiveEndDate\" type=\"date\"/>\n"
      "<property name=\"effectiveStateDate\" type=\"date\" not-null=\"true\"/>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:290
#, no-c-format
msgid "Then we can map an association to the <emphasis>current</emphasis> instance (the one with null <literal>effectiveEndDate</literal>) using:"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:295
#, no-c-format
msgid ""
      "<![CDATA[<many-to-one name=\"currentAccountInfo\" \n"
      "        property-ref=\"currentAccountKey\"\n"
      "        class=\"AccountInfo\">\n"
      "    <column name=\"accountNumber\"/>\n"
      "    <formula>'1'</formula>\n"
      "</many-to-one>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:297
#, no-c-format
msgid "In a more complex example, imagine that the association between <literal>Employee</literal> and <literal>Organization</literal> is maintained in an <literal>Employment</literal> table full of historical employment data. Then an association to the employee's <emphasis>most recent</emphasis> employer (the one with the most recent <literal>startDate</literal>) might be mapped this way:"
msgstr ""

#. Tag: programlisting
#: association_mapping.xml:305
#, no-c-format
msgid ""
      "<![CDATA[<join>\n"
      "    <key column=\"employeeId\"/>\n"
      "    <subselect>\n"
      "        select employeeId, orgId \n"
      "        from Employments \n"
      "        group by orgId \n"
      "        having startDate = max(startDate)\n"
      "    </subselect>\n"
      "    <many-to-one name=\"mostRecentEmployer\" \n"
      "            class=\"Organization\" \n"
      "            column=\"orgId\"/>\n"
      "</join>]]>"
msgstr ""

#. Tag: para
#: association_mapping.xml:307
#, no-c-format
msgid "You can get quite creative with this functionality, but it is usually more practical to handle these kinds of cases using HQL or a criteria query."
msgstr ""

