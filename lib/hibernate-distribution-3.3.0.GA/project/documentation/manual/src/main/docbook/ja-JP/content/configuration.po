msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2007-10-25 07:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: configuration.xml:5
#, no-c-format
msgid "Configuration"
msgstr "設定"

#. Tag: para
#: configuration.xml:7
#, no-c-format
msgid ""
"Because Hibernate is designed to operate in many different environments, "
"there are a large number of configuration parameters. Fortunately, most have "
"sensible default values and Hibernate is distributed with an example "
"<literal>hibernate.properties</literal> file in <literal>etc/</literal> that "
"shows the various options. Just put the example file in your classpath and "
"customize it."
msgstr ""
"Hibernateはさまざまな環境で動作するようにデザインされているため、非常に多くの"
"設定要素があります。 幸いなことに、Hibernateは、公開されているパッケージの "
"<literal>etc/</literal> フォルダの <literal>hibernate.properties</literal> "
"に、ほとんどの設定要素の適切なデフォルト値が記述されています。 この "
"<literal>hibernate.properties</literal> をクラスパスに設定し、設定要素をカス"
"タマイズするだけです。"

#. Tag: title
#: configuration.xml:16
#, no-c-format
msgid "Programmatic configuration"
msgstr "プログラム上の設定"

#. Tag: para
#: configuration.xml:18
#, no-c-format
msgid ""
"An instance of <literal>org.hibernate.cfg.Configuration</literal> represents "
"an entire set of mappings of an application's Java types to an SQL database. "
"The <literal>Configuration</literal> is used to build an (immutable) "
"<literal>SessionFactory</literal>. The mappings are compiled from various "
"XML mapping files."
msgstr ""
"<literal>org.hibernate.cfg.Configuration</literal> のインスタンスは、 Javaの"
"型とSQLデータベースのマッピング情報をすべて持っています。 The "
"<literal>Configuration</literal> は、（不変の） <literal>SessionFactory</"
"literal> を生成するときに使用します。 複数のXMLマッピングファイルを変換し、"
"マッピング情報にします。"

#. Tag: para
#: configuration.xml:26
#, no-c-format
msgid ""
"You may obtain a <literal>Configuration</literal> instance by instantiating "
"it directly and specifying XML mapping documents. If the mapping files are "
"in the classpath, use <literal>addResource()</literal>:"
msgstr ""
"通常、<literal>Configuration</literal> インスタンスは、特定のXMLマッピング"
"ファイル によって直接初期化されます。もし、マッピングファイルがクラスパスに設"
"定されている場合、 次のメソッドを使ってください。 <literal>addResource()</"
"literal> :"

#. Tag: programlisting
#: configuration.xml:32
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration()\n"
"    .addResource(\"Item.hbm.xml\")\n"
"    .addResource(\"Bid.hbm.xml\");]]>"
msgstr ""

#. Tag: para
#: configuration.xml:34
#, no-c-format
msgid ""
"An alternative (sometimes better) way is to specify the mapped class, and "
"let Hibernate find the mapping document for you:"
msgstr ""
"代替案(こちらのほうが良いときもあります)としてマッピングクラスを指定する方法"
"もあります。Hibernateに、マッピングファイルを 見つけさせてください："

#. Tag: programlisting
#: configuration.xml:39
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration()\n"
"    .addClass(org.hibernate.auction.Item.class)\n"
"    .addClass(org.hibernate.auction.Bid.class);]]>"
msgstr ""

#. Tag: para
#: configuration.xml:41
#, no-c-format
msgid ""
"Then Hibernate will look for mapping files named <literal>/org/hibernate/"
"auction/Item.hbm.xml</literal> and <literal>/org/hibernate/auction/Bid.hbm."
"xml</literal> in the classpath. This approach eliminates any hardcoded "
"filenames."
msgstr ""
"Hibernateは、クラスパスにある以下のような名前のマッピングファイルを見つけま"
"す。 <literal>/org/hibernate/auction/Item.hbm.xml</literal> 、 <literal>/org/"
"hibernate/auction/Bid.hbm.xml</literal> 。 この方法だと、ハードコーディングさ"
"れたファイル名を排除できます。"

#. Tag: para
#: configuration.xml:48
#, no-c-format
msgid ""
"A <literal>Configuration</literal> also allows you to specify configuration "
"properties:"
msgstr ""
"<literal>Configuration</literal> は、設定プロパティを指定することもできます："

#. Tag: programlisting
#: configuration.xml:53
#, no-c-format
msgid ""
"<![CDATA[Configuration cfg = new Configuration()\n"
"    .addClass(org.hibernate.auction.Item.class)\n"
"    .addClass(org.hibernate.auction.Bid.class)\n"
"    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect."
"MySQLInnoDBDialect\")\n"
"    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/jdbc/"
"test\")\n"
"    .setProperty(\"hibernate.order_updates\", \"true\");]]>"
msgstr ""

#. Tag: para
#: configuration.xml:55
#, no-c-format
msgid ""
"This is not the only way to pass configuration properties to Hibernate. The "
"various options include:"
msgstr ""
"Hibernateに設定プロパティを通す方法は1つではありません。 さまざまなオプション"
"を用意しています："

#. Tag: para
#: configuration.xml:62
#, no-c-format
msgid ""
"Pass an instance of <literal>java.util.Properties</literal> to "
"<literal>Configuration.setProperties()</literal>."
msgstr ""
"<literal>java.util.Properties</literal> インスタンスを "
"<literal>Configuration.setProperties()</literal> に渡します。"

#. Tag: para
#: configuration.xml:68
#, no-c-format
msgid ""
"Place <literal>hibernate.properties</literal> in a root directory of the "
"classpath."
msgstr ""
"<literal>hibernate.properties</literal> を クラスパスのルートディレクトリに置"
"きます。"

#. Tag: para
#: configuration.xml:74
#, no-c-format
msgid ""
"Set <literal>System</literal> properties using <literal>java -"
"Dproperty=value</literal>."
msgstr ""
"<literal>System</literal> プロパティが <literal>java -Dproperty=value</"
"literal> を使うように設定します。"

#. Tag: para
#: configuration.xml:80
#, no-c-format
msgid ""
"Include <literal>&lt;property&gt;</literal> elements in <literal>hibernate."
"cfg.xml</literal> (discussed later)."
msgstr ""
"<literal>&lt;property&gt;</literal> 要素を <literal>hibernate.cfg.xml</"
"literal> （後述）に設定します。"

#. Tag: para
#: configuration.xml:87
#, no-c-format
msgid ""
"<literal>hibernate.properties</literal> is the easiest approach if you want "
"to get started quickly."
msgstr ""
"今すぐ始めたいのなら、<literal>hibernate.properties</literal> を使うのが一番"
"の近道です。"

#. Tag: para
#: configuration.xml:92
#, no-c-format
msgid ""
"The <literal>Configuration</literal> is intended as a startup-time object, "
"to be discarded once a <literal>SessionFactory</literal> is created."
msgstr ""
"<literal>Configuration</literal> は、起動時にだけあるオブジェクトであり、 一"
"度 <literal>SessionFactory</literal> を生成した後は、破棄されることを意図して"
"います。"

#. Tag: title
#: configuration.xml:100
#, no-c-format
msgid "Obtaining a SessionFactory"
msgstr "SessionFactoryを取得する"

#. Tag: para
#: configuration.xml:102
#, no-c-format
msgid ""
"When all mappings have been parsed by the <literal>Configuration</literal>, "
"the application must obtain a factory for <literal>Session</literal> "
"instances. This factory is intended to be shared by all application threads:"
msgstr ""
"<literal>Configuration</literal> がすべてのマッピング情報を解析したら、 アプ"
"リケーションは、 <literal>Session</literal> ファクトリインスタンスを取得しま"
"す。 このSessionFactoryは、Hibernateを使用するすべてのスレッドで共有されるべ"
"きです。"

#. Tag: programlisting
#: configuration.xml:108
#, no-c-format
msgid "<![CDATA[SessionFactory sessions = cfg.buildSessionFactory();]]>"
msgstr ""

#. Tag: para
#: configuration.xml:110
#, no-c-format
msgid ""
"Hibernate does allow your application to instantiate more than one "
"<literal>SessionFactory</literal>. This is useful if you are using more than "
"one database."
msgstr ""
"Hibernateは、 <literal>SessionFactory</literal> を複数生成することができま"
"す。 これは、複数のデータベースを使用する場合に便利です。"

#. Tag: title
#: configuration.xml:119
#, no-c-format
msgid "JDBC connections"
msgstr "JDBCコネクション"

#. Tag: para
#: configuration.xml:121
#, no-c-format
msgid ""
"Usually, you want to have the <literal>SessionFactory</literal> create and "
"pool JDBC connections for you. If you take this approach, opening a "
"<literal>Session</literal> is as simple as:"
msgstr ""
"通常、開発者は <literal>SessionFactory</literal> を生成し、SessionFactoryで"
"JDBCコネクションをプーリングしたいと考えます。 そのアプローチを採用する場合、"
"単純に <literal>Session</literal> をオープンしてください："

#. Tag: programlisting
#: configuration.xml:127
#, no-c-format
msgid ""
"<![CDATA[Session session = sessions.openSession(); // open a new Session]]>"
msgstr ""

#. Tag: para
#: configuration.xml:129
#, no-c-format
msgid ""
"As soon as you do something that requires access to the database, a JDBC "
"connection will be obtained from the pool."
msgstr ""
"これだけで、プーリングしたJDBCコネクションを使って目的のデータベース にアクセ"
"スすることができます。"

#. Tag: para
#: configuration.xml:134
#, no-c-format
msgid ""
"For this to work, we need to pass some JDBC connection properties to "
"Hibernate. All Hibernate property names and semantics are defined on the "
"class <literal>org.hibernate.cfg.Environment</literal>. We will now describe "
"the most important settings for JDBC connection configuration."
msgstr ""
"そのためには、JDBCコネクションのプロパティをHibernateに設定する必要がありま"
"す。 すべてのHibernateプロパティ名とセマンティクスは <literal>org.hibernate."
"cfg.Environment</literal> クラスに定義されています。 この設定はJDBCコネクショ"
"ン設定の中で一番重要なものです。"

#. Tag: para
#: configuration.xml:141
#, no-c-format
msgid ""
"Hibernate will obtain (and pool) connections using <literal>java.sql."
"DriverManager</literal> if you set the following properties:"
msgstr ""
"もし、以下のプロパティを設定すると、Hibernateはコネクションを取得する（プール"
"も）ために <literal>java.sql.DriverManager</literal> を使います。"

#. Tag: title
#: configuration.xml:147
#, no-c-format
msgid "Hibernate JDBC Properties"
msgstr "Hibernate JDBCプロパティ"

#. Tag: entry
#: configuration.xml:153 configuration.xml:241 configuration.xml:338
#: configuration.xml:529 configuration.xml:725 configuration.xml:832
#: configuration.xml:920
#, no-c-format
msgid "Property name"
msgstr "プロパティ名"

#. Tag: entry
#: configuration.xml:154 configuration.xml:242 configuration.xml:339
#: configuration.xml:530 configuration.xml:726 configuration.xml:833
#: configuration.xml:921
#, no-c-format
msgid "Purpose"
msgstr "意味"

#. Tag: literal
#: configuration.xml:160
#, no-c-format
msgid "hibernate.connection.driver_class"
msgstr "hibernate.connection.driver_class"

#. Tag: emphasis
#: configuration.xml:163
#, no-c-format
msgid "JDBC driver class"
msgstr "JDBCドライバクラス"

#. Tag: literal
#: configuration.xml:168
#, no-c-format
msgid "hibernate.connection.url"
msgstr "hibernate.connection.url"

#. Tag: emphasis
#: configuration.xml:171
#, no-c-format
msgid "JDBC URL"
msgstr "jdbc URL"

#. Tag: literal
#: configuration.xml:176 configuration.xml:272
#, no-c-format
msgid "hibernate.connection.username"
msgstr "hibernate.connection.username"

#. Tag: emphasis
#: configuration.xml:179
#, no-c-format
msgid "database user"
msgstr "database user"

#. Tag: literal
#: configuration.xml:184 configuration.xml:280
#, no-c-format
msgid "hibernate.connection.password"
msgstr "hibernate.connection.password"

#. Tag: emphasis
#: configuration.xml:187
#, no-c-format
msgid "database user password"
msgstr "database user password"

#. Tag: literal
#: configuration.xml:192
#, no-c-format
msgid "hibernate.connection.pool_size"
msgstr "hibernate.connection.pool_size"

#. Tag: emphasis
#: configuration.xml:195
#, no-c-format
msgid "maximum number of pooled connections"
msgstr "プールするコネクションの最大数"

#. Tag: para
#: configuration.xml:202
#, no-c-format
msgid ""
"Hibernate's own connection pooling algorithm is however quite rudimentary. "
"It is intended to help you get started and is <emphasis>not intended for use "
"in a production system</emphasis> or even for performance testing. You "
"should use a third party pool for best performance and stability. Just "
"replace the <literal>hibernate.connection.pool_size</literal> property with "
"connection pool specific settings. This will turn off Hibernate's internal "
"pool. For example, you might like to use C3P0."
msgstr ""
"Hibernateのコネクションプールアルゴリズムは非常に初歩的なものです。 これはす"
"ぐに始められるようにと用意されたもので、<emphasis>製品として使用することを意"
"図していません</emphasis> 。 また、パフォーマンスのテストのためのものでもあり"
"ません。 最高のパフォーマンスと安定性を持ったプールを実現したければ、サード"
"パーティのツールをお勧めします。 <literal>hibernate.connection.pool_size</"
"literal> プロパティに 適切なコネクションプールサイズを記述してください。 この"
"ままだとHibernateのコネクションプールを使います。 例えば次のようにC3P0を使い"
"ます。"

#. Tag: para
#: configuration.xml:212
#, no-c-format
msgid ""
"C3P0 is an open source JDBC connection pool distributed along with Hibernate "
"in the <literal>lib</literal> directory. Hibernate will use its "
"<literal>C3P0ConnectionProvider</literal> for connection pooling if you set "
"<literal>hibernate.c3p0.*</literal> properties. If you'd like to use Proxool "
"refer to the packaged <literal>hibernate.properties</literal> and the "
"Hibernate web site for more information."
msgstr ""
"C3P0はオープンソースJDBCコネクションプールで、Hibernateの <literal>lib</"
"literal> ディレクトリにあります。もし、<literal>hibernate.c3p0.*</literal> プ"
"ロパティを セットすれば、Hibernateは、 <literal>C3P0ConnectionProvider</"
"literal> を使います。 もしProxoolを使いたい場合は、 <literal>hibernate."
"properties</literal> パッケージを 参照したり、HibernateのWebサイトでより多く"
"の情報を取得してください。"

#. Tag: para
#: configuration.xml:221
#, no-c-format
msgid ""
"Here is an example <literal>hibernate.properties</literal> file for C3P0:"
msgstr ""
"C3P0用の <literal>hibernate.properties</literal> ファイルを例として示します："

#. Tag: programlisting
#: configuration.xml:225
#, no-c-format
msgid ""
"<![CDATA[hibernate.connection.driver_class = org.postgresql.Driver\n"
"hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
"hibernate.connection.username = myuser\n"
"hibernate.connection.password = secret\n"
"hibernate.c3p0.min_size=5\n"
"hibernate.c3p0.max_size=20\n"
"hibernate.c3p0.timeout=1800\n"
"hibernate.c3p0.max_statements=50\n"
"hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
msgstr ""

#. Tag: para
#: configuration.xml:227
#, no-c-format
msgid ""
"For use inside an application server, you should almost always configure "
"Hibernate to obtain connections from an application server "
"<literal>Datasource</literal> registered in JNDI. You'll need to set at "
"least one of the following properties:"
msgstr ""
"アプリケーションサーバ上で使う場合は、Hibernateを設定し、 アプリケーション"
"サーバからコネクションを取得するようにしてください。 <literal>Datasource</"
"literal> をJNDIに登録します。そして プロパティを以下のように設定してくださ"
"い。"

#. Tag: title
#: configuration.xml:235
#, no-c-format
msgid "Hibernate Datasource Properties"
msgstr "Hibernate データソースプロパティ"

#. Tag: literal
#: configuration.xml:248
#, no-c-format
msgid "hibernate.connection.datasource"
msgstr "hibernate.connection.datasource"

#. Tag: emphasis
#: configuration.xml:251
#, no-c-format
msgid "datasource JNDI name"
msgstr "データソースのJNDI名"

#. Tag: literal
#: configuration.xml:256
#, no-c-format
msgid "hibernate.jndi.url"
msgstr "hibernate.jndi.url"

#. Tag: entry
#: configuration.xml:258
#, fuzzy, no-c-format
msgid "<emphasis>URL of the JNDI provider</emphasis> (optional)"
msgstr "JNDIプロバイダのURL"

#. Tag: literal
#: configuration.xml:264
#, no-c-format
msgid "hibernate.jndi.class"
msgstr "hibernate.jndi.class"

#. Tag: entry
#: configuration.xml:266
#, no-c-format
msgid ""
"<emphasis>class of the JNDI <literal>InitialContextFactory</literal></"
"emphasis> (optional)"
msgstr ""

#. Tag: entry
#: configuration.xml:274
#, no-c-format
msgid "<emphasis>database user</emphasis> (optional)"
msgstr ""

#. Tag: entry
#: configuration.xml:282
#, no-c-format
msgid "<emphasis>database user password</emphasis> (optional)"
msgstr ""

#. Tag: para
#: configuration.xml:290
#, no-c-format
msgid ""
"Here's an example <literal>hibernate.properties</literal> file for an "
"application server provided JNDI datasource:"
msgstr ""
"アプリケーションサーバから提供されたJNDIデータソースを使う "
"<literal>hibernate.properties</literal> ファイルの例を示します："

#. Tag: programlisting
#: configuration.xml:295
#, no-c-format
msgid ""
"<![CDATA[hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
"hibernate.transaction.factory_class = \\\n"
"    org.hibernate.transaction.JTATransactionFactory\n"
"hibernate.transaction.manager_lookup_class = \\\n"
"    org.hibernate.transaction.JBossTransactionManagerLookup\n"
"hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
msgstr ""

#. Tag: para
#: configuration.xml:297
#, no-c-format
msgid ""
"JDBC connections obtained from a JNDI datasource will automatically "
"participate in the container-managed transactions of the application server."
msgstr ""
"JNDIデータソースから取得したJDBCコネクションは、アプリケーションサーバの コン"
"テナ管理トランザクションに自動的に参加します。"

#. Tag: para
#: configuration.xml:302
#, no-c-format
msgid ""
"Arbitrary connection properties may be given by prepending "
"\"<literal>hibernate.connection</literal>\" to the property name. For "
"example, you may specify a <literal>charSet</literal> using "
"<literal>hibernate.connection.charSet</literal>."
msgstr ""
"任意のコネクションプロパティは、与えられた” <literal>hibernate.connnection</"
"literal> ” プロパティ名によって与えられます。例えば、 <literal>charSet</"
"literal> を設定したい場合は、 <literal>hibernate.connection.charSet</"
"literal> を使います。"

#. Tag: para
#: configuration.xml:308
#, no-c-format
msgid ""
"You may define your own plugin strategy for obtaining JDBC connections by "
"implementing the interface <literal>org.hibernate.connection."
"ConnectionProvider</literal>. You may select a custom implementation by "
"setting <literal>hibernate.connection.provider_class</literal>."
msgstr ""
"JDBCコネクションを取得する戦略を持つ独自のプラグインを定義する場合は、 "
"<literal>org.hibernate.connection.ConnectionProvider</literal> インターフェイ"
"スを 実装してください。そして、実装クラスを <literal>hibernate.connection."
"provider_class</literal> に設定してください。"

#. Tag: title
#: configuration.xml:317
#, no-c-format
msgid "Optional configuration properties"
msgstr "オプション設定プロパティ"

#. Tag: para
#: configuration.xml:319
#, no-c-format
msgid ""
"There are a number of other properties that control the behaviour of "
"Hibernate at runtime. All are optional and have reasonable default values."
msgstr ""
"これらのプロパティはHibernateの挙動を制御するものです。 これらのプロパティは"
"すべて妥当なデフォルト値があり、任意で設定します。"

#. Tag: para
#: configuration.xml:324
#, no-c-format
msgid ""
"<emphasis>Warning: some of these properties are \"system-level\" only.</"
"emphasis> System-level properties can be set only via <literal>java -"
"Dproperty=value</literal> or <literal>hibernate.properties</literal>. They "
"may <emphasis>not</emphasis> be set by the other techniques described above."
msgstr ""
"<emphasis>注意：これらのプロパティは\"システムレベル\"のみです。</emphasis> "
"システムレベルプロパティは <literal>java -Dproperty=value</literal> 、もしく"
"は <literal>hibernate.properties</literal> でのみ設定可能です。 それ以外の設"
"定方法は <emphasis>ありません</emphasis> 。"

#. Tag: title
#: configuration.xml:332
#, no-c-format
msgid "Hibernate Configuration Properties"
msgstr "Hibernate設定プロパティ"

#. Tag: literal
#: configuration.xml:345
#, no-c-format
msgid "hibernate.dialect"
msgstr "hibernate.dialect"

#. Tag: entry
#: configuration.xml:347
#, fuzzy, no-c-format
msgid ""
"The classname of a Hibernate <literal>Dialect</literal> which allows "
"Hibernate to generate SQL optimized for a particular relational database."
msgstr ""
"Hibernate <placeholder-1/> クラス名が入ります。 これはリレーショナルデータ"
"ベースごとに最適化されたSQLを生成します。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:351
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>full.classname.of.Dialect</"
"literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:359
#, no-c-format
msgid "hibernate.show_sql"
msgstr "hibernate.show_sql"

#. Tag: entry
#: configuration.xml:361
#, fuzzy, no-c-format
msgid ""
"Write all SQL statements to console. This is an alternative to setting the "
"log category <literal>org.hibernate.SQL</literal> to <literal>debug</"
"literal>."
msgstr ""
"発行されたすべてのSQLをコンソールに出力します。 これはログカテゴリの "
"<placeholder-1/> に <placeholder-2/> を設定する方法の代替手段です。 "
"<placeholder-3/>"

#. Tag: para
#: configuration.xml:365 configuration.xml:377 configuration.xml:471
#: configuration.xml:484 configuration.xml:497 configuration.xml:510
#: configuration.xml:564 configuration.xml:591 configuration.xml:605
#: configuration.xml:660 configuration.xml:888 configuration.xml:903
#: configuration.xml:993
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>true</literal> | "
"<literal>false</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:373
#, no-c-format
msgid "hibernate.format_sql"
msgstr "hibernate.format_sql"

#. Tag: entry
#: configuration.xml:375
#, fuzzy, no-c-format
msgid "Pretty print the SQL in the log and console."
msgstr "ログとコンソールのSQLを美しく表示します。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:385
#, no-c-format
msgid "hibernate.default_schema"
msgstr "hibernate.default_schema"

#. Tag: entry
#: configuration.xml:387
#, fuzzy, no-c-format
msgid ""
"Qualify unqualified table names with the given schema/tablespace in "
"generated SQL."
msgstr ""
"生成されるSQL文のテーブルに設定するスキーマ/テーブルスペースです。 "
"<placeholder-1/>"

#. Tag: para
#: configuration.xml:390
#, fuzzy, no-c-format
msgid "<emphasis role=\"strong\">eg.</emphasis> <literal>SCHEMA_NAME</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:398
#, no-c-format
msgid "hibernate.default_catalog"
msgstr "hibernate.default_catalog"

#. Tag: entry
#: configuration.xml:400
#, fuzzy, no-c-format
msgid ""
"Qualify unqualified table names with the given catalog in generated SQL."
msgstr "生成されるSQL文のテーブルに設定するカタログです。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:403
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>CATALOG_NAME</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:411
#, no-c-format
msgid "hibernate.session_factory_name"
msgstr "hibernate.session_factory_name"

#. Tag: entry
#: configuration.xml:413
#, fuzzy, no-c-format
msgid ""
"The <literal>SessionFactory</literal> will be automatically bound to this "
"name in JNDI after it has been created."
msgstr ""
"<placeholder-1/> は生成後、この名前でJNDIに登録されます。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:416 configuration.xml:859
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>jndi/composite/name</"
"literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:424
#, no-c-format
msgid "hibernate.max_fetch_depth"
msgstr "hibernate.max_fetch_depth"

#. Tag: entry
#: configuration.xml:426
#, fuzzy, no-c-format
msgid ""
"Set a maximum \"depth\" for the outer join fetch tree for single-ended "
"associations (one-to-one, many-to-one). A <literal>0</literal> disables "
"default outer join fetching."
msgstr ""
"外部結合フェッチの最大深度を設定します。結合する関連は 対一関連のみ（一対一、"
"多対一）です。 <placeholder-1/> を指定すると外部結合フェッチは無効になりま"
"す。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:430
#, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> recommended values between "
"<literal>0</literal> and <literal>3</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>0</literal> "
"から <literal>3</literal> です。"

#. Tag: literal
#: configuration.xml:439
#, no-c-format
msgid "hibernate.default_batch_fetch_size"
msgstr "hibernate.default_batch_fetch_size"

#. Tag: entry
#: configuration.xml:441
#, fuzzy, no-c-format
msgid "Set a default size for Hibernate batch fetching of associations."
msgstr "関連フェッチのデフォルトバッチサイズを指定します。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:443
#, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> recommended values <literal>4</"
"literal>, <literal>8</literal>, <literal>16</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>4</"
"literal> , <literal>8</literal> , <literal>16</literal> です。"

#. Tag: literal
#: configuration.xml:452
#, no-c-format
msgid "hibernate.default_entity_mode"
msgstr "hibernate.default_entity_mode"

#. Tag: entry
#: configuration.xml:454
#, fuzzy, no-c-format
msgid ""
"Set a default mode for entity representation for all sessions opened from "
"this <literal>SessionFactory</literal>"
msgstr ""
"<placeholder-1/> からセッションをオープンしたときに 使用するエンティティのデ"
"フォルトモードを設定します。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:457
#, no-c-format
msgid ""
"<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</"
"literal>"
msgstr ""
"<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</"
"literal>"

#. Tag: literal
#: configuration.xml:465
#, no-c-format
msgid "hibernate.order_updates"
msgstr "hibernate.order_updates"

#. Tag: entry
#: configuration.xml:467
#, fuzzy, no-c-format
msgid ""
"Force Hibernate to order SQL updates by the primary key value of the items "
"being updated. This will result in fewer transaction deadlocks in highly "
"concurrent systems."
msgstr ""
"項目が更新されたときに、別のSQLで主キーを更新することを強制します。 この場"
"合、同時実行可能なシステムでは、まれにデッドロックが発生する可能性がありま"
"す。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:479
#, no-c-format
msgid "hibernate.generate_statistics"
msgstr "hibernate.generate_statistics"

#. Tag: entry
#: configuration.xml:481
#, fuzzy, no-c-format
msgid ""
"If enabled, Hibernate will collect statistics useful for performance tuning."
msgstr ""
"有効の場合、Hibernateはパフォーマンスチューニングに 有効な統計情報を収集しま"
"す。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:492
#, no-c-format
msgid "hibernate.use_identifier_rollback"
msgstr "hibernate.use_identifer_rollback"

#. Tag: entry
#: configuration.xml:494
#, fuzzy, no-c-format
msgid ""
"If enabled, generated identifier properties will be reset to default values "
"when objects are deleted."
msgstr ""
"有効の場合、オブジェクトが削除されたときに 識別子プロパティをリセットし、デ"
"フォルト値にしたものを生成します。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:505
#, no-c-format
msgid "hibernate.use_sql_comments"
msgstr "hibernate.use_sql_comments"

#. Tag: entry
#: configuration.xml:507
#, fuzzy, no-c-format
msgid ""
"If turned on, Hibernate will generate comments inside the SQL, for easier "
"debugging, defaults to <literal>false</literal>."
msgstr ""
"有効の場合、SQL内にコメントを生成します。これはデバックを容易にします。 デ"
"フォルトの値は <placeholder-1/> です。 <placeholder-2/>"

#. Tag: title
#: configuration.xml:521
#, no-c-format
msgid "Hibernate JDBC and Connection Properties"
msgstr "Hibernate JDBC とコネクションプロパティ"

#. Tag: literal
#: configuration.xml:536
#, no-c-format
msgid "hibernate.jdbc.fetch_size"
msgstr "hibernate.jdbc.fetch_size"

#. Tag: entry
#: configuration.xml:538
#, fuzzy, no-c-format
msgid ""
"A non-zero value determines the JDBC fetch size (calls <literal>Statement."
"setFetchSize()</literal>)."
msgstr ""
"値が0でない場合、JDBCフェッチサイズを決定します ( <placeholder-1/> を呼びま"
"す)。"

#. Tag: literal
#: configuration.xml:545
#, no-c-format
msgid "hibernate.jdbc.batch_size"
msgstr "hibernate.jdbc.batch_size"

#. Tag: entry
#: configuration.xml:547
#, fuzzy, no-c-format
msgid "A non-zero value enables use of JDBC2 batch updates by Hibernate."
msgstr ""
"値が0でない場合、HibernateがJDBC2バッチ更新を使用します。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:549
#, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> recommended values between "
"<literal>5</literal> and <literal>30</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>5</literal> "
"から <literal>30</literal> です。"

#. Tag: literal
#: configuration.xml:557
#, no-c-format
msgid "hibernate.jdbc.batch_versioned_data"
msgstr "hibernate.jdbc.batch_versioned_data"

#. Tag: entry
#: configuration.xml:559
#, fuzzy, no-c-format
msgid ""
"Set this property to <literal>true</literal> if your JDBC driver returns "
"correct row counts from <literal>executeBatch()</literal> (it is usually "
"safe to turn this option on). Hibernate will then use batched DML for "
"automatically versioned data. Defaults to <literal>false</literal>."
msgstr ""
"もしJDBCドライバが <placeholder-1/> によって正確な行数を 返す場合、このプロパ"
"ティを <placeholder-2/> にしてください （通常はこのオプションをONにしま"
"す）。 Hibernateは、自動バージョンデータのためバッチDMLを使います。 デフォル"
"トの値は <placeholder-3/> です。 <placeholder-4/>"

#. Tag: literal
#: configuration.xml:572
#, no-c-format
msgid "hibernate.jdbc.factory_class"
msgstr "hibernate.jdbc.factory_class"

#. Tag: entry
#: configuration.xml:574
#, fuzzy, no-c-format
msgid ""
"Select a custom <literal>Batcher</literal>. Most applications will not need "
"this configuration property."
msgstr ""
"カスタム <placeholder-1/> を選びます。 ほとんどのアプリケーションに、この設定"
"は必要ありません。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:577
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of."
"BatcherFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:585
#, no-c-format
msgid "hibernate.jdbc.use_scrollable_resultset"
msgstr "hibernate.jdbc.use_scrollable_resultset"

#. Tag: entry
#: configuration.xml:587
#, fuzzy, no-c-format
msgid ""
"Enables use of JDBC2 scrollable resultsets by Hibernate. This property is "
"only necessary when using user supplied JDBC connections, Hibernate uses "
"connection metadata otherwise."
msgstr ""
"スクロール可能なリザルトセットを、Hibernateが使用します。 このプロパティは、"
"JDBCコネクションがコネクションメタデータを サポートしていることが必須条件にな"
"ります。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:599
#, no-c-format
msgid "hibernate.jdbc.use_streams_for_binary"
msgstr "hibernate.jdbc.use_streams_for_binary"

#. Tag: entry
#: configuration.xml:601
#, fuzzy, no-c-format
msgid ""
"Use streams when writing/reading <literal>binary</literal> or "
"<literal>serializable</literal> types to/from JDBC (system-level property)."
msgstr ""
"JDBCへ/から <placeholder-1/> や <placeholder-2/> の書き込み/読み込みストリー"
"ムを使います(システムレベルのプロパティ)。 <placeholder-3/>"

#. Tag: literal
#: configuration.xml:613
#, no-c-format
msgid "hibernate.jdbc.use_get_generated_keys"
msgstr "hibernate.jdbc.use_get_generated_keys"

#. Tag: entry
#: configuration.xml:615
#, fuzzy, no-c-format
msgid ""
"Enable use of JDBC3 <literal>PreparedStatement.getGeneratedKeys()</literal> "
"to retrieve natively generated keys after insert. Requires JDBC3+ driver and "
"JRE1.4+, set to false if your driver has problems with the Hibernate "
"identifier generators. By default, tries to determine the driver "
"capabilities using connection metadata."
msgstr ""
"挿入の後に自動生成された主キーを取得するための JDBC3 <placeholder-1/> の使用"
"を有効にします。 これはJDBC3+ドライバとJRE1.4+を必要とし、 もしHibernateの識"
"別子ジェネレータに問題が発生するようならfalseに設定してください。 デフォルト"
"ではコネクションメタデータを使いドライバの能力を決定します。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:621 configuration.xml:751 configuration.xml:763
#: configuration.xml:777 configuration.xml:815
#, fuzzy, no-c-format
msgid "<emphasis role=\"strong\">eg.</emphasis> <literal>true|false</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:629
#, no-c-format
msgid "hibernate.connection.provider_class"
msgstr "hibernate.connection.provider_class"

#. Tag: entry
#: configuration.xml:631
#, fuzzy, no-c-format
msgid ""
"The classname of a custom <literal>ConnectionProvider</literal> which "
"provides JDBC connections to Hibernate."
msgstr ""
"JDBCコネクションをHibernateに提供する独自の <placeholder-1/> の 名前を指定し"
"ます。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:634
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of."
"ConnectionProvider</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:642
#, no-c-format
msgid "hibernate.connection.isolation"
msgstr "hibernate.connection.isolation"

#. Tag: entry
#: configuration.xml:644
#, fuzzy, no-c-format
msgid ""
"Set the JDBC transaction isolation level. Check <literal>java.sql."
"Connection</literal> for meaningful values but note that most databases do "
"not support all isolation levels."
msgstr ""
"JDBCトランザクション分離レベルを設定します。 妥当な値を調べるためには "
"<placeholder-1/> をチェックしてください。 しかし使用するデータベースが、すべ"
"ての分離レベルをサポートしているとは限りません。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:648
#, fuzzy, no-c-format
msgid "<emphasis role=\"strong\">eg.</emphasis> <literal>1, 2, 4, 8</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:656
#, no-c-format
msgid "hibernate.connection.autocommit"
msgstr "hibernate.connection.autocommit"

#. Tag: entry
#: configuration.xml:658
#, fuzzy, no-c-format
msgid "Enables autocommit for JDBC pooled connections (not recommended)."
msgstr ""
"プールされているJDBCコネクションの自動コミットを有効にする（非推奨）。 "
"<placeholder-1/>"

#. Tag: literal
#: configuration.xml:668
#, no-c-format
msgid "hibernate.connection.release_mode"
msgstr "hibernate.connection.release_mode"

#. Tag: entry
#: configuration.xml:670
#, fuzzy, no-c-format
msgid ""
"Specify when Hibernate should release JDBC connections. By default, a JDBC "
"connection is held until the session is explicitly closed or disconnected. "
"For an application server JTA datasource, you should use "
"<literal>after_statement</literal> to aggressively release connections after "
"every JDBC call. For a non-JTA connection, it often makes sense to release "
"the connection at the end of each transaction, by using "
"<literal>after_transaction</literal>. <literal>auto</literal> will choose "
"<literal>after_statement</literal> for the JTA and CMT transaction "
"strategies and <literal>after_transaction</literal> for the JDBC transaction "
"strategy."
msgstr ""
"HibernateがJDBCコネクションをリリースするかを指定します。デフォルトでは セッ"
"ションが明示的にクローズまたは切断されてもコネクションは保持します。 アプリ"
"ケーションサーバのJTAデータソースの場合、 すべてのJDBCコールの後、強制的にコ"
"ネクションをリリースするために <placeholder-1/> を 使ってください。 非JTAコネ"
"クションの場合、各トランザクションが終了したときに <placeholder-2/> を使い、"
"コネクションをリリースしてください。 <placeholder-3/> にすると、 JTAやCMTトラ"
"ンザクションの場合、 <placeholder-4/> でクローズし、 JDBCトランザクションの場"
"合、 <placeholder-5/> でクローズします。 <placeholder-6/><placeholder-7/>"

#. Tag: para
#: configuration.xml:681
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>auto</literal> (default) | "
"<literal>on_close</literal> | <literal>after_transaction</literal> | "
"<literal>after_statement</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>auto</literal> (default) | "
"<literal>on_close</literal> | <literal>after_transaction</literal> | "
"<literal>after_statement</literal>"

#. Tag: para
#: configuration.xml:686
#, fuzzy, no-c-format
msgid ""
"Note that this setting only affects <literal>Session</literal>s returned "
"from <literal>SessionFactory.openSession</literal>. For <literal>Session</"
"literal>s obtained through <literal>SessionFactory.getCurrentSession</"
"literal>, the <literal>CurrentSessionContext</literal> implementation "
"configured for use controls the connection release mode for those "
"<literal>Session</literal>s. See"
msgstr ""
"注意してください。この設定は <literal>SessionFactory.openSession</literal> か"
"ら 取得した <literal>Session</literal> だけに効果があります。 "
"<literal>SessionFactory.getCurrentSession</literal> を通じて取得した "
"<literal>Session</literal> では、<literal>CurrentSessionContext</literal> の"
"実装によって、コネクションのリリースモードを設定します。 <xref linkend="
"\"architecture-current-session\"/> を参照してください。"

#. Tag: entry
#: configuration.xml:697
#, no-c-format
msgid ""
"<literal>hibernate.connection.</literal><emphasis>&lt;propertyName&gt;</"
"emphasis>"
msgstr ""

#. Tag: entry
#: configuration.xml:700
#, no-c-format
msgid ""
"Pass the JDBC property <emphasis>&lt;propertyName&gt;</emphasis> to "
"<literal>DriverManager.getConnection()</literal>."
msgstr ""

#. Tag: entry
#: configuration.xml:706
#, no-c-format
msgid ""
"<literal>hibernate.jndi.</literal><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr ""

#. Tag: entry
#: configuration.xml:709
#, no-c-format
msgid ""
"Pass the property <emphasis>&lt;propertyName&gt;</emphasis> to the JNDI "
"<literal>InitialContextFactory</literal>."
msgstr ""

#. Tag: title
#: configuration.xml:719
#, no-c-format
msgid "Hibernate Cache Properties"
msgstr "Hibernate キャッシュプロパティ"

#. Tag: literal
#: configuration.xml:732
#, no-c-format
msgid "hibernate.cache.provider_class"
msgstr "hibernate.cache.provider_class"

#. Tag: entry
#: configuration.xml:734
#, fuzzy, no-c-format
msgid "The classname of a custom <literal>CacheProvider</literal>."
msgstr "カスタム <placeholder-1/> のクラス名です。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:736
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of."
"CacheProvider</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:744
#, no-c-format
msgid "hibernate.cache.use_minimal_puts"
msgstr "hibernate.cache.use_minimal_puts"

#. Tag: entry
#: configuration.xml:746
#, fuzzy, no-c-format
msgid ""
"Optimize second-level cache operation to minimize writes, at the cost of "
"more frequent reads. This setting is most useful for clustered caches and, "
"in Hibernate3, is enabled by default for clustered cache implementations."
msgstr ""
"書き込みを最小限にするために、二次キャッシュの操作を最適化します。 その代わり"
"に、読み込みがより頻繁に発生するようになります。 このセッティングはクラスタ"
"キャッシュで役に立ちます。 Hibernate3ではクラスタキャッシュ実装用にデフォルト"
"では有効になっています。 <placeholder-1/>"

#. Tag: literal
#: configuration.xml:759
#, no-c-format
msgid "hibernate.cache.use_query_cache"
msgstr "hibernate.cache.use_query_cache"

#. Tag: entry
#: configuration.xml:761
#, fuzzy, no-c-format
msgid ""
"Enable the query cache, individual queries still have to be set cachable."
msgstr ""
"特定のクエリがキャッシュ可能な場合に、クエリキャッシュを有効にします。 "
"<placeholder-1/>"

#. Tag: literal
#: configuration.xml:771
#, no-c-format
msgid "hibernate.cache.use_second_level_cache"
msgstr "hibernate.cache.use_second_level_cache"

#. Tag: entry
#: configuration.xml:773
#, fuzzy, no-c-format
msgid ""
"May be used to completely disable the second level cache, which is enabled "
"by default for classes which specify a <literal>&lt;cache&gt;</literal> "
"mapping."
msgstr ""
"二次キャッシュを完全に無効にする場合に使います。 デフォルトでは有効で、クラス"
"の <placeholder-1/> マッピング で制御します。 <placeholder-2/>"

#. Tag: literal
#: configuration.xml:785
#, no-c-format
msgid "hibernate.cache.query_cache_factory"
msgstr "hibernate.cache.query_cache_factory"

#. Tag: entry
#: configuration.xml:787
#, fuzzy, no-c-format
msgid ""
"The classname of a custom <literal>QueryCache</literal> interface, defaults "
"to the built-in <literal>StandardQueryCache</literal>."
msgstr ""
"カスタム <placeholder-1/> インターフェイスのクラス名を 指定します。デフォルト"
"では <placeholder-2/> になります。 <placeholder-3/>"

#. Tag: para
#: configuration.xml:790
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of.QueryCache</"
"literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:798
#, no-c-format
msgid "hibernate.cache.region_prefix"
msgstr "hibernate.cache.region_prefix"

#. Tag: entry
#: configuration.xml:800
#, fuzzy, no-c-format
msgid "A prefix to use for second-level cache region names."
msgstr "二次キャッシュの領域名の接頭辞です。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:802
#, fuzzy, no-c-format
msgid "<emphasis role=\"strong\">eg.</emphasis> <literal>prefix</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:810
#, no-c-format
msgid "hibernate.cache.use_structured_entries"
msgstr "hibernate.cache.use_structured_entries"

#. Tag: entry
#: configuration.xml:812
#, fuzzy, no-c-format
msgid ""
"Forces Hibernate to store data in the second-level cache in a more human-"
"friendly format."
msgstr ""
"二次キャッシュに格納するデータを、人が理解しやすいフォーマットにします。 "
"<placeholder-1/>"

#. Tag: title
#: configuration.xml:826
#, no-c-format
msgid "Hibernate Transaction Properties"
msgstr "Hibernate トランザクションプロパティ"

#. Tag: literal
#: configuration.xml:839
#, no-c-format
msgid "hibernate.transaction.factory_class"
msgstr "hibernate.transaction.factory_class"

#. Tag: entry
#: configuration.xml:841
#, fuzzy, no-c-format
msgid ""
"The classname of a <literal>TransactionFactory</literal> to use with "
"Hibernate <literal>Transaction</literal> API (defaults to "
"<literal>JDBCTransactionFactory</literal>)."
msgstr ""
"Hibernate <placeholder-1/> APIと一緒に使われる <placeholder-2/> のクラス名で"
"す。 （デフォルトでは <placeholder-3/> です）。 <placeholder-4/>"

#. Tag: para
#: configuration.xml:845
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of."
"TransactionFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:853
#, no-c-format
msgid "jta.UserTransaction"
msgstr "jta.UserTransaction"

#. Tag: entry
#: configuration.xml:855
#, fuzzy, no-c-format
msgid ""
"A JNDI name used by <literal>JTATransactionFactory</literal> to obtain the "
"JTA <literal>UserTransaction</literal> from the application server."
msgstr ""
"アプリケーションサーバからJTA <placeholder-1/> を取得するために <placeholder-"
"2/> に使われるJNDI名です。 <placeholder-3/>"

#. Tag: literal
#: configuration.xml:867
#, no-c-format
msgid "hibernate.transaction.manager_lookup_class"
msgstr "hibernate.transaction.manager_lookup_class"

#. Tag: entry
#: configuration.xml:869
#, fuzzy, no-c-format
msgid ""
"The classname of a <literal>TransactionManagerLookup</literal> - required "
"when JVM-level caching is enabled or when using hilo generator in a JTA "
"environment."
msgstr ""
"<placeholder-1/> のクラス名です。 JTA環境において、JVMレベルのキャッシュを有"
"効にするために必要です。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:873
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>classname.of."
"TransactionManagerLookup</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:881
#, no-c-format
msgid "hibernate.transaction.flush_before_completion"
msgstr "hibernate.transaction.flush_before_completion"

#. Tag: entry
#: configuration.xml:883
#, fuzzy, no-c-format
msgid ""
"If enabled, the session will be automatically flushed during the before "
"completion phase of the transaction. Built-in and automatic session context "
"management is preferred, see <xref linkend=\"architecture-current-session\"/"
">."
msgstr ""
"有効の場合、トランザクションのcompletionフェーズの前に自動的に セッションをフ"
"ラッシュします。内臓の自動セッションコンテキスト管理に適しています。 <xref "
"linkend=\"architecture-current-session\"/>を参照してください。 <placeholder-"
"1/>"

#. Tag: literal
#: configuration.xml:896
#, no-c-format
msgid "hibernate.transaction.auto_close_session"
msgstr "hibernate.transaction.auto_close_session"

#. Tag: entry
#: configuration.xml:898
#, fuzzy, no-c-format
msgid ""
"If enabled, the session will be automatically closed during the after "
"completion phase of the transaction. Built-in and utomatic session context "
"management is preferred, see <xref linkend=\"architecture-current-session\"/"
">."
msgstr ""
"有効の場合、トランザクションのcompletionフェーズの後に セッションを自動的にク"
"ローズします。内臓の自動セッションコンテキスト管理に適しています。 <xref "
"linkend=\"architecture-current-session\"/>を参照してください。 <placeholder-"
"1/>"

#. Tag: title
#: configuration.xml:914
#, no-c-format
msgid "Miscellaneous Properties"
msgstr "その他のプロパティ"

#. Tag: literal
#: configuration.xml:927
#, no-c-format
msgid "hibernate.current_session_context_class"
msgstr "hibernate.current_session_context_class"

#. Tag: entry
#: configuration.xml:929
#, fuzzy, no-c-format
msgid ""
"Supply a (custom) strategy for the scoping of the \"current\" "
"<literal>Session</literal>. See <xref linkend=\"architecture-current-session"
"\"/> for more information about the built-in strategies."
msgstr ""
"「現在の」<placeholder-1/> のための（カスタム）戦略を提供します。 ビルトイン"
"ストラテジーに関するその他の情報については <xref linkend=\"architecture-"
"current-session\"/>を参照してください。 <placeholder-2/>"

#. Tag: para
#: configuration.xml:934
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>jta</literal> | "
"<literal>thread</literal> | <literal>managed</literal> | <literal>custom."
"Class</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>jta</literal> | "
"<literal>thread</literal> | <literal>managed</literal> | <literal>custom."
"Class</literal>"

#. Tag: literal
#: configuration.xml:943
#, no-c-format
msgid "hibernate.query.factory_class"
msgstr "hibernate.query.factory_class"

#. Tag: entry
#: configuration.xml:945
#, fuzzy, no-c-format
msgid "Chooses the HQL parser implementation."
msgstr "HQLパーサーの実装を選択します。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:947
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>org.hibernate.hql.ast."
"ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic."
"ClassicQueryTranslatorFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>org.hibernate.hql.ast."
"ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic."
"ClassicQueryTranslatorFactory</literal>"

#. Tag: literal
#: configuration.xml:956
#, no-c-format
msgid "hibernate.query.substitutions"
msgstr "hibernate.query.substitutions"

#. Tag: entry
#: configuration.xml:958
#, fuzzy, no-c-format
msgid ""
"Mapping from tokens in Hibernate queries to SQL tokens (tokens might be "
"function or literal names, for example)."
msgstr ""
"HQLとSQLのトークンをマッピングします。 （例えば、トークンは関数やリテラル名で"
"す）。 <placeholder-1/>"

#. Tag: para
#: configuration.xml:961
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>hqlLiteral=SQL_LITERAL, "
"hqlFunction=SQLFUNC</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: literal
#: configuration.xml:969
#, no-c-format
msgid "hibernate.hbm2ddl.auto"
msgstr "hibernate.hbm2ddl.auto"

#. Tag: entry
#: configuration.xml:971
#, fuzzy, no-c-format
msgid ""
"Automatically validate or export schema DDL to the database when the "
"<literal>SessionFactory</literal> is created. With <literal>create-drop</"
"literal>, the database schema will be dropped when the "
"<literal>SessionFactory</literal> is closed explicitly."
msgstr ""
"<placeholder-1/> を生成したときに、 自動的にスキーマDDLをDBに出力します。 "
"<placeholder-2/> の場合、 <placeholder-3/> を クローズしたときに、データベー"
"ススキーマをドロップします。 <placeholder-4/>"

#. Tag: para
#: configuration.xml:977
#, fuzzy, no-c-format
msgid ""
"<emphasis role=\"strong\">eg.</emphasis> <literal>validate</literal> | "
"<literal>update</literal> | <literal>create</literal> | <literal>create-"
"drop</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis><literal>validate</literal> | "
"<literal>update</literal> | <literal>create</literal> | <literal>create-"
"drop</literal>"

#. Tag: literal
#: configuration.xml:986
#, no-c-format
msgid "hibernate.cglib.use_reflection_optimizer"
msgstr "hibernate.cglib.use_reflection_optimizer"

#. Tag: entry
#: configuration.xml:988
#, fuzzy, no-c-format
msgid ""
"Enables use of CGLIB instead of runtime reflection (System-level property). "
"Reflection can sometimes be useful when troubleshooting, note that Hibernate "
"always requires CGLIB even if you turn off the optimizer. You can not set "
"this property in <literal>hibernate.cfg.xml</literal>."
msgstr ""
"実行時リフレクションの代わりのCGLIBの使用を有効にします （システムレベルのプ"
"ロパティ） リフレクションはトラブルシューティングのときに役立つことがありま"
"す。 オプティマイザをオフにしているときでさえ、 Hibernateには必ずCGLIBが必要"
"なことに注意してください。 このプロパティは <placeholder-1/> で設定できませ"
"ん。 <placeholder-2/>"

#. Tag: title
#: configuration.xml:1004
#, no-c-format
msgid "SQL Dialects"
msgstr "SQL 方言（Dialect）"

#. Tag: para
#: configuration.xml:1006
#, no-c-format
msgid ""
"You should always set the <literal>hibernate.dialect</literal> property to "
"the correct <literal>org.hibernate.dialect.Dialect</literal> subclass for "
"your database. If you specify a dialect, Hibernate will use sensible "
"defaults for some of the other properties listed above, saving you the "
"effort of specifying them manually."
msgstr ""
"<literal>hibernate.dialect</literal> プロパティには、 使用するデータベースの"
"正しい <literal>org.hibernate.dialect.Dialect</literal> のサブクラスを、 必ず"
"指定すべきです。 しかし方言を指定すれば、Hibernateは上述したプロパティのいく"
"つかについて、 より適切なデフォルト値を使います。 そうすれば、それらを手作業"
"で設定する手間が省けます。"

#. Tag: title
#: configuration.xml:1014
#, no-c-format
msgid "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"
msgstr "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"

#. Tag: entry
#: configuration.xml:1022
#, no-c-format
msgid "RDBMS"
msgstr "RDBMS"

#. Tag: entry
#: configuration.xml:1023
#, no-c-format
msgid "Dialect"
msgstr "Dialect"

#. Tag: entry
#: configuration.xml:1028
#, no-c-format
msgid "<entry>DB2</entry>"
msgstr ""

#. Tag: literal
#: configuration.xml:1028
#, no-c-format
msgid "org.hibernate.dialect.DB2Dialect"
msgstr "org.hibernate.dialect.DB2Dialect"

#. Tag: entry
#: configuration.xml:1031
#, no-c-format
msgid "DB2 AS/400"
msgstr "DB2 AS/400"

#. Tag: literal
#: configuration.xml:1031
#, no-c-format
msgid "org.hibernate.dialect.DB2400Dialect"
msgstr "org.hibernate.dialect.DB2400Dialect"

#. Tag: entry
#: configuration.xml:1034
#, no-c-format
msgid "DB2 OS390"
msgstr "DB2 OS390"

#. Tag: literal
#: configuration.xml:1034
#, no-c-format
msgid "org.hibernate.dialect.DB2390Dialect"
msgstr "org.hibernate.dialect.DB2390Dialect"

#. Tag: entry
#: configuration.xml:1037
#, no-c-format
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. Tag: literal
#: configuration.xml:1037
#, no-c-format
msgid "org.hibernate.dialect.PostgreSQLDialect"
msgstr "org.hibernate.dialect.PostgreSQLDialect"

#. Tag: entry
#: configuration.xml:1040
#, no-c-format
msgid "MySQL"
msgstr "MySQL"

#. Tag: literal
#: configuration.xml:1040
#, no-c-format
msgid "org.hibernate.dialect.MySQLDialect"
msgstr "org.hibernate.dialect.MySQLDialect"

#. Tag: entry
#: configuration.xml:1043
#, no-c-format
msgid "MySQL with InnoDB"
msgstr "MySQL with InnoDB"

#. Tag: literal
#: configuration.xml:1043
#, no-c-format
msgid "org.hibernate.dialect.MySQLInnoDBDialect"
msgstr "org.hibernate.dialect.MySQLInnoDBDialect"

#. Tag: entry
#: configuration.xml:1046
#, no-c-format
msgid "MySQL with MyISAM"
msgstr "MySQL with MyISAM"

#. Tag: literal
#: configuration.xml:1046
#, no-c-format
msgid "org.hibernate.dialect.MySQLMyISAMDialect"
msgstr "org.hibernate.dialect.MySQLMyISAMDialect"

#. Tag: entry
#: configuration.xml:1049
#, no-c-format
msgid "Oracle (any version)"
msgstr "Oracle (any version)"

#. Tag: literal
#: configuration.xml:1049
#, no-c-format
msgid "org.hibernate.dialect.OracleDialect"
msgstr "org.hibernate.dialect.OracleDialect"

#. Tag: entry
#: configuration.xml:1052
#, no-c-format
msgid "Oracle 9i/10g"
msgstr "Oracle 9i/10g"

#. Tag: literal
#: configuration.xml:1052
#, no-c-format
msgid "org.hibernate.dialect.Oracle9Dialect"
msgstr "org.hibernate.dialect.Oracle9Dialect"

#. Tag: entry
#: configuration.xml:1055
#, no-c-format
msgid "Sybase"
msgstr "Sybase"

#. Tag: literal
#: configuration.xml:1055
#, no-c-format
msgid "org.hibernate.dialect.SybaseDialect"
msgstr "org.hibernate.dialect.SybaseDialect"

#. Tag: entry
#: configuration.xml:1058
#, no-c-format
msgid "Sybase Anywhere"
msgstr "Sybase Anywhere"

#. Tag: literal
#: configuration.xml:1058
#, no-c-format
msgid "org.hibernate.dialect.SybaseAnywhereDialect"
msgstr "org.hibernate.dialect.SybaseAnywhereDialect"

#. Tag: entry
#: configuration.xml:1061
#, no-c-format
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. Tag: literal
#: configuration.xml:1061
#, no-c-format
msgid "org.hibernate.dialect.SQLServerDialect"
msgstr "org.hibernate.dialect.SQLServerDialect"

#. Tag: entry
#: configuration.xml:1064
#, no-c-format
msgid "SAP DB"
msgstr "SAP DB"

#. Tag: literal
#: configuration.xml:1064
#, no-c-format
msgid "org.hibernate.dialect.SAPDBDialect"
msgstr "org.hibernate.dialect.SAPDBDialect"

#. Tag: entry
#: configuration.xml:1067
#, no-c-format
msgid "Informix"
msgstr "Informix"

#. Tag: literal
#: configuration.xml:1067
#, no-c-format
msgid "org.hibernate.dialect.InformixDialect"
msgstr "org.hibernate.dialect.InformixDialect"

#. Tag: entry
#: configuration.xml:1070
#, no-c-format
msgid "HypersonicSQL"
msgstr "HypersonicSQL"

#. Tag: literal
#: configuration.xml:1070
#, no-c-format
msgid "org.hibernate.dialect.HSQLDialect"
msgstr "org.hibernate.dialect.HSQLDialect"

#. Tag: entry
#: configuration.xml:1073
#, no-c-format
msgid "Ingres"
msgstr "Ingres"

#. Tag: literal
#: configuration.xml:1073
#, no-c-format
msgid "org.hibernate.dialect.IngresDialect"
msgstr "org.hibernate.dialect.IngresDialect"

#. Tag: entry
#: configuration.xml:1076
#, no-c-format
msgid "Progress"
msgstr "Progress"

#. Tag: literal
#: configuration.xml:1076
#, no-c-format
msgid "org.hibernate.dialect.ProgressDialect"
msgstr "org.hibernate.dialect.ProgressDialect"

#. Tag: entry
#: configuration.xml:1079
#, no-c-format
msgid "Mckoi SQL"
msgstr "Mckoi SQL"

#. Tag: literal
#: configuration.xml:1079
#, no-c-format
msgid "org.hibernate.dialect.MckoiDialect"
msgstr "org.hibernate.dialect.MckoiDialect"

#. Tag: entry
#: configuration.xml:1082
#, no-c-format
msgid "Interbase"
msgstr "Interbase"

#. Tag: literal
#: configuration.xml:1082
#, no-c-format
msgid "org.hibernate.dialect.InterbaseDialect"
msgstr "org.hibernate.dialect.InterbaseDialect"

#. Tag: entry
#: configuration.xml:1085
#, no-c-format
msgid "Pointbase"
msgstr "Pointbase"

#. Tag: literal
#: configuration.xml:1085
#, no-c-format
msgid "org.hibernate.dialect.PointbaseDialect"
msgstr "org.hibernate.dialect.PointbaseDialect"

#. Tag: entry
#: configuration.xml:1088
#, no-c-format
msgid "FrontBase"
msgstr "FrontBase"

#. Tag: literal
#: configuration.xml:1088
#, no-c-format
msgid "org.hibernate.dialect.FrontbaseDialect"
msgstr "org.hibernate.dialect.FrontbaseDialect"

#. Tag: entry
#: configuration.xml:1091
#, no-c-format
msgid "Firebird"
msgstr "Firebird"

#. Tag: literal
#: configuration.xml:1091
#, no-c-format
msgid "org.hibernate.dialect.FirebirdDialect"
msgstr "org.hibernate.dialect.FirebirdDialect"

#. Tag: title
#: configuration.xml:1100
#, no-c-format
msgid "Outer Join Fetching"
msgstr "外部結合フェッチ"

#. Tag: para
#: configuration.xml:1102
#, no-c-format
msgid ""
"If your database supports ANSI, Oracle or Sybase style outer joins, "
"<emphasis>outer join fetching</emphasis> will often increase performance by "
"limiting the number of round trips to and from the database (at the cost of "
"possibly more work performed by the database itself). Outer join fetching "
"allows a whole graph of objects connected by many-to-one, one-to-many, many-"
"to-many and one-to-one associations to be retrieved in a single SQL "
"<literal>SELECT</literal>."
msgstr ""
"もしDBがANSIか、OracleかSybaseスタイルの外部結合をサポートしている場合、 "
"<emphasis>outer join fetching</emphasis> は、DBのSQL発行回数を節約し パフォー"
"マンスを良くします。（DB内でより多くの処理コストが発生します） 外部結合フェッ"
"チは、多対一、一対多、多対多、一対一のオブジェクト関連で グループオブジェクト"
"を1つのSQLで <literal>SELECT</literal> します。"

#. Tag: para
#: configuration.xml:1111
#, no-c-format
msgid ""
"Outer join fetching may be disabled <emphasis>globally</emphasis> by setting "
"the property <literal>hibernate.max_fetch_depth</literal> to <literal>0</"
"literal>. A setting of <literal>1</literal> or higher enables outer join "
"fetching for one-to-one and many-to-one associations which have been mapped "
"with <literal>fetch=\"join\"</literal>."
msgstr ""
"<literal>hibernate.max_fetch_depth</literal> プロパティの値を <literal>0</"
"literal> にすると Outer join fetchingを <emphasis>すべて</emphasis> 無効にす"
"ることになります。 <literal>1</literal> やそれ以上の値を設定すると、外部結合"
"フェッチが有効になり、 一対一と多対一関連が <literal>fetch=\"join\"</"
"literal> としてマッピングされます。"

#. Tag: para
#: configuration.xml:1119
#, no-c-format
msgid "See <xref linkend=\"performance-fetching\"/> for more information."
msgstr "See <xref linkend=\"performance-fetching\"/> for more information."

#. Tag: title
#: configuration.xml:1126
#, no-c-format
msgid "Binary Streams"
msgstr "バイナリストリーム"

#. Tag: para
#: configuration.xml:1128
#, no-c-format
msgid ""
"Oracle limits the size of <literal>byte</literal> arrays that may be passed "
"to/from its JDBC driver. If you wish to use large instances of "
"<literal>binary</literal> or <literal>serializable</literal> type, you "
"should enable <literal>hibernate.jdbc.use_streams_for_binary</literal>. "
"<emphasis>This is a system-level setting only.</emphasis>"
msgstr ""
"OracleはJDBCドライバとの間でやりとりされる <literal>byte</literal> 配列のサイ"
"ズを制限します。 <literal>binary</literal> や <literal>serializable</"
"literal> 型の大きなインスタンスを使いたければ、 <literal>hibernate.jdbc."
"use_streams_for_binary</literal> を有効にしてください。 ただし <emphasis>これ"
"はシステムレベルの設定だけです</emphasis> 。"

#. Tag: title
#: configuration.xml:1139
#, no-c-format
msgid "Second-level and query cache"
msgstr "2次キャッシュとクエリーキャッシュ"

#. Tag: para
#: configuration.xml:1141
#, no-c-format
msgid ""
"The properties prefixed by <literal>hibernate.cache</literal> allow you to "
"use a process or cluster scoped second-level cache system with Hibernate. "
"See the <xref linkend=\"performance-cache\"/> for more details."
msgstr ""
"<literal>hibernate.cache</literal> プロパティ接頭辞は Hibernateでプロセスやク"
"ラスタ二次キャッシュを使うとことを許可します。 <xref linkend=\"performance-"
"cache\"/>により多くの詳細があります。"

#. Tag: title
#: configuration.xml:1151
#, no-c-format
msgid "Query Language Substitution"
msgstr "クエリー言語の置き換え"

#. Tag: para
#: configuration.xml:1153
#, no-c-format
msgid ""
"You may define new Hibernate query tokens using <literal>hibernate.query."
"substitutions</literal>. For example:"
msgstr ""
"<literal>hibernate.query.substitutions</literal> を使うことで、 新しい"
"Hibernateクエリトークンを定義できます。 例："

#. Tag: programlisting
#: configuration.xml:1158
#, no-c-format
msgid "hibernate.query.substitutions true=1, false=0"
msgstr "hibernate.query.substitutions true=1, false=0"

#. Tag: para
#: configuration.xml:1160
#, no-c-format
msgid ""
"would cause the tokens <literal>true</literal> and <literal>false</literal> "
"to be translated to integer literals in the generated SQL."
msgstr ""
"これはトークン <literal>true</literal> と <literal>false</literal> を、 生成"
"されるSQLにおいて整数リテラルに翻訳します。"

#. Tag: programlisting
#: configuration.xml:1165
#, no-c-format
msgid "hibernate.query.substitutions toLowercase=LOWER"
msgstr "hibernate.query.substitutions toLowercase=LOWER"

#. Tag: para
#: configuration.xml:1167
#, no-c-format
msgid "would allow you to rename the SQL <literal>LOWER</literal> function."
msgstr ""
"これはSQLの <literal>LOWER</literal> 関数の名前の付け替えを可能にします。"

#. Tag: title
#: configuration.xml:1174
#, no-c-format
msgid "Hibernate statistics"
msgstr "Hibernate 統計"

#. Tag: para
#: configuration.xml:1176
#, no-c-format
msgid ""
"If you enable <literal>hibernate.generate_statistics</literal>, Hibernate "
"will expose a number of metrics that are useful when tuning a running system "
"via <literal>SessionFactory.getStatistics()</literal>. Hibernate can even be "
"configured to expose these statistics via JMX. Read the Javadoc of the "
"interfaces in <literal>org.hibernate.stats</literal> for more information."
msgstr ""
"<literal>hibernate.generate_statistics</literal> を有効にした場合、 動作して"
"いるシステムをチューニングするときに、<literal>SessionFactory.getStatistics()"
"</literal> を経由して、Hibernateは便利な統計情報を出力します。 JMXを経由して"
"統計情報を出力することも可能です。 Javadocの <literal>org.hibernate.stats</"
"literal> パッケージ内の インターフェイスにはより多くの情報があります。"

#. Tag: title
#: configuration.xml:1188
#, no-c-format
msgid "Logging"
msgstr "ロギング"

#. Tag: para
#: configuration.xml:1190
#, no-c-format
msgid "Hibernate logs various events using Apache commons-logging."
msgstr ""
"HibernateはApache commons-logginを使って、さまざまなイベントをログとして 出力"
"します。"

#. Tag: para
#: configuration.xml:1194
#, no-c-format
msgid ""
"The commons-logging service will direct output to either Apache Log4j (if "
"you include <literal>log4j.jar</literal> in your classpath) or JDK1.4 "
"logging (if running under JDK1.4 or above). You may download Log4j from "
"<literal>http://jakarta.apache.org</literal>. To use Log4j you will need to "
"place a <literal>log4j.properties</literal> file in your classpath, an "
"example properties file is distributed with Hibernate in the <literal>src/</"
"literal> directory."
msgstr ""
"commons-loggingサービスは（クラスパスに <literal>log4j.jar</literal> を含めれ"
"ば）Apache Log4jに、 また（JDK1.4かそれ以上で実行させれば）JDK1.4 loggingに直"
"接出力します。 Log4jは <literal>http://jakarta.apache.org</literal> からダウ"
"ンロードできます。 Log4jを使うためには、クラスパスに <literal>log4j."
"properties</literal> ファイルを配置する必要があります。 例のプロパティファイ"
"ルはHibernateと一緒に配布され、それは <literal>src/</literal> ディレクトリに"
"あります。"

#. Tag: para
#: configuration.xml:1204
#, no-c-format
msgid ""
"We strongly recommend that you familiarize yourself with Hibernate's log "
"messages. A lot of work has been put into making the Hibernate log as "
"detailed as possible, without making it unreadable. It is an essential "
"troubleshooting device. The most interesting log categories are the "
"following:"
msgstr ""
"Hibernateのログメッセージに慣れることを強くおすすめします。 Hibernateのログは"
"読みやすく、できる限り詳細になるように努力されています。 これは必須のトラブル"
"シューティングデバイスです。 以下に重要なログのカテゴリを示します。"

#. Tag: title
#: configuration.xml:1213
#, no-c-format
msgid "Hibernate Log Categories"
msgstr "Hibernate ログカテゴリ"

#. Tag: entry
#: configuration.xml:1219
#, no-c-format
msgid "Category"
msgstr "カテゴリ"

#. Tag: entry
#: configuration.xml:1220
#, no-c-format
msgid "Function"
msgstr "機能"

#. Tag: literal
#: configuration.xml:1225
#, no-c-format
msgid "org.hibernate.SQL"
msgstr "org.hibernate.SQL"

#. Tag: entry
#: configuration.xml:1226
#, no-c-format
msgid "Log all SQL DML statements as they are executed"
msgstr "実行したすべてのSQL（DDL）ステートメントをロギングします。"

#. Tag: literal
#: configuration.xml:1229
#, no-c-format
msgid "org.hibernate.type"
msgstr "org.hibernate.type"

#. Tag: entry
#: configuration.xml:1230
#, no-c-format
msgid "Log all JDBC parameters"
msgstr "すべてのJDBCパラメータをロギングします。"

#. Tag: literal
#: configuration.xml:1233
#, no-c-format
msgid "org.hibernate.tool.hbm2ddl"
msgstr "org.hibernate.tool.hbm2ddl"

#. Tag: entry
#: configuration.xml:1234
#, no-c-format
msgid "Log all SQL DDL statements as they are executed"
msgstr "実行したすべてのSQL（DDL）ステートメントをロギングします。"

#. Tag: literal
#: configuration.xml:1237
#, no-c-format
msgid "org.hibernate.pretty"
msgstr "org.hibernate.pretty"

#. Tag: entry
#: configuration.xml:1238
#, no-c-format
msgid ""
"Log the state of all entities (max 20 entities) associated with the session "
"at flush time"
msgstr ""
"sessionに関連するすべてのエンティティ（最大２０）のフラッシュ時間をロギングし"
"ます。"

#. Tag: literal
#: configuration.xml:1244
#, no-c-format
msgid "org.hibernate.cache"
msgstr "org.hibernate.cache"

#. Tag: entry
#: configuration.xml:1245
#, no-c-format
msgid "Log all second-level cache activity"
msgstr "すべての２次キャッシュの動作をロギングします。"

#. Tag: literal
#: configuration.xml:1248
#, no-c-format
msgid "org.hibernate.transaction"
msgstr "org.hibernate.transaction"

#. Tag: entry
#: configuration.xml:1249
#, no-c-format
msgid "Log transaction related activity"
msgstr "トランザクションに関連する動作をロギングします。"

#. Tag: literal
#: configuration.xml:1252
#, no-c-format
msgid "org.hibernate.jdbc"
msgstr "org.hibernate.jdbc"

#. Tag: entry
#: configuration.xml:1253
#, no-c-format
msgid "Log all JDBC resource acquisition"
msgstr "JDBCリソース取得をロギングします。"

#. Tag: literal
#: configuration.xml:1256
#, no-c-format
msgid "org.hibernate.hql.ast.AST"
msgstr "org.hibernate.hql.ast.AST"

#. Tag: entry
#: configuration.xml:1257
#, no-c-format
msgid "Log HQL and SQL ASTs during query parsing"
msgstr "HQLとSQLのASTのクエリーパースをロギングします。"

#. Tag: literal
#: configuration.xml:1262
#, no-c-format
msgid "org.hibernate.secure"
msgstr "org.hibernate.secure"

#. Tag: entry
#: configuration.xml:1263
#, no-c-format
msgid "Log all JAAS authorization requests"
msgstr "すべてのJAAS分析をロギングします。"

#. Tag: literal
#: configuration.xml:1266
#, no-c-format
msgid "org.hibernate"
msgstr "org.hibernate"

#. Tag: entry
#: configuration.xml:1267
#, no-c-format
msgid ""
"Log everything (a lot of information, but very useful for troubleshooting)"
msgstr ""
"すべてをロギングします。（情報が大量になりますが、トラブルシューティングには"
"便利です）"

#. Tag: para
#: configuration.xml:1276
#, no-c-format
msgid ""
"When developing applications with Hibernate, you should almost always work "
"with <literal>debug</literal> enabled for the category <literal>org."
"hibernate.SQL</literal>, or, alternatively, the property <literal>hibernate."
"show_sql</literal> enabled."
msgstr ""
"Hibernateでアプリケーションを作成するときは、<literal>org.hibernate.SQL</"
"literal> カテゴリの <literal>debug</literal> を常に有効にしておいたほうが良い"
"でしょう。 代替方法として、<literal>hibernate.show_sql</literal> を有効にする"
"方法があります。"

#. Tag: title
#: configuration.xml:1286
#, no-c-format
msgid "Implementing a <literal>NamingStrategy</literal>"
msgstr "<literal>NamingStrategy</literal> の実装"

#. Tag: para
#: configuration.xml:1288
#, no-c-format
msgid ""
"The interface <literal>org.hibernate.cfg.NamingStrategy</literal> allows you "
"to specify a \"naming standard\" for database objects and schema elements."
msgstr ""
"インターフェイス <literal>net.sf.hibernate.cfg.NamingStrategy</literal> を使"
"うと データベースオブジェクトとスキーマ要素のための「命名標準」を指定できま"
"す。"

#. Tag: para
#: configuration.xml:1293
#, no-c-format
msgid ""
"You may provide rules for automatically generating database identifiers from "
"Java identifiers or for processing \"logical\" column and table names given "
"in the mapping file into \"physical\" table and column names. This feature "
"helps reduce the verbosity of the mapping document, eliminating repetitive "
"noise (<literal>TBL_</literal> prefixes, for example). The default strategy "
"used by Hibernate is quite minimal."
msgstr ""
"Javaの識別子からデータベースの識別子を自動生成するためのルールや、 マッピング"
"ファイルで与えた「論理的な」カラムとテーブル名から 「物理的な」テーブルとカラ"
"ム名を生成するためのルールを用意することができます。 この機能は繰り返しの雑音"
"（例えば <literal>TBL_</literal> プリフィックス）を取り除き、 マッピングド"
"キュメントの冗長さを減らすことに役立ちます。 Hibernateが使うデフォルトの戦略"
"はかなり最小限に近いものです。"

#. Tag: para
#: configuration.xml:1302
#, no-c-format
msgid ""
"You may specify a different strategy by calling <literal>Configuration."
"setNamingStrategy()</literal> before adding mappings:"
msgstr ""
"マッピングを追加する前に <literal>Configuration.setNamingStrategy()</"
"literal> を呼ぶことで 以下のように異なる戦略を指定することができます："

#. Tag: programlisting
#: configuration.xml:1307
#, no-c-format
msgid ""
"<![CDATA[SessionFactory sf = new Configuration()\n"
"    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
"    .addFile(\"Item.hbm.xml\")\n"
"    .addFile(\"Bid.hbm.xml\")\n"
"    .buildSessionFactory();]]>"
msgstr ""

#. Tag: para
#: configuration.xml:1309
#, no-c-format
msgid ""
"<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> is a built-in "
"strategy that might be a useful starting point for some applications."
msgstr ""
"<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> は組み込みの戦略"
"です。 これはいくつかのアプリケーションにとって有用な開始点となるかもしれませ"
"ん。"

#. Tag: title
#: configuration.xml:1317
#, no-c-format
msgid "XML configuration file"
msgstr "XML設定ファイル"

#. Tag: para
#: configuration.xml:1319
#, no-c-format
msgid ""
"An alternative approach to configuration is to specify a full configuration "
"in a file named <literal>hibernate.cfg.xml</literal>. This file can be used "
"as a replacement for the <literal>hibernate.properties</literal> file or, if "
"both are present, to override properties."
msgstr ""
"もう1つの方法は <literal>hibernate.cfg.xml</literal> という名前のファイルで "
"十分な設定を指定する方法です。 このファイルは <literal>hibernate.properties</"
"literal> ファイルの代わりとなります。 もし両方のファイルがあれば、プロパティ"
"が置き換えられます。"

#. Tag: para
#: configuration.xml:1326
#, no-c-format
msgid ""
"The XML configuration file is by default expected to be in the root o your "
"<literal>CLASSPATH</literal>. Here is an example:"
msgstr ""
"XML設定ファイルは初期設定で <literal>CLASSPATH</literal> に配置してくださ"
"い。 これが例です："

#. Tag: programlisting
#: configuration.xml:1331
#, no-c-format
msgid ""
"<![CDATA[<?xml version='1.0' encoding='utf-8'?>\n"
"<!DOCTYPE hibernate-configuration PUBLIC\n"
"    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
"    \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\n"
"\n"
"<hibernate-configuration>\n"
"\n"
"    <!-- a SessionFactory instance listed as /jndi/name -->\n"
"    <session-factory\n"
"        name=\"java:hibernate/SessionFactory\">\n"
"\n"
"        <!-- properties -->\n"
"        <property name=\"connection.datasource\">java:/comp/env/jdbc/MyDB</"
"property>\n"
"        <property name=\"dialect\">org.hibernate.dialect.MySQLDialect</"
"property>\n"
"        <property name=\"show_sql\">false</property>\n"
"        <property name=\"transaction.factory_class\">\n"
"            org.hibernate.transaction.JTATransactionFactory\n"
"        </property>\n"
"        <property name=\"jta.UserTransaction\">java:comp/UserTransaction</"
"property>\n"
"\n"
"        <!-- mapping files -->\n"
"        <mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/>\n"
"        <mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/>\n"
"\n"
"        <!-- cache settings -->\n"
"        <class-cache class=\"org.hibernate.auction.Item\" usage=\"read-write"
"\"/>\n"
"        <class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-only\"/"
">\n"
"        <collection-cache collection=\"org.hibernate.auction.Item.bids\" "
"usage=\"read-write\"/>\n"
"\n"
"    </session-factory>\n"
"\n"
"</hibernate-configuration>]]>"
msgstr ""

#. Tag: para
#: configuration.xml:1333
#, no-c-format
msgid ""
"As you can see, the advantage of this approach is the externalization of the "
"mapping file names to configuration. The <literal>hibernate.cfg.xml</"
"literal> is also more convenient once you have to tune the Hibernate cache. "
"Note that is your choice to use either <literal>hibernate.properties</"
"literal> or <literal>hibernate.cfg.xml</literal>, both are equivalent, "
"except for the above mentioned benefits of using the XML syntax."
msgstr ""
"見てのとおり、この方法の優位性は設定のためのマッピングファイル名を外出しにで"
"きることです。 Hibernateキャッシュをチューニングしなければならないのであれ"
"ば、 <literal>hibernate.cfg.xml</literal> はより便利です。 "
"<literal>hibernate.properties</literal> と <literal>hibernate.cfg.xml</"
"literal> の どちらかを使えることを覚えておいてください。 二つは同じもので、違"
"うところといえばXML構文を使うことの利点だけです。"

#. Tag: para
#: configuration.xml:1342
#, no-c-format
msgid "With the XML configuration, starting Hibernate is then as simple as"
msgstr "XML設定を使うことで、Hibernateは以下のようにシンプルになります。"

#. Tag: programlisting
#: configuration.xml:1346
#, no-c-format
msgid ""
"<![CDATA[SessionFactory sf = new Configuration().configure()."
"buildSessionFactory();]]>"
msgstr ""

#. Tag: para
#: configuration.xml:1348
#, no-c-format
msgid "You can pick a different XML configuration file using"
msgstr "違うXML設定ファイルを使うこともできます。"

#. Tag: programlisting
#: configuration.xml:1352
#, no-c-format
msgid ""
"<![CDATA[SessionFactory sf = new Configuration()\n"
"    .configure(\"catdb.cfg.xml\")\n"
"    .buildSessionFactory();]]>"
msgstr ""

#. Tag: title
#: configuration.xml:1357
#, no-c-format
msgid "J2EE Application Server integration"
msgstr "J2EEアプリケーションサーバとの統合"

#. Tag: para
#: configuration.xml:1359
#, no-c-format
msgid "Hibernate has the following integration points for J2EE infrastructure:"
msgstr "HibernateはJ2EE構造と統合するポイントをサポートしています。"

#. Tag: para
#: configuration.xml:1365
#, no-c-format
msgid ""
"<emphasis>Container-managed datasources</emphasis>: Hibernate can use JDBC "
"connections managed by the container and provided through JNDI. Usually, a "
"JTA compatible <literal>TransactionManager</literal> and a "
"<literal>ResourceManager</literal> take care of transaction management "
"(CMT), esp. distributed transaction handling across several datasources. You "
"may of course also demarcate transaction boundaries programmatically (BMT) "
"or you might want to use the optional Hibernate <literal>Transaction</"
"literal> API for this to keep your code portable."
msgstr ""
"<emphasis>コンテナ管理データソース</emphasis>：Hibernateは JNDIが提供し、コン"
"テナが管理するJDBCコネクションを使用できます。 通常、JTA準拠の "
"<literal>TransactionManager</literal> と <literal>ResourceManager</literal> "
"がトランザクション管理(CMT)、 特に様々なデータソースにまたがる分散トランザク"
"ションを扱います。 当然プログラムでトランザクション境界を指定できます(BMT)。 "
"あるいは、記述したコードのポータビリティを保つために、 オプションのHibernate"
"の <literal>Transaction</literal> APIを使いたくなるかもしれません。"

#. Tag: para
#: configuration.xml:1380
#, no-c-format
msgid ""
"<emphasis>Automatic JNDI binding</emphasis>: Hibernate can bind its "
"<literal>SessionFactory</literal> to JNDI after startup."
msgstr ""
"<emphasis>自動JNDIバインディング</emphasis>：HibernateはJNDIが立ち上がった後"
"に <literal>SessionFactory</literal> を生成します。"

#. Tag: para
#: configuration.xml:1389
#, no-c-format
msgid ""
"<emphasis>JTA Session binding:</emphasis> The Hibernate <literal>Session</"
"literal> may be automatically bound to the scope of JTA transactions. Simply "
"lookup the <literal>SessionFactory</literal> from JNDI and get the current "
"<literal>Session</literal>. Let Hibernate take care of flushing and closing "
"the <literal>Session</literal> when your JTA transaction completes. "
"Transaction demarcation is either declarative (CMT) or programmatic (BMT/"
"UserTransaction)."
msgstr ""
"<emphasis>JTAセッションバインディング</emphasis> ： Hibernate "
"<literal>Session</literal> のトランザクション境界はJTAトランザクションと同じ"
"になります。 単純に <literal>SessionFactory</literal> をJNDIからlookupして、 "
"現在の <literal>Session</literal> を取得します。 JTAトランザクションが完了し"
"たときに、Hibernateが <literal>Session</literal> をフラッシュし、クローズしま"
"す。 EJBデプロイメントディスクリプタの中に、トランザクション境界を宣言しま"
"す。"

#. Tag: para
#: configuration.xml:1402
#, no-c-format
msgid ""
"<emphasis>JMX deployment:</emphasis> If you have a JMX capable application "
"server (e.g. JBoss AS), you can chose to deploy Hibernate as a managed "
"MBean. This saves you the one line startup code to build your "
"<literal>SessionFactory</literal> from a <literal>Configuration</literal>. "
"The container will startup your <literal>HibernateService</literal>, and "
"ideally also take care of service dependencies (Datasource has to be "
"available before Hibernate starts, etc)."
msgstr ""
"<emphasis>JMXデプロイ:</emphasis> もしJMXが使用可能なアプリケーションサーバ"
"（例えばJBOSS） がある場合、HibernateをMBeanとしてデプロイすることを選べま"
"す。 これは <literal>Configuration</literal> から <literal>SessionFactory</"
"literal> を 生成するコードを無くすことができます。 コンテナは "
"<literal>HibernateService</literal> を起動し、 サービスの依存を理想的に管理し"
"ます（データソースはHibernateやその他が起動する前に 使用できるようにしなけれ"
"ばなりません）。"

#. Tag: para
#: configuration.xml:1413
#, no-c-format
msgid ""
"Depending on your environment, you might have to set the configuration "
"option <literal>hibernate.connection.aggressive_release</literal> to true if "
"your application server shows \"connection containment\" exceptions."
msgstr ""
"環境に依存しますが、もし、アプリケーションサーバが\"connection containment"
"\"の例外をスローするなら 設定のオプション <literal>hibernate.connection."
"aggressive_release</literal> をtrueにしてください。"

#. Tag: title
#: configuration.xml:1420
#, no-c-format
msgid "Transaction strategy configuration"
msgstr "トランザクション戦略設定"

#. Tag: para
#: configuration.xml:1422
#, no-c-format
msgid ""
"The Hibernate <literal>Session</literal> API is independent of any "
"transaction demarcation system in your architecture. If you let Hibernate "
"use JDBC directly, through a connection pool, you may begin and end your "
"transactions by calling the JDBC API. If you run in a J2EE application "
"server, you might want to use bean-managed transactions and call the JTA API "
"and <literal>UserTransaction</literal> when needed."
msgstr ""
"Hibernate <literal>Session</literal> APIは、アーキテクチャ内のシステムの管轄"
"である あらゆるトランザクションに依存しません。 もしコネクションプールのJDBC"
"を直接使いたい場合、JDBC APIから トランザクションを呼ぶことができます。 も"
"し、J2EEアプリケーションサーバで動作させるなら、Bean管理トランザクションを使"
"い、 必要に応じて <literal>UserTransaction</literal> をJTA APIから呼ぶことに"
"なるでしょう。"

#. Tag: para
#: configuration.xml:1430
#, no-c-format
msgid ""
"To keep your code portable between these two (and other) environments we "
"recommend the optional Hibernate <literal>Transaction</literal> API, which "
"wraps and hides the underlying system. You have to specify a factory class "
"for <literal>Transaction</literal> instances by setting the Hibernate "
"configuration property <literal>hibernate.transaction.factory_class</"
"literal>."
msgstr ""
"2つ（それ以上）の環境で互換性のあるコードを維持するために、オプションとして根"
"本的なシステムを ラッピングするHibernate <literal>Transaction</literal> APIを"
"推奨します。 Hibernate設定プロパティの <literal>hibernate.transaction."
"factory_class</literal> を設定することで ある特定の <literal>Transaction</"
"literal> クラスのインスタンスを持つことができます。"

#. Tag: para
#: configuration.xml:1437
#, no-c-format
msgid "There are three standard (built-in) choices:"
msgstr "3つの基本的な（既にある）選択を挙げます："

#. Tag: literal
#: configuration.xml:1443
#, no-c-format
msgid "org.hibernate.transaction.JDBCTransactionFactory"
msgstr "org.hibernate.transaction.JDBCTransactionFactory"

#. Tag: para
#: configuration.xml:1445
#, no-c-format
msgid "delegates to database (JDBC) transactions (default)"
msgstr "データベース(JDBC)トランザクションに委譲します（デフォルト）"

#. Tag: literal
#: configuration.xml:1449
#, no-c-format
msgid "org.hibernate.transaction.JTATransactionFactory"
msgstr "org.hibernate.transaction.JTATransactionFactory"

#. Tag: para
#: configuration.xml:1451
#, no-c-format
msgid ""
"delegates to container-managed transaction if an existing transaction is "
"underway in this context (e.g. EJB session bean method), otherwise a new "
"transaction is started and bean-managed transaction are used."
msgstr ""
"もし、このコンテキスト（例えば、EJBセッションBeanメソッド）で進行中のトランザ"
"クションが存在する、もしくは 新しいトランザクションが開始されており、Bean管理"
"トランザクションが使われている場合、 コンテナ管理トランザクションに委譲しま"
"す。"

#. Tag: literal
#: configuration.xml:1459
#, no-c-format
msgid "org.hibernate.transaction.CMTTransactionFactory"
msgstr "org.hibernate.transaction.CMTTransactionFactory"

#. Tag: para
#: configuration.xml:1461
#, no-c-format
msgid "delegates to container-managed JTA transactions"
msgstr "コンテナ管理JTAトランザクションに委譲します"

#. Tag: para
#: configuration.xml:1466
#, no-c-format
msgid ""
"You may also define your own transaction strategies (for a CORBA transaction "
"service, for example)."
msgstr ""
"自分自身のトランザクション戦略（例えば、CORBAトランザクションサービス）を定義"
"することもできます。"

#. Tag: para
#: configuration.xml:1471
#, no-c-format
msgid ""
"Some features in Hibernate (i.e. the second level cache, Contextual Sessions "
"with JTA, etc.) require access to the JTA <literal>TransactionManager</"
"literal> in a managed environment. In an application server you have to "
"specify how Hibernate should obtain a reference to the "
"<literal>TransactionManager</literal>, since J2EE does not standardize a "
"single mechanism:"
msgstr ""
"Hibernateのいくつかの機能（例えば、二次キャッシュ、JTAによるコンテキストセッ"
"ション 等）は 管理された環境の中のJTA <literal>TransactionManager</literal> "
"へのアクセスを要求します。 J2EEがひとつのメカニズムに規格化されていないの"
"で、 アプリケーションサーバにおいて、Hibernateが "
"<literal>TransactionManager</literal> のリファレンス を取得する方法を明確にす"
"る必要があります。"

#. Tag: title
#: configuration.xml:1479
#, no-c-format
msgid "JTA TransactionManagers"
msgstr "JTA トランザクションマネージャ"

#. Tag: entry
#: configuration.xml:1485
#, no-c-format
msgid "Transaction Factory"
msgstr "Transaction Factory"

#. Tag: entry
#: configuration.xml:1486
#, no-c-format
msgid "Application Server"
msgstr "Application Server"

#. Tag: literal
#: configuration.xml:1491
#, no-c-format
msgid "org.hibernate.transaction.JBossTransactionManagerLookup"
msgstr "org.hibernate.transaction.JBossTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1492
#, no-c-format
msgid "JBoss"
msgstr "JBoss"

#. Tag: literal
#: configuration.xml:1495
#, no-c-format
msgid "org.hibernate.transaction.WeblogicTransactionManagerLookup"
msgstr "org.hibernate.transaction.WeblogicTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1496
#, no-c-format
msgid "Weblogic"
msgstr "Weblogic"

#. Tag: literal
#: configuration.xml:1499
#, no-c-format
msgid "org.hibernate.transaction.WebSphereTransactionManagerLookup"
msgstr "org.hibernate.transaction.WebSphereTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1500
#, no-c-format
msgid "WebSphere"
msgstr "WebSphere"

#. Tag: literal
#: configuration.xml:1503
#, no-c-format
msgid "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup"
msgstr "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup"

#. Tag: entry
#: configuration.xml:1504
#, no-c-format
msgid "WebSphere 6"
msgstr "WebSphere 6"

#. Tag: literal
#: configuration.xml:1507
#, no-c-format
msgid "org.hibernate.transaction.OrionTransactionManagerLookup"
msgstr "org.hibernate.transaction.OrionTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1508
#, no-c-format
msgid "Orion"
msgstr "Orion"

#. Tag: literal
#: configuration.xml:1511
#, no-c-format
msgid "org.hibernate.transaction.ResinTransactionManagerLookup"
msgstr "org.hibernate.transaction.ResinTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1512
#, no-c-format
msgid "Resin"
msgstr "Resin"

#. Tag: literal
#: configuration.xml:1515
#, no-c-format
msgid "org.hibernate.transaction.JOTMTransactionManagerLookup"
msgstr "org.hibernate.transaction.JOTMTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1516
#, no-c-format
msgid "JOTM"
msgstr "JOTM"

#. Tag: literal
#: configuration.xml:1519
#, no-c-format
msgid "org.hibernate.transaction.JOnASTransactionManagerLookup"
msgstr "org.hibernate.transaction.JOnASTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1520
#, no-c-format
msgid "JOnAS"
msgstr "JOnAS"

#. Tag: literal
#: configuration.xml:1523
#, no-c-format
msgid "org.hibernate.transaction.JRun4TransactionManagerLookup"
msgstr "org.hibernate.transaction.JRun4TransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1524
#, no-c-format
msgid "JRun4"
msgstr "JRun4"

#. Tag: literal
#: configuration.xml:1527
#, no-c-format
msgid "org.hibernate.transaction.BESTransactionManagerLookup"
msgstr "org.hibernate.transaction.BESTransactionManagerLookup"

#. Tag: entry
#: configuration.xml:1528
#, no-c-format
msgid "Borland ES"
msgstr "Borland ES"

#. Tag: title
#: configuration.xml:1537
#, no-c-format
msgid "JNDI-bound <literal>SessionFactory</literal>"
msgstr "<literal>SessionFactory</literal> のJNDIへの登録"

#. Tag: para
#: configuration.xml:1539
#, no-c-format
msgid ""
"A JNDI bound Hibernate <literal>SessionFactory</literal> can simplify the "
"lookup of the factory and the creation of new <literal>Session</literal>s. "
"Note that this is not related to a JNDI bound <literal>Datasource</literal>, "
"both simply use the same registry!"
msgstr ""
"JNDIに登録したHibernate <literal>SessionFactory</literal> は単純に ファクトリ"
"をルックアップし、新しい <literal>Session</literal> を作ります。 これはJNDIに"
"登録された <literal>Datasource</literal> には関連せず、 お互いにシンプルにこ"
"れらの登録を使うことに注意してください。"

#. Tag: para
#: configuration.xml:1546
#, no-c-format
msgid ""
"If you wish to have the <literal>SessionFactory</literal> bound to a JNDI "
"namespace, specify a name (eg. <literal>java:hibernate/SessionFactory</"
"literal>) using the property <literal>hibernate.session_factory_name</"
"literal>. If this property is omitted, the <literal>SessionFactory</literal> "
"will not be bound to JNDI. (This is especially useful in environments with a "
"read-only JNDI default implementation, e.g. Tomcat.)"
msgstr ""
"もし <literal>SessionFactory</literal> をJNDIネームスペースに登録したい場"
"合、 特別な名前（例えば、 <literal>java:hibernate/SessionFactory</literal> ）"
"を <literal>hibernate.session_factory_name</literal> プロパティに使ってくださ"
"い もしこのプロパティを省略した場合、 <literal>SessionFactory</literal> は "
"JNDIに登録されません。（これはTomcatのようなデフォルト実装でJNDIが読みより専"
"用の環境の場合特に便利です。）"

#. Tag: para
#: configuration.xml:1554
#, no-c-format
msgid ""
"When binding the <literal>SessionFactory</literal> to JNDI, Hibernate will "
"use the values of <literal>hibernate.jndi.url</literal>, <literal>hibernate."
"jndi.class</literal> to instantiate an initial context. If they are not "
"specified, the default <literal>InitialContext</literal> will be used."
msgstr ""
"<literal>SessionFactory</literal> をJNDIに登録するとき、Hibernateは "
"<literal>hibernate.jndi.url</literal> の値を使用し、<literal>hibernate.jndi."
"class</literal> をイニシャルコンテキストとして具体化します。 もし何も設定しな"
"い場合は、デフォルトの <literal>InitialContext</literal> を使用します。"

#. Tag: para
#: configuration.xml:1561
#, no-c-format
msgid ""
"Hibernate will automatically place the <literal>SessionFactory</literal> in "
"JNDI after you call <literal>cfg.buildSessionFactory()</literal>. This means "
"you will at least have this call in some startup code (or utility class) in "
"your application, unless you use JMX deployment with the "
"<literal>HibernateService</literal> (discussed later)."
msgstr ""
"<literal>cfg.buildSessionFactory()</literal> をコール後 Hibernateは自動的に "
"<literal>SessionFactory</literal> をJNDIに配置します。 "
"<literal>HibernateService</literal> と一緒にJMXデプロイメントを使わない限"
"り、 これはこの呼び出しをアプリケーション内の何らかのスタートアップコード（も"
"しくはユーティリティクラス） に配置しなければならないことを意味します。（後で"
"議論します）"

#. Tag: para
#: configuration.xml:1568
#, no-c-format
msgid ""
"If you use a JNDI <literal>SessionFactory</literal>, an EJB or any other "
"class may obtain the <literal>SessionFactory</literal> using a JNDI lookup."
msgstr ""
"もしJNDI <literal>SessionFactory</literal> を使う場合、EJBや他のクラスは JNDI"
"ルックアップを使って <literal>SessionFactory</literal> を取得します。"

#. Tag: para
#: configuration.xml:1573
#, no-c-format
msgid ""
"We recommend that you bind the <literal>SessionFactory</literal> to JNDI in "
"a managed environment and use a <literal>static</literal> singleton "
"otherwise. To shield your application code from these details, we also "
"recommend to hide the actual lookup code for a <literal>SessionFactory</"
"literal> in a helper class, such as <literal>HibernateUtil.getSessionFactory"
"()</literal>. Note that such a class is also a convenient way to startup "
"Hibernate&mdash;see chapter 1."
msgstr ""
"管理された環境では <literal>SessionFactory</literal> をJNDIにバインドし、 そ"
"うでなければ <literal>static</literal> シングルトンを使うことを推奨します。 "
"こういった詳細からアプリケーションコードを保護するために、 "
"<literal>HibernateUtil.getSessionFactory()</literal> のようなヘルパークラスの"
"中に、 <literal>SessionFactory</literal> をルックアップするコードを隠すことを"
"推奨します。 このようなヘルパークラスはHibernateを開始する便利な手段でもあり"
"ます。 &mdash;１章を参照してください。"

#. Tag: title
#: configuration.xml:1585
#, no-c-format
msgid "Current Session context management with JTA"
msgstr "JTAによる現在のセッションコンテキストマネージメント"

#. Tag: para
#: configuration.xml:1587
#, no-c-format
msgid ""
"The easiest way to handle <literal>Session</literal>s and transactions is "
"Hibernates automatic \"current\" <literal>Session</literal> management. See "
"the discussion of <link linkend=\"architecture-current-session\">current "
"sessions</link>. Using the <literal>\"jta\"</literal> session context, if "
"there is no Hibernate <literal>Session</literal> associated with the current "
"JTA transaction, one will be started and associated with that JTA "
"transaction the first time you call <literal>sessionFactory.getCurrentSession"
"()</literal>. The <literal>Session</literal>s retrieved via "
"<literal>getCurrentSession()</literal> in <literal>\"jta\"</literal> context "
"will be set to automatically flush before the transaction completes, close "
"after the transaction completes, and aggressively release JDBC connections "
"after each statement. This allows the <literal>Session</literal>s to be "
"managed by the life cycle of the JTA transaction to which it is associated, "
"keeping user code clean of such management concerns. Your code can either "
"use JTA programmatically through <literal>UserTransaction</literal>, or "
"(recommended for portable code) use the Hibernate <literal>Transaction</"
"literal> API to set transaction boundaries. If you run in an EJB container, "
"declarative transaction demarcation with CMT is preferred."
msgstr ""
"もっとも簡単に <literal>Session</literal> とトランザクションを扱う方法は、 "
"Hibernateが自動的に「現在の」 <literal>Session</literal> を管理することで"
"す。 <xref linkend=\"architecture-current-session\">カレントセッション</"
"xref> の説明を参照してください。 もし <literal>「JTA」</literal> セッションコ"
"ンテキストを使った上で、 現在のJTAトランザクションとHibernate "
"<literal>Session</literal> が関連していない場合は、 最初に "
"<literal>sessionFactory.getCurrentSession()</literal> をコールし、 JTAトラン"
"ザクションとの関連付けを行ってください。 <literal>「JTA」</literal> コンテキ"
"ストの <literal>getCurrentSession()</literal> を 通じて取得した "
"<literal>Session</literal> は、トランザクションが完了する前に 自動的にフラッ"
"シュし、完了した後には自動的にクローズします。 また、各ステートメント後にJDBC"
"コネクションを積極的にリリースします。 これによりJTAトランザクションのライフ"
"サイクルで <literal>Session</literal> を管理することができ、 ユーザーのコード"
"からそのような管理をするコードを排除できます。 <literal>UserTransaction</"
"literal> を通じてJTAをプログラムで管理することができます。 または、（ポータブ"
"ルなコードであれば）Hibernate <literal>Transaction</literal> APIを トランザク"
"ション境界として使うこともできます。 EJBコンテナを使うときは、CMTによる宣言的"
"トランザクション境界が好ましいです。"

#. Tag: title
#: configuration.xml:1610
#, no-c-format
msgid "JMX deployment"
msgstr "JMXデプロイメント"

#. Tag: para
#: configuration.xml:1612
#, no-c-format
msgid ""
"The line <literal>cfg.buildSessionFactory()</literal> still has to be "
"executed somewhere to get a <literal>SessionFactory</literal> into JNDI. You "
"can do this either in a <literal>static</literal> initializer block (like "
"the one in <literal>HibernateUtil</literal>) or you deploy Hibernate as a "
"<emphasis>managed service</emphasis>."
msgstr ""
"<literal>SessionFactory</literal> をJNDIから取得するためには <literal>cfg."
"buildSessionFactory()</literal> 行をどこかで実行していなければなりません。 あ"
"なたはこれを、<literal>static</literal> 初期化ブロック内"
"（ <literal>HibernateUtil</literal> のような）か <emphasis>managed service</"
"emphasis> としてHibernateをデプロイするか、どちらかで実行できます。"

#. Tag: para
#: configuration.xml:1620
#, no-c-format
msgid ""
"Hibernate is distributed with <literal>org.hibernate.jmx.HibernateService</"
"literal> for deployment on an application server with JMX capabilities, such "
"as JBoss AS. The actual deployment and configuration is vendor specific. "
"Here is an example <literal>jboss-service.xml</literal> for JBoss 4.0.x:"
msgstr ""
"JBOSSのようなJMXの機能でアプリケーションサーバにデプロイするために "
"<literal>org.hibernate.jmx.HibernateService</literal> を使って、配置します。 "
"実際のデプロイメントと設定はベンダー特有です。 ここで例としてJBOSS 4.0.x用の "
"<literal>jboss-service.xml</literal> を示します。"

#. Tag: programlisting
#: configuration.xml:1627
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\"?>\n"
"<server>\n"
"\n"
"<mbean code=\"org.hibernate.jmx.HibernateService\"\n"
"    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory\">\n"
"\n"
"    <!-- Required services -->\n"
"    <depends>jboss.jca:service=RARDeployer</depends>\n"
"    <depends>jboss.jca:service=LocalTxCM,name=HsqlDS</depends>\n"
"\n"
"    <!-- Bind the Hibernate service to JNDI -->\n"
"    <attribute name=\"JndiName\">java:/hibernate/SessionFactory</attribute>\n"
"\n"
"    <!-- Datasource settings -->\n"
"    <attribute name=\"Datasource\">java:HsqlDS</attribute>\n"
"    <attribute name=\"Dialect\">org.hibernate.dialect.HSQLDialect</"
"attribute>\n"
"\n"
"    <!-- Transaction integration -->\n"
"    <attribute name=\"TransactionStrategy\">\n"
"        org.hibernate.transaction.JTATransactionFactory</attribute>\n"
"    <attribute name=\"TransactionManagerLookupStrategy\">\n"
"        org.hibernate.transaction.JBossTransactionManagerLookup</attribute>\n"
"    <attribute name=\"FlushBeforeCompletionEnabled\">true</attribute>\n"
"    <attribute name=\"AutoCloseSessionEnabled\">true</attribute>\n"
"\n"
"    <!-- Fetching options -->\n"
"    <attribute name=\"MaximumFetchDepth\">5</attribute>\n"
"\n"
"    <!-- Second-level caching -->\n"
"    <attribute name=\"SecondLevelCacheEnabled\">true</attribute>\n"
"    <attribute name=\"CacheProviderClass\">org.hibernate.cache."
"EhCacheProvider</attribute>\n"
"    <attribute name=\"QueryCacheEnabled\">true</attribute>\n"
"\n"
"    <!-- Logging -->\n"
"    <attribute name=\"ShowSqlEnabled\">true</attribute>\n"
"\n"
"    <!-- Mapping files -->\n"
"    <attribute name=\"MapResources\">auction/Item.hbm.xml,auction/Category."
"hbm.xml</attribute>\n"
"\n"
"</mbean>\n"
"\n"
"</server>]]>"
msgstr ""

#. Tag: para
#: configuration.xml:1629
#, no-c-format
msgid ""
"This file is deployed in a directory called <literal>META-INF</literal> and "
"packaged in a JAR file with the extension <literal>.sar</literal> (service "
"archive). You also need to package Hibernate, its required third-party "
"libraries, your compiled persistent classes, as well as your mapping files "
"in the same archive. Your enterprise beans (usually session beans) may be "
"kept in their own JAR file, but you may include this EJB JAR file in the "
"main service archive to get a single (hot-)deployable unit. Consult the "
"JBoss AS documentation for more information about JMX service and EJB "
"deployment."
msgstr ""
"このファイルは <literal>META-INF</literal> ディレクトリに配置され、 JARファイ"
"ルを拡張した <literal>.sar</literal> (service archive)でパッケージ化されま"
"す。 同様にHibernateパッケージも必要です。また、Hibernateはサードパーティのラ"
"イブラリも要求します。 コンパイルした永続化クラスとそのマッピングファイルも同"
"様にアーカイブ（.sarファイル）に入れます。 エンタープライズbean（通常はセッ"
"ションbean）は自身のJARファイルを保持しますが、 1回で（ホット）デプロイ可能な"
"ユニットのためにメインサービスアーカイブとしてこのEJB JARファイルをインクルー"
"ドする ことができます。JBossアプリケーションサーバのドキュメントにJXMサービス"
"と EJBデプロイメントのより多くの情報があります。"

#~ msgid "<placeholder-1/> (optional)"
#~ msgstr "<placeholder-1/> (オプション)"

#~ msgid "InitialContextFactory"
#~ msgstr "InitialContextFactory"

#~ msgid "class of the JNDI <placeholder-1/>"
#~ msgstr "JNDIクラス <placeholder-1/>"

#~ msgid "eg."
#~ msgstr "例："

#~ msgid "full.classname.of.Dialect"
#~ msgstr "full.classname.of.Dialect"

#~ msgid "debug"
#~ msgstr "debug"

#~ msgid "SCHEMA_NAME"
#~ msgstr "SCHEMA_NAME"

#~ msgid "CATALOG_NAME"
#~ msgstr "CATALOG_NAME"

#~ msgid "SessionFactory"
#~ msgstr "SessionFactory"

#~ msgid "jndi/composite/name"
#~ msgstr "jndi/composite/name"

#~ msgid "0"
#~ msgstr "0"

#~ msgid "false"
#~ msgstr "false"

#~ msgid "Statement.setFetchSize()"
#~ msgstr "Statement.setFetchSize()"

#~ msgid "true"
#~ msgstr "executeBatch()"

#~ msgid "executeBatch()"
#~ msgstr "true"

#~ msgid "Batcher"
#~ msgstr "Batcher"

#~ msgid "classname.of.BatcherFactory"
#~ msgstr "classname.of.BatcherFactory"

#~ msgid "binary"
#~ msgstr "binary"

#~ msgid "serializable"
#~ msgstr "serializable"

#~ msgid "PreparedStatement.getGeneratedKeys()"
#~ msgstr "PreparedStatement.getGeneratedKeys()"

#~ msgid "true|false"
#~ msgstr "true|false"

#~ msgid "ConnectionProvider"
#~ msgstr "ConnectionProvider"

#~ msgid "classname.of.ConnectionProvider"
#~ msgstr "classname.of.ConnectionProvider"

#~ msgid "java.sql.Connection"
#~ msgstr "java.sql.Connection"

#~ msgid "1, 2, 4, 8"
#~ msgstr "1, 2, 4, 8"

#~ msgid "after_statement"
#~ msgstr "after_statement"

#~ msgid "after_transaction"
#~ msgstr "after_transaction"

#~ msgid "auto"
#~ msgstr "auto"

#~ msgid "hibernate.connection."
#~ msgstr "&lt;propertyName&gt;"

#, fuzzy
#~ msgid "&lt;propertyName&gt;"
#~ msgstr ""
#~ "#-#-#-#-#  - (PACKAGE VERSION)  #-#-#-#-#\n"
#~ "hibernate.connection.<placeholder-1/>\n"
#~ "#-#-#-#-#  - (PACKAGE VERSION)  #-#-#-#-#\n"
#~ "propertyName\n"
#~ "#-#-#-#-#  - (PACKAGE VERSION)  #-#-#-#-#\n"
#~ "hibernate.jndi.<placeholder-1/>\n"
#~ "#-#-#-#-#  - (PACKAGE VERSION)  #-#-#-#-#\n"
#~ "propertyName"

#~ msgid "DriverManager.getConnection()"
#~ msgstr "DriverManager.getConnection()"

#~ msgid "Pass the JDBC property <placeholder-1/> to <placeholder-2/>."
#~ msgstr ""
#~ "JDBCの <placeholder-1/> プロパティを、 <placeholder-2/> に渡します。"

#~ msgid "hibernate.jndi."
#~ msgstr "&lt;propertyName&gt;"

#~ msgid "Pass the property <placeholder-1/> to the JNDI <placeholder-2/>."
#~ msgstr "<placeholder-1/> プロパティを、 JNDI <placeholder-2/> に渡します。"

#~ msgid "CacheProvider"
#~ msgstr "CacheProvider"

#~ msgid "classname.of.CacheProvider"
#~ msgstr "classname.of.CacheProvider"

#~ msgid "&lt;cache&gt;"
#~ msgstr "&lt;cache&gt;"

#~ msgid "QueryCache"
#~ msgstr "QueryCache"

#~ msgid "StandardQueryCache"
#~ msgstr "StandardQueryCache"

#~ msgid "classname.of.QueryCache"
#~ msgstr "classname.of.QueryCache"

#~ msgid "prefix"
#~ msgstr "prefix"

#~ msgid "TransactionFactory"
#~ msgstr "Transaction"

#~ msgid "Transaction"
#~ msgstr "TransactionFactory"

#~ msgid "JDBCTransactionFactory"
#~ msgstr "JDBCTransactionFactory"

#~ msgid "classname.of.TransactionFactory"
#~ msgstr "classname.of.TransactionFactory"

#~ msgid "JTATransactionFactory"
#~ msgstr "UserTransaction"

#~ msgid "UserTransaction"
#~ msgstr "JTATransactionFactory"

#~ msgid "TransactionManagerLookup"
#~ msgstr "TransactionManagerLookup"

#~ msgid "classname.of.TransactionManagerLookup"
#~ msgstr "classname.of.TransactionManagerLookup"

#~ msgid "Session"
#~ msgstr "Session"

#~ msgid "hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC"
#~ msgstr "hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC"

#~ msgid "create-drop"
#~ msgstr "create-drop"

#~ msgid "hibernate.cfg.xml"
#~ msgstr "hibernate.cfg.xml"

#~ msgid "DB2"
#~ msgstr "DB2"
